// -----// IR Dump Before Inliner (inline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de192021c222324252627282930c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg23: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg25: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg26: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %2 = tt.get_program_id z : i32 loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc4)
    %c1_i32 = arith.constant 1 : i32 loc(#loc4)
    %3 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc4)
    %4 = arith.bitcast %arg13 : i32 to i32 loc(#loc4)
    %5 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc4)
    %6 = llvm.mlir.undef : i32 loc(#loc4)
    %7 = scf.for %arg27 = %3 to %4 step %5 iter_args(%arg28 = %2) -> (i32)  : i32 {
      %8 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %9 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc6)
      %c1_i32_1 = arith.constant 1 : i32 loc(#loc6)
      %10 = arith.bitcast %c0_i32_0 : i32 to i32 loc(#loc6)
      %11 = arith.bitcast %9 : i32 to i32 loc(#loc6)
      %12 = arith.bitcast %c1_i32_1 : i32 to i32 loc(#loc6)
      %13 = llvm.mlir.undef : i32 loc(#loc6)
      scf.for %arg29 = %10 to %11 step %12  : i32 {
        %14 = arith.divsi %arg29, %arg20 : i32 loc(#loc7)
        %15 = arith.remsi %arg29, %arg20 : i32 loc(#loc8)
        %16 = arith.muli %14, %arg21 : i32 loc(#loc9)
        %17 = arith.subi %16, %arg23 : i32 loc(#loc10)
        %18 = arith.muli %15, %arg22 : i32 loc(#loc11)
        %19 = arith.subi %18, %arg24 : i32 loc(#loc12)
        %20 = tt.addptr %arg14, %arg27 : !tt.ptr<f32, 1>, i32 loc(#loc13)
        %21 = tt.load %20 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc14)
        %cst = arith.constant 0.000000e+00 : f32 loc(#loc15)
        %c0_i32_2 = arith.constant 0 : i32 loc(#loc16)
        %c1_i32_3 = arith.constant 1 : i32 loc(#loc16)
        %22 = arith.bitcast %c0_i32_2 : i32 to i32 loc(#loc16)
        %23 = arith.bitcast %arg6 : i32 to i32 loc(#loc16)
        %24 = arith.bitcast %c1_i32_3 : i32 to i32 loc(#loc16)
        %25 = llvm.mlir.undef : i32 loc(#loc16)
        %26 = scf.for %arg30 = %22 to %23 step %24 iter_args(%arg31 = %cst) -> (f32)  : i32 {
          %36 = arith.muli %arg27, %arg8 : i32 loc(#loc17)
          %37 = arith.muli %arg30, %arg9 : i32 loc(#loc18)
          %38 = arith.addi %36, %37 : i32 loc(#loc19)
          %39 = arith.muli %0, %arg1 : i32 loc(#loc20)
          %40 = arith.muli %arg30, %arg2 : i32 loc(#loc21)
          %41 = arith.addi %39, %40 : i32 loc(#loc22)
          %c0_i32_5 = arith.constant 0 : i32 loc(#loc23)
          %c1_i32_6 = arith.constant 1 : i32 loc(#loc23)
          %42 = arith.bitcast %c0_i32_5 : i32 to i32 loc(#loc23)
          %43 = arith.bitcast %arg11 : i32 to i32 loc(#loc23)
          %44 = arith.bitcast %c1_i32_6 : i32 to i32 loc(#loc23)
          %45 = llvm.mlir.undef : i32 loc(#loc23)
          %46 = scf.for %arg32 = %42 to %43 step %44 iter_args(%arg33 = %arg31) -> (f32)  : i32 {
            %47 = arith.muli %arg32, %arg25 : i32 loc(#loc24)
            %48 = arith.addi %17, %47 : i32 loc(#loc25)
            %c0_i32_7 = arith.constant 0 : i32 loc(#loc26)
            %49 = arith.cmpi slt, %48, %c0_i32_7 : i32 loc(#loc26)
            %50 = arith.cmpi sge, %48, %arg4 : i32 loc(#loc27)
            %51 = arith.ori %49, %50 : i1 loc(#loc28)
            %true = arith.constant true loc(#loc29)
            %52 = arith.xori %51, %true : i1 loc(#loc29)
            %53 = scf.if %52 -> (f32) {
              %c0_i32_8 = arith.constant 0 : i32 loc(#loc31)
              %c1_i32_9 = arith.constant 1 : i32 loc(#loc31)
              %54 = arith.bitcast %c0_i32_8 : i32 to i32 loc(#loc31)
              %55 = arith.bitcast %arg12 : i32 to i32 loc(#loc31)
              %56 = arith.bitcast %c1_i32_9 : i32 to i32 loc(#loc31)
              %57 = llvm.mlir.undef : i32 loc(#loc31)
              %58 = scf.for %arg34 = %54 to %55 step %56 iter_args(%arg35 = %arg33) -> (f32)  : i32 {
                %59 = arith.muli %arg34, %arg26 : i32 loc(#loc32)
                %60 = arith.addi %19, %59 : i32 loc(#loc33)
                %c0_i32_10 = arith.constant 0 : i32 loc(#loc34)
                %61 = arith.cmpi slt, %60, %c0_i32_10 : i32 loc(#loc34)
                %62 = arith.cmpi sge, %60, %arg5 : i32 loc(#loc35)
                %63 = arith.ori %61, %62 : i1 loc(#loc36)
                %true_11 = arith.constant true loc(#loc37)
                %64 = arith.xori %63, %true_11 : i1 loc(#loc37)
                %65 = scf.if %64 -> (f32) {
                  %66 = tt.addptr %arg7, %38 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %67 = arith.muli %arg32, %arg10 : i32 loc(#loc40)
                  %68 = tt.addptr %66, %67 : !tt.ptr<f32, 1>, i32 loc(#loc41)
                  %c1_i32_12 = arith.constant 1 : i32 loc(#loc42)
                  %69 = arith.muli %arg34, %c1_i32_12 : i32 loc(#loc42)
                  %70 = tt.addptr %68, %69 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %71 = tt.load %70 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %72 = tt.addptr %arg0, %41 : !tt.ptr<f32, 1>, i32 loc(#loc45)
                  %73 = arith.muli %48, %arg3 : i32 loc(#loc46)
                  %74 = tt.addptr %72, %73 : !tt.ptr<f32, 1>, i32 loc(#loc47)
                  %c1_i32_13 = arith.constant 1 : i32 loc(#loc48)
                  %75 = arith.muli %60, %c1_i32_13 : i32 loc(#loc48)
                  %76 = tt.addptr %74, %75 : !tt.ptr<f32, 1>, i32 loc(#loc49)
                  %77 = tt.load %76 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc50)
                  %78 = arith.mulf %77, %71 : f32 loc(#loc51)
                  %79 = arith.addf %arg35, %78 : f32 loc(#loc52)
                  scf.yield %79 : f32 loc(#loc52)
                } else {
                  scf.yield %arg35 : f32 loc(#loc53)
                } loc(#loc38)
                scf.yield %65 : f32 loc(#loc54)
              } loc(#loc31)
              scf.yield %58 : f32 loc(#loc31)
            } else {
              scf.yield %arg33 : f32 loc(#loc53)
            } loc(#loc30)
            scf.yield %53 : f32 loc(#loc55)
          } loc(#loc23)
          scf.yield %46 : f32 loc(#loc56)
        } loc(#loc16)
        %27 = arith.addf %26, %21 : f32 loc(#loc57)
        %28 = arith.muli %0, %arg16 : i32 loc(#loc58)
        %29 = arith.muli %arg27, %arg17 : i32 loc(#loc59)
        %30 = arith.addi %28, %29 : i32 loc(#loc60)
        %31 = arith.muli %14, %arg18 : i32 loc(#loc61)
        %32 = arith.addi %30, %31 : i32 loc(#loc62)
        %c1_i32_4 = arith.constant 1 : i32 loc(#loc63)
        %33 = arith.muli %15, %c1_i32_4 : i32 loc(#loc63)
        %34 = arith.addi %32, %33 : i32 loc(#loc64)
        %35 = tt.addptr %arg15, %34 : !tt.ptr<f32, 1>, i32 loc(#loc65)
        tt.store %35, %27 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc66)
      } loc(#loc6)
      scf.yield %13 : i32 loc(#loc67)
    } loc(#loc4)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":53:32)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":54:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:41)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:41)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:48)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:28)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:56)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:36)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:103)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:107)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc53 = loc(unknown)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc57 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc58 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc59 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc60 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc61 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc62 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc63 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:30)
#loc64 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc65 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc66 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc67 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:8)
#loc68 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)
