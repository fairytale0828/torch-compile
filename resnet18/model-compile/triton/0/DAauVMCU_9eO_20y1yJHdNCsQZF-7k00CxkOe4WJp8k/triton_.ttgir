#blocked = #triton_gpu.blocked<{sizePerThread = [8], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":18:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:86", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":18:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":18:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<1024xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<5> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<6> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<7> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<8> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_10 = arith.constant dense<3584> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<64> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<56> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<2> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<-1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<0> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<112> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<-7232> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<128> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<14336> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<-7168> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_21 = arith.constant dense<1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_22 = arith.constant dense<-7104> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_23 = arith.constant dense<-64> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_24 = arith.constant dense<7104> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_25 = arith.constant dense<7168> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_26 = arith.constant dense<7232> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<1024xi32, #blocked1> loc(#loc5)
    %8 = arith.divsi %6, %cst_10 : tensor<1024xi32, #blocked> loc(#loc6)
    %9 = arith.divsi %6, %cst_11 : tensor<1024xi32, #blocked> loc(#loc7)
    %10 = arith.remsi %9, %cst_12 : tensor<1024xi32, #blocked> loc(#loc8)
    %11 = arith.remsi %6, %cst_11 : tensor<1024xi32, #blocked> loc(#loc9)
    %12 = arith.muli %8, %cst_13 : tensor<1024xi32, #blocked> loc(#loc10)
    %13 = arith.addi %12, %cst_14 : tensor<1024xi32, #blocked> loc(#loc11)
    %14 = arith.extsi %13 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc12)
    %15 = arith.cmpi sge, %14, %cst_15 : tensor<1024xi64, #blocked> loc(#loc12)
    %16 = arith.cmpi slt, %14, %cst_16 : tensor<1024xi64, #blocked> loc(#loc13)
    %17 = arith.andi %15, %16 : tensor<1024xi1, #blocked> loc(#loc14)
    %18 = arith.muli %10, %cst_13 : tensor<1024xi32, #blocked> loc(#loc15)
    %19 = arith.addi %18, %cst_14 : tensor<1024xi32, #blocked> loc(#loc16)
    %20 = arith.extsi %19 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc17)
    %21 = arith.cmpi sge, %20, %cst_15 : tensor<1024xi64, #blocked> loc(#loc17)
    %22 = arith.cmpi slt, %20, %cst_16 : tensor<1024xi64, #blocked> loc(#loc18)
    %23 = arith.andi %21, %22 : tensor<1024xi1, #blocked> loc(#loc19)
    %24 = arith.andi %17, %23 : tensor<1024xi1, #blocked> loc(#loc20)
    %25 = arith.addi %11, %cst_17 : tensor<1024xi32, #blocked> loc(#loc21)
    %26 = arith.muli %10, %cst_18 : tensor<1024xi32, #blocked> loc(#loc22)
    %27 = arith.addi %25, %26 : tensor<1024xi32, #blocked> loc(#loc23)
    %28 = arith.muli %8, %cst_19 : tensor<1024xi32, #blocked> loc(#loc24)
    %29 = arith.addi %27, %28 : tensor<1024xi32, #blocked> loc(#loc25)
    %30 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc26)
    %31 = tt.addptr %30, %29 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc26)
    %32 = tt.load %31, %24, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc27)
    %33 = arith.select %24, %32, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc28)
    %34 = arith.extsi %18 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc29)
    %35 = arith.cmpi sge, %34, %cst_15 : tensor<1024xi64, #blocked> loc(#loc29)
    %36 = arith.cmpi slt, %34, %cst_16 : tensor<1024xi64, #blocked> loc(#loc30)
    %37 = arith.andi %35, %36 : tensor<1024xi1, #blocked> loc(#loc31)
    %38 = arith.andi %17, %37 : tensor<1024xi1, #blocked> loc(#loc32)
    %39 = arith.addi %11, %cst_20 : tensor<1024xi32, #blocked> loc(#loc33)
    %40 = arith.addi %39, %26 : tensor<1024xi32, #blocked> loc(#loc34)
    %41 = arith.addi %40, %28 : tensor<1024xi32, #blocked> loc(#loc35)
    %42 = tt.addptr %30, %41 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc36)
    %43 = tt.load %42, %38, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc37)
    %44 = arith.select %38, %43, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc38)
    %45 = arith.cmpf ogt, %44, %33 : tensor<1024xf32, #blocked> loc(#loc123)
    %46 = arith.cmpf une, %44, %44 : tensor<1024xf32, #blocked> loc(#loc124)
    %47 = arith.ori %45, %46 : tensor<1024xi1, #blocked> loc(#loc125)
    %48 = arith.select %47, %44, %33 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc126)
    %49 = arith.addi %18, %cst_21 : tensor<1024xi32, #blocked> loc(#loc44)
    %50 = arith.extsi %49 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc45)
    %51 = arith.cmpi sge, %50, %cst_15 : tensor<1024xi64, #blocked> loc(#loc45)
    %52 = arith.cmpi slt, %50, %cst_16 : tensor<1024xi64, #blocked> loc(#loc46)
    %53 = arith.andi %51, %52 : tensor<1024xi1, #blocked> loc(#loc47)
    %54 = arith.andi %17, %53 : tensor<1024xi1, #blocked> loc(#loc48)
    %55 = arith.addi %11, %cst_22 : tensor<1024xi32, #blocked> loc(#loc49)
    %56 = arith.addi %55, %26 : tensor<1024xi32, #blocked> loc(#loc50)
    %57 = arith.addi %56, %28 : tensor<1024xi32, #blocked> loc(#loc51)
    %58 = tt.addptr %30, %57 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc52)
    %59 = tt.load %58, %54, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc53)
    %60 = arith.select %54, %59, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc54)
    %61 = arith.cmpf ogt, %60, %48 : tensor<1024xf32, #blocked> loc(#loc127)
    %62 = arith.cmpf une, %60, %60 : tensor<1024xf32, #blocked> loc(#loc128)
    %63 = arith.ori %61, %62 : tensor<1024xi1, #blocked> loc(#loc129)
    %64 = arith.select %63, %60, %48 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc130)
    %65 = arith.extsi %12 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc56)
    %66 = arith.cmpi sge, %65, %cst_15 : tensor<1024xi64, #blocked> loc(#loc56)
    %67 = arith.cmpi slt, %65, %cst_16 : tensor<1024xi64, #blocked> loc(#loc57)
    %68 = arith.andi %66, %67 : tensor<1024xi1, #blocked> loc(#loc58)
    %69 = arith.andi %68, %23 : tensor<1024xi1, #blocked> loc(#loc59)
    %70 = arith.addi %11, %cst_23 : tensor<1024xi32, #blocked> loc(#loc60)
    %71 = arith.addi %70, %26 : tensor<1024xi32, #blocked> loc(#loc61)
    %72 = arith.addi %71, %28 : tensor<1024xi32, #blocked> loc(#loc62)
    %73 = tt.addptr %30, %72 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc63)
    %74 = tt.load %73, %69, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc64)
    %75 = arith.select %69, %74, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc65)
    %76 = arith.cmpf ogt, %75, %64 : tensor<1024xf32, #blocked> loc(#loc131)
    %77 = arith.cmpf une, %75, %75 : tensor<1024xf32, #blocked> loc(#loc132)
    %78 = arith.ori %76, %77 : tensor<1024xi1, #blocked> loc(#loc133)
    %79 = arith.select %78, %75, %64 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc134)
    %80 = arith.andi %68, %37 : tensor<1024xi1, #blocked> loc(#loc67)
    %81 = arith.addi %11, %26 : tensor<1024xi32, #blocked> loc(#loc68)
    %82 = arith.addi %81, %28 : tensor<1024xi32, #blocked> loc(#loc69)
    %83 = tt.addptr %30, %82 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc70)
    %84 = tt.load %83, %80, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc71)
    %85 = arith.select %80, %84, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc72)
    %86 = arith.cmpf ogt, %85, %79 : tensor<1024xf32, #blocked> loc(#loc135)
    %87 = arith.cmpf une, %85, %85 : tensor<1024xf32, #blocked> loc(#loc136)
    %88 = arith.ori %86, %87 : tensor<1024xi1, #blocked> loc(#loc137)
    %89 = arith.select %88, %85, %79 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc138)
    %90 = arith.andi %68, %53 : tensor<1024xi1, #blocked> loc(#loc74)
    %91 = arith.addi %11, %cst_11 : tensor<1024xi32, #blocked> loc(#loc75)
    %92 = arith.addi %91, %26 : tensor<1024xi32, #blocked> loc(#loc76)
    %93 = arith.addi %92, %28 : tensor<1024xi32, #blocked> loc(#loc77)
    %94 = tt.addptr %30, %93 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc78)
    %95 = tt.load %94, %90, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc79)
    %96 = arith.select %90, %95, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc80)
    %97 = arith.cmpf ogt, %96, %89 : tensor<1024xf32, #blocked> loc(#loc139)
    %98 = arith.cmpf une, %96, %96 : tensor<1024xf32, #blocked> loc(#loc140)
    %99 = arith.ori %97, %98 : tensor<1024xi1, #blocked> loc(#loc141)
    %100 = arith.select %99, %96, %89 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc142)
    %101 = arith.addi %12, %cst_21 : tensor<1024xi32, #blocked> loc(#loc82)
    %102 = arith.extsi %101 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc83)
    %103 = arith.cmpi sge, %102, %cst_15 : tensor<1024xi64, #blocked> loc(#loc83)
    %104 = arith.cmpi slt, %102, %cst_16 : tensor<1024xi64, #blocked> loc(#loc84)
    %105 = arith.andi %103, %104 : tensor<1024xi1, #blocked> loc(#loc85)
    %106 = arith.andi %105, %23 : tensor<1024xi1, #blocked> loc(#loc86)
    %107 = arith.addi %11, %cst_24 : tensor<1024xi32, #blocked> loc(#loc87)
    %108 = arith.addi %107, %26 : tensor<1024xi32, #blocked> loc(#loc88)
    %109 = arith.addi %108, %28 : tensor<1024xi32, #blocked> loc(#loc89)
    %110 = tt.addptr %30, %109 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc90)
    %111 = tt.load %110, %106, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc91)
    %112 = arith.select %106, %111, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc92)
    %113 = arith.cmpf ogt, %112, %100 : tensor<1024xf32, #blocked> loc(#loc143)
    %114 = arith.cmpf une, %112, %112 : tensor<1024xf32, #blocked> loc(#loc144)
    %115 = arith.ori %113, %114 : tensor<1024xi1, #blocked> loc(#loc145)
    %116 = arith.select %115, %112, %100 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc146)
    %117 = arith.andi %105, %37 : tensor<1024xi1, #blocked> loc(#loc94)
    %118 = arith.addi %11, %cst_25 : tensor<1024xi32, #blocked> loc(#loc95)
    %119 = arith.addi %118, %26 : tensor<1024xi32, #blocked> loc(#loc96)
    %120 = arith.addi %119, %28 : tensor<1024xi32, #blocked> loc(#loc97)
    %121 = tt.addptr %30, %120 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc98)
    %122 = tt.load %121, %117, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc99)
    %123 = arith.select %117, %122, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc100)
    %124 = arith.cmpf ogt, %123, %116 : tensor<1024xf32, #blocked> loc(#loc147)
    %125 = arith.cmpf une, %123, %123 : tensor<1024xf32, #blocked> loc(#loc148)
    %126 = arith.ori %124, %125 : tensor<1024xi1, #blocked> loc(#loc149)
    %127 = arith.select %126, %123, %116 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc150)
    %128 = arith.andi %105, %53 : tensor<1024xi1, #blocked> loc(#loc102)
    %129 = arith.addi %11, %cst_26 : tensor<1024xi32, #blocked> loc(#loc103)
    %130 = arith.addi %129, %26 : tensor<1024xi32, #blocked> loc(#loc104)
    %131 = arith.addi %130, %28 : tensor<1024xi32, #blocked> loc(#loc105)
    %132 = tt.addptr %30, %131 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc106)
    %133 = tt.load %132, %128, %cst_9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc107)
    %134 = arith.select %128, %133, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc108)
    %135 = arith.cmpf ogt, %134, %127 : tensor<1024xf32, #blocked> loc(#loc151)
    %136 = arith.cmpf une, %134, %134 : tensor<1024xf32, #blocked> loc(#loc152)
    %137 = arith.ori %135, %136 : tensor<1024xi1, #blocked> loc(#loc153)
    %138 = arith.select %137, %134, %127 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc154)
    %139 = arith.select %45, %cst_0, %cst_1 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc110)
    %140 = arith.select %61, %cst_2, %139 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc111)
    %141 = arith.select %76, %cst_3, %140 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc112)
    %142 = arith.select %86, %cst_4, %141 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc113)
    %143 = arith.select %97, %cst_5, %142 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc114)
    %144 = arith.select %113, %cst_6, %143 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc115)
    %145 = arith.select %124, %cst_7, %144 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc116)
    %146 = arith.select %135, %cst_8, %145 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc117)
    %147 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc118)
    %148 = tt.addptr %147, %7 : tensor<1024x!tt.ptr<f32>, #blocked1>, tensor<1024xi32, #blocked1> loc(#loc118)
    %149 = triton_gpu.convert_layout %138 : tensor<1024xf32, #blocked> -> tensor<1024xf32, #blocked1> loc(#loc119)
    tt.store %148, %149 : tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc119)
    %150 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc120)
    %151 = tt.addptr %150, %6 : tensor<1024x!tt.ptr<i8>, #blocked>, tensor<1024xi32, #blocked> loc(#loc120)
    tt.store %151, %146 : tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc121)
    tt.return loc(#loc122)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":20:28)
#loc3 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":20:33)
#loc4 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":21:36)
#loc5 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":21:23)
#loc6 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":23:20)
#loc7 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":24:20)
#loc8 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":24:26)
#loc9 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":25:18)
#loc10 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":27:21)
#loc11 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":27:19)
#loc12 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":29:19)
#loc13 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":31:18)
#loc14 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":32:18)
#loc15 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":33:21)
#loc16 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":33:19)
#loc17 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":34:19)
#loc18 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":35:18)
#loc19 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":36:18)
#loc20 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":37:19)
#loc21 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":38:41)
#loc22 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":38:51)
#loc23 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":38:47)
#loc24 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":38:64)
#loc25 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":38:58)
#loc26 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":38:31)
#loc27 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":38:70)
#loc28 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":40:35)
#loc29 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":42:21)
#loc30 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":43:20)
#loc31 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":44:20)
#loc32 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":45:19)
#loc33 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":46:41)
#loc34 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":46:47)
#loc35 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":46:58)
#loc36 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":46:31)
#loc37 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":46:70)
#loc38 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":48:35)
#loc39 = loc("/home/meng/anaconda3/envs/spacemit/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":68:15)
#loc40 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":49:42)
#loc41 = loc("/home/meng/anaconda3/envs/spacemit/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":70:21)
#loc42 = loc("/home/meng/anaconda3/envs/spacemit/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":70:16)
#loc43 = loc("/home/meng/anaconda3/envs/spacemit/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":71:29)
#loc44 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":50:17)
#loc45 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":51:21)
#loc46 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":52:20)
#loc47 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":53:20)
#loc48 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":54:19)
#loc49 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":55:41)
#loc50 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":55:47)
#loc51 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":55:58)
#loc52 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":55:31)
#loc53 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":55:70)
#loc54 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":57:35)
#loc55 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":58:42)
#loc56 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":60:21)
#loc57 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":61:20)
#loc58 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":62:20)
#loc59 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":63:20)
#loc60 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":64:39)
#loc61 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":64:45)
#loc62 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":64:56)
#loc63 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":64:31)
#loc64 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":64:68)
#loc65 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":66:35)
#loc66 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":67:42)
#loc67 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":68:20)
#loc68 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":69:37)
#loc69 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":69:48)
#loc70 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":69:31)
#loc71 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":69:60)
#loc72 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":71:35)
#loc73 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":72:42)
#loc74 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":73:20)
#loc75 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":74:36)
#loc76 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":74:42)
#loc77 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":74:53)
#loc78 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":74:31)
#loc79 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":74:65)
#loc80 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":76:35)
#loc81 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":77:42)
#loc82 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":78:17)
#loc83 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":79:21)
#loc84 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":80:20)
#loc85 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":81:20)
#loc86 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":82:20)
#loc87 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":83:38)
#loc88 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":83:44)
#loc89 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":83:55)
#loc90 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":83:31)
#loc91 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":83:67)
#loc92 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":85:35)
#loc93 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":86:42)
#loc94 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":87:20)
#loc95 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":88:38)
#loc96 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":88:44)
#loc97 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":88:55)
#loc98 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":88:31)
#loc99 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":88:67)
#loc100 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":90:35)
#loc101 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":91:42)
#loc102 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":92:20)
#loc103 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":93:38)
#loc104 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":93:44)
#loc105 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":93:55)
#loc106 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":93:31)
#loc107 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":93:67)
#loc108 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":95:35)
#loc109 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":96:42)
#loc110 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":100:35)
#loc111 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":103:35)
#loc112 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":106:35)
#loc113 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":109:35)
#loc114 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":112:35)
#loc115 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":115:35)
#loc116 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":118:35)
#loc117 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":121:35)
#loc118 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":122:25)
#loc119 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":122:37)
#loc120 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":123:25)
#loc121 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":123:37)
#loc122 = loc("/tmp/torchinductor_meng/hf/chfhfx47weev65xy3vuuw35yxhuvzoiakd7h7k62bayuaddlwdbr.py":123:4)
#loc123 = loc(callsite(#loc39 at #loc40))
#loc124 = loc(callsite(#loc41 at #loc40))
#loc125 = loc(callsite(#loc42 at #loc40))
#loc126 = loc(callsite(#loc43 at #loc40))
#loc127 = loc(callsite(#loc39 at #loc55))
#loc128 = loc(callsite(#loc41 at #loc55))
#loc129 = loc(callsite(#loc42 at #loc55))
#loc130 = loc(callsite(#loc43 at #loc55))
#loc131 = loc(callsite(#loc39 at #loc66))
#loc132 = loc(callsite(#loc41 at #loc66))
#loc133 = loc(callsite(#loc42 at #loc66))
#loc134 = loc(callsite(#loc43 at #loc66))
#loc135 = loc(callsite(#loc39 at #loc73))
#loc136 = loc(callsite(#loc41 at #loc73))
#loc137 = loc(callsite(#loc42 at #loc73))
#loc138 = loc(callsite(#loc43 at #loc73))
#loc139 = loc(callsite(#loc39 at #loc81))
#loc140 = loc(callsite(#loc41 at #loc81))
#loc141 = loc(callsite(#loc42 at #loc81))
#loc142 = loc(callsite(#loc43 at #loc81))
#loc143 = loc(callsite(#loc39 at #loc93))
#loc144 = loc(callsite(#loc41 at #loc93))
#loc145 = loc(callsite(#loc42 at #loc93))
#loc146 = loc(callsite(#loc43 at #loc93))
#loc147 = loc(callsite(#loc39 at #loc101))
#loc148 = loc(callsite(#loc41 at #loc101))
#loc149 = loc(callsite(#loc42 at #loc101))
#loc150 = loc(callsite(#loc43 at #loc101))
#loc151 = loc(callsite(#loc39 at #loc109))
#loc152 = loc(callsite(#loc41 at #loc109))
#loc153 = loc(callsite(#loc42 at #loc109))
#loc154 = loc(callsite(#loc43 at #loc109))
