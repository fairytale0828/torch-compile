//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_                 // -- Begin function triton_
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_
.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u32 triton__param_2,
	.param .u32 triton__param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<84>;
	.reg .f32 	%f<44>;
	.reg .b64 	%rd<9>;
	.loc	1 18 0                          // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:18:0

// %bb.0:
	ld.param.u64 	%rd4, [triton__param_0];
	ld.param.u64 	%rd5, [triton__param_1];
$L__tmp0:
	.loc	1 22 28                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:22:33
	shl.b32 	%r41, %r1, 5;
	.loc	1 23 44                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:23:44
	mov.u32 	%r42, %tid.x;
	and.b32  	%r43, %r42, 24;
	shl.b32 	%r44, %r42, 2;
	and.b32  	%r45, %r44, 28;
	and.b32  	%r46, %r42, 31;
	.loc	1 23 23                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:23:23
	or.b32  	%r47, %r41, %r45;
	or.b32  	%r48, %r41, %r46;
	.loc	1 24 21                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:24:21
	setp.lt.s32 	%p1, %r47, 512;
	setp.lt.s32 	%p12, %r48, 512;
	.loc	1 25 34                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:25:34
	bfe.u32 	%r49, %r42, 3, 5;
	or.b32  	%r50, %r49, 32;
	.loc	1 27 21                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:27:21
	setp.lt.u32 	%p13, %r50, 49;
	.loc	1 30 40                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:30:40
	shl.b32 	%r51, %r49, 9;
	shl.b32 	%r52, %r50, 9;
	.loc	1 30 36                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:30:36
	add.s32 	%r53, %r47, %r51;
	add.s32 	%r54, %r47, %r52;
	.loc	1 30 30                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:30:30
	mul.wide.s32 	%rd6, %r53, 4;
	add.s64 	%rd1, %rd5, %rd6;
	mul.wide.s32 	%rd7, %r54, 4;
	add.s64 	%rd2, %rd5, %rd7;
	.loc	1 30 54                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:30:54
	and.pred  	%p2, %p13, %p1;
	mov.b32 	%r6, 0;
	.loc	1 30 46                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:30:46
	// begin inline asm
	mov.u32 %r2, %r6;
	mov.u32 %r3, %r6;
	mov.u32 %r4, %r6;
	mov.u32 %r5, %r6;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, %r6;
	mov.u32 %r11, %r6;
	mov.u32 %r12, %r6;
	mov.u32 %r13, %r6;
	@%p2 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 32 41                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:32:41
	selp.f32 	%f9, %f1, 0f00000000, %p1;
	selp.f32 	%f10, %f2, 0f00000000, %p1;
	selp.f32 	%f11, %f3, 0f00000000, %p1;
	selp.f32 	%f12, %f4, 0f00000000, %p1;
	selp.f32 	%f13, %f5, 0f00000000, %p2;
	selp.f32 	%f14, %f6, 0f00000000, %p2;
	selp.f32 	%f15, %f7, 0f00000000, %p2;
	selp.f32 	%f16, %f8, 0f00000000, %p2;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f9, %f13;
	add.f32 	%f18, %f10, %f14;
	add.f32 	%f19, %f11, %f15;
	add.f32 	%f20, %f12, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f17;
	shfl.sync.bfly.b32	%r56, %r55, 16, 31, -1;
	mov.b32 	%f21, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f17, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f22;
	shfl.sync.bfly.b32	%r58, %r57, 8, 31, -1;
	mov.b32 	%f23, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f18;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f25, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f18, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f26;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f27, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f19;
	shfl.sync.bfly.b32	%r64, %r63, 16, 31, -1;
	mov.b32 	%f29, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f19, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f30;
	shfl.sync.bfly.b32	%r66, %r65, 8, 31, -1;
	mov.b32 	%f31, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f20;
	shfl.sync.bfly.b32	%r68, %r67, 16, 31, -1;
	mov.b32 	%f33, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f20, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f34;
	shfl.sync.bfly.b32	%r70, %r69, 8, 31, -1;
	mov.b32 	%f35, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r43, 0;
	bfe.u32 	%r71, %r42, 5, 3;
	shl.b32 	%r72, %r71, 2;
	shl.b32 	%r73, %r45, 5;
	or.b32  	%r74, %r73, %r72;
	mov.u32 	%r75, global_smem;
	add.s32 	%r18, %r75, %r74;
	mov.b32 	%r19, %f24;
	// begin inline asm
	@%p3 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 32;
	mov.b32 	%r21, %f28;
	// begin inline asm
	@%p3 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	add.s32 	%r22, %r18, 64;
	mov.b32 	%r23, %f32;
	// begin inline asm
	@%p3 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	add.s32 	%r24, %r18, 96;
	mov.b32 	%r25, %f36;
	// begin inline asm
	@%p3 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p7, %r42, 256;
	add.s32 	%r27, %r75, %r44;
	// begin inline asm
	@%p7 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r26;
	shfl.sync.bfly.b32	%r76, %r26, 4, 31, -1;
	mov.b32 	%f38, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f39;
	shfl.sync.bfly.b32	%r78, %r77, 2, 31, -1;
	mov.b32 	%f40, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f41;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f42, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r81, %r42, 7;
	setp.eq.s32 	%p14, %r81, 0;
	and.pred  	%p8, %p7, %p14;
	mov.b32 	%r29, %f43;
	// begin inline asm
	@%p8 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r82, %r75, %r73;
	ld.shared.u32 	%r31, [%r82];
	ld.shared.u32 	%r32, [%r82+32];
	ld.shared.u32 	%r33, [%r82+64];
	ld.shared.u32 	%r34, [%r82+96];
$L__tmp2:
	.loc	1 35 18                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:35:18
	bar.sync 	0;
	mad.lo.s32 	%r30, %r45, -28, %r82;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.v4.b32 [ %r30 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r83, %r46, 2;
	add.s32 	%r36, %r75, %r83;
	// begin inline asm
	@%p9 ld.shared.b32 %r38, [ %r36 + 0 ];
	// end inline asm
	mov.b32 	%r39, 1111752704;
	// begin inline asm
	div.full.f32 %r40, %r38, %r39;
	// end inline asm
	.loc	1 36 4                          // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:36:4
	bar.sync 	0;
	.loc	1 37 28                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:37:28
	mul.wide.s32 	%rd8, %r48, 4;
	add.s64 	%rd3, %rd4, %rd8;
	.loc	1 37 39                         // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:37:39
	setp.eq.s32 	%p15, %r71, 0;
	and.pred  	%p11, %p15, %p12;
	// begin inline asm
	@%p11 st.global.b32 [ %rd3 + 0 ], { %r40 };
	// end inline asm
	.loc	1 37 4                          // cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py:37:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_meng/de/cde5x3y3o6rdwuyu6w6ff5d4wdfl6rga4ipvuxcq2oejrltjt4no.py"
	.file	2 "/home/meng/anaconda3/envs/spacemit/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 177                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xaa DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 101
.b8 53
.b8 120
.b8 51
.b8 121
.b8 51
.b8 111
.b8 54
.b8 114
.b8 100
.b8 119
.b8 117
.b8 121
.b8 117
.b8 54
.b8 119
.b8 54
.b8 102
.b8 102
.b8 53
.b8 100
.b8 52
.b8 119
.b8 100
.b8 102
.b8 108
.b8 54
.b8 114
.b8 103
.b8 97
.b8 52
.b8 105
.b8 112
.b8 118
.b8 117
.b8 120
.b8 99
.b8 113
.b8 50
.b8 111
.b8 101
.b8 106
.b8 114
.b8 108
.b8 116
.b8 106
.b8 116
.b8 52
.b8 110
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 109
.b8 101
.b8 110
.b8 103
.b8 47
.b8 100
.b8 101
.b8 0
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b8 2                                   // Abbrev [2] 0x7c:0xa DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x86:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 124                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9b:0x18 DW_TAG_inlined_subroutine
.b32 124                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_loc	{	}
