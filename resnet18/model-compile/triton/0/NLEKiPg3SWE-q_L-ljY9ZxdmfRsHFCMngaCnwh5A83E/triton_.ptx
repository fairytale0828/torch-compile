//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_                 // -- Begin function triton_
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_
.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u32 triton__param_2,
	.param .u32 triton__param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<106>;
	.reg .b64 	%rd<23>;
	.loc	1 18 0                          // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:18:0

// %bb.0:
	ld.param.u64 	%rd11, [triton__param_0];
	ld.param.u64 	%rd12, [triton__param_1];
$L__tmp0:
	.loc	1 21 29                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:21:29
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 21 48                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:21:48
	// begin inline asm
	mov.u32 %r2, %ctaid.z;
	// end inline asm
	.loc	1 21 69                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:21:69
	// begin inline asm
	mov.u32 %r3, %nctaid.y;
	// end inline asm
	.loc	1 21 34                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:21:34
	mad.lo.s32 	%r47, %r3, %r2, %r1;
	.loc	1 21 75                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:21:75
	shl.b32 	%r48, %r47, 6;
	.loc	1 22 44                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:22:44
	mov.u32 	%r49, %tid.x;
	bfe.u32 	%r51, %r49, 4, 3;
	or.b32  	%r52, %r51, 8;
	shl.b32 	%r53, %r49, 2;
	and.b32  	%r54, %r53, 60;
	.loc	1 22 23                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:22:23
	or.b32  	%r55, %r48, %r51;
	or.b32  	%r56, %r48, %r52;
	or.b32  	%r57, %r55, 16;
	or.b32  	%r58, %r55, 24;
	or.b32  	%r59, %r55, 32;
	or.b32  	%r60, %r55, 40;
	or.b32  	%r61, %r55, 48;
	or.b32  	%r62, %r55, 56;
	or.b32  	%r63, %r48, %r54;
	.loc	1 24 28                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:24:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 24 33                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:24:33
	shl.b32 	%r64, %r4, 4;
	.loc	1 25 44                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:25:44
	and.b32  	%r65, %r49, 15;
	.loc	1 25 23                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:25:23
	or.b32  	%r66, %r64, %r65;
	or.b32  	%r67, %r64, %r51;
	or.b32  	%r68, %r64, %r52;
	.loc	1 26 21                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:26:21
	setp.lt.s32 	%p1, %r66, 9;
	setp.lt.s32 	%p19, %r67, 9;
	setp.lt.s32 	%p20, %r68, 9;
	.loc	1 30 20                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:30:20
	bfe.s32 	%r69, %r47, 25, 1;
	shr.u32 	%r70, %r69, 25;
	add.s32 	%r71, %r63, %r70;
	shr.s32 	%r72, %r71, 7;
	.loc	1 29 18                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:29:18
	and.b32  	%r73, %r71, -128;
	sub.s32 	%r74, %r63, %r73;
	.loc	1 31 36                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:31:36
	mad.lo.s32 	%r75, %r55, 9, %r66;
	mad.lo.s32 	%r76, %r56, 9, %r66;
	mad.lo.s32 	%r77, %r57, 9, %r66;
	mad.lo.s32 	%r78, %r58, 9, %r66;
	mad.lo.s32 	%r79, %r59, 9, %r66;
	mad.lo.s32 	%r80, %r60, 9, %r66;
	mad.lo.s32 	%r81, %r61, 9, %r66;
	mad.lo.s32 	%r82, %r62, 9, %r66;
	.loc	1 31 30                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:31:30
	mul.wide.s32 	%rd13, %r75, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r76, 4;
	add.s64 	%rd2, %rd11, %rd14;
	mul.wide.s32 	%rd15, %r77, 4;
	add.s64 	%rd3, %rd11, %rd15;
	mul.wide.s32 	%rd16, %r78, 4;
	add.s64 	%rd4, %rd11, %rd16;
	mul.wide.s32 	%rd17, %r79, 4;
	add.s64 	%rd5, %rd11, %rd17;
	mul.wide.s32 	%rd18, %r80, 4;
	add.s64 	%rd6, %rd11, %rd18;
	mul.wide.s32 	%rd19, %r81, 4;
	add.s64 	%rd7, %rd11, %rd19;
	mul.wide.s32 	%rd20, %r82, 4;
	add.s64 	%rd8, %rd11, %rd20;
	.loc	1 31 44                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:31:44
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 32 35                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:32:35
	shl.b32 	%r83, %r67, 7;
	shl.b32 	%r84, %r68, 7;
	.loc	1 32 31                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:32:31
	mad.lo.s32 	%r85, %r72, 1152, %r74;
	.loc	1 32 42                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:32:42
	add.s32 	%r86, %r85, %r83;
	add.s32 	%r87, %r85, %r84;
	.loc	1 32 25                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:32:25
	mul.wide.s32 	%rd21, %r86, 4;
	add.s64 	%rd9, %rd12, %rd21;
	mul.wide.s32 	%rd22, %r87, 4;
	add.s64 	%rd10, %rd12, %rd22;
	.loc	1 32 59                         // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:32:59
	shl.b32 	%r88, %r49, 6;
	and.b32  	%r89, %r88, 960;
	or.b32  	%r90, %r89, %r51;
	and.b32  	%r91, %r53, 508;
	shr.u32 	%r92, %r89, 4;
	add.s32 	%r93, %r92, %r90;
	shl.b32 	%r94, %r93, 2;
	mov.u32 	%r95, global_smem;
	add.s32 	%r13, %r95, %r94;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r13, 32;
	// begin inline asm
	@%p9 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r13, 64;
	// begin inline asm
	@%p9 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r13, 96;
	// begin inline asm
	@%p9 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r13, 128;
	// begin inline asm
	@%p9 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r13, 160;
	// begin inline asm
	@%p9 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r13, 192;
	// begin inline asm
	@%p9 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r13, 224;
	// begin inline asm
	@%p9 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r96, %r49, 2;
	and.b32  	%r97, %r96, 28;
	add.s32 	%r98, %r97, %r91;
	shl.b32 	%r99, %r98, 2;
	add.s32 	%r33, %r95, %r99;
	// begin inline asm
	@%p9 ld.shared.v4.b32 { %r39, %r40, %r41, %r42 }, [ %r33 + 0 ];
	// end inline asm
	or.b32  	%r100, %r91, 512;
	shr.u32 	%r101, %r100, 4;
	and.b32  	%r102, %r101, 60;
	add.s32 	%r103, %r102, %r91;
	shl.b32 	%r104, %r103, 2;
	add.s32 	%r105, %r95, %r104;
	add.s32 	%r38, %r105, 2048;
	// begin inline asm
	@%p9 ld.shared.v4.b32 { %r43, %r44, %r45, %r46 }, [ %r38 + 0 ];
	// end inline asm
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd9 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd10 + 0 ], { %r43, %r44, %r45, %r46 };
	// end inline asm
	.loc	1 32 4                          // cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py:32:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_meng/xx/cxxlpa3bmtvcmsxy3doiigmppqb4bahzgfqu3rds42j5usg5243q.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 120                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x71 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 120
.b8 108
.b8 112
.b8 97
.b8 51
.b8 98
.b8 109
.b8 116
.b8 118
.b8 99
.b8 109
.b8 115
.b8 120
.b8 121
.b8 51
.b8 100
.b8 111
.b8 105
.b8 105
.b8 103
.b8 109
.b8 112
.b8 112
.b8 113
.b8 98
.b8 52
.b8 98
.b8 97
.b8 104
.b8 122
.b8 103
.b8 102
.b8 113
.b8 117
.b8 51
.b8 114
.b8 100
.b8 115
.b8 52
.b8 50
.b8 106
.b8 53
.b8 117
.b8 115
.b8 103
.b8 53
.b8 50
.b8 52
.b8 51
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 109
.b8 101
.b8 110
.b8 103
.b8 47
.b8 120
.b8 120
.b8 0
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
	}
	.section	.debug_loc	{	}
