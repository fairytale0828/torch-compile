//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_                 // -- Begin function triton_
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_
.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u64 triton__param_6,
	.param .u64 triton__param_7,
	.param .u32 triton__param_8
)
.reqntid 128, 1, 1
{
	.local .align 2 .b8 	__local_depot0[2];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<32>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<20>;
	.loc	1 18 0                          // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:18:0

// %bb.0:                               // %__nv_sqrtf.exit
	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd9, [triton__param_0];
	ld.param.u64 	%rd10, [triton__param_1];
$L__tmp0:
	.loc	1 20 28                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:20:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 20 33                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:20:33
	shl.b32 	%r22, %r1, 8;
	ld.param.u64 	%rd11, [triton__param_2];
	ld.param.u64 	%rd12, [triton__param_3];
	.loc	1 21 36                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:21:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 1;
	ld.param.u64 	%rd13, [triton__param_4];
	and.b32  	%r25, %r24, 254;
	ld.param.u64 	%rd14, [triton__param_5];
	.loc	1 21 23                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:21:23
	or.b32  	%r26, %r22, %r25;
	ld.param.u64 	%rd15, [triton__param_6];
	.loc	1 22 21                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:22:21
	setp.lt.s32 	%p1, %r26, 25088;
	ld.param.u64 	%rd16, [triton__param_7];
	.loc	1 24 18                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:24:18
	bfe.s32 	%r27, %r1, 23, 1;
	shr.u32 	%r28, %r27, 23;
	add.s32 	%r29, %r26, %r28;
	and.b32  	%r30, %r29, -512;
	sub.s32 	%r31, %r26, %r30;
	.loc	1 25 30                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:25:30
	cvt.s64.s32 	%rd17, %r26;
	mul.wide.s32 	%rd18, %r26, 4;
	add.s64 	%rd1, %rd9, %rd18;
	.loc	1 25 35                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:25:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 26 30                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:26:30
	mul.wide.s32 	%rd19, %r31, 4;
	add.s64 	%rd2, %rd10, %rd19;
	.loc	1 26 35                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:26:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 27 30                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:27:30
	add.s64 	%rd3, %rd11, %rd19;
	.loc	1 27 35                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:27:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r7;
	.loc	1 28 31                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:28:31
	add.s64 	%rd4, %rd12, %rd19;
	.loc	1 28 36                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:28:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 29 31                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:29:31
	add.s64 	%rd5, %rd13, %rd19;
	.loc	1 29 36                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:29:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 30 31                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:30:31
	add.s64 	%rd6, %rd14, %rd18;
	.loc	1 30 36                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:30:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v2.b32 { %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 33 18                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:33:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 34 26                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:34:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 36 18                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:36:18
	mov.b32 	%r16, %f5;
	mov.b32 	%r15, 1065353216;
	// begin inline asm
	div.full.f32 %r14, %r15, %r16;
	// end inline asm
	mov.b32 	%f7, %r14;
	mov.b32 	%r19, %f6;
	// begin inline asm
	div.full.f32 %r17, %r15, %r19;
	// end inline asm
	mov.b32 	%f8, %r17;
	.loc	1 47 25                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:47:25
	add.s64 	%rd7, %rd15, %rd18;
	.loc	1 48 25                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:48:25
	add.s64 	%rd8, %rd16, %rd17;
	.loc	1 25 35                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:25:35
	mov.b32 	%f9, %r3;
	mov.b32 	%f10, %r2;
	.loc	1 26 35                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:26:35
	mov.b32 	%f11, %r5;
	mov.b32 	%f12, %r4;
	.loc	1 31 18                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:31:18
	sub.f32 	%f13, %f10, %f12;
	sub.f32 	%f14, %f9, %f11;
	.loc	1 30 36                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:30:36
	mov.b32 	%f15, %r12;
	mov.b32 	%f16, %r13;
	.loc	1 29 36                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:29:36
	mov.b32 	%f17, %r11;
	mov.b32 	%f18, %r10;
	.loc	1 28 36                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:28:36
	mov.b32 	%f19, %r9;
	mov.b32 	%f20, %r8;
	.loc	1 39 19                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:39:19
	mul.f32 	%f21, %f14, %f8;
	mul.f32 	%f22, %f13, %f7;
	.loc	1 41 20                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:41:20
	fma.rn.f32 	%f23, %f22, %f20, %f18;
	fma.rn.f32 	%f24, %f21, %f19, %f17;
	.loc	1 42 20                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:42:20
	add.f32 	%f25, %f24, %f16;
	add.f32 	%f26, %f23, %f15;
$L__tmp1:
	.loc	2 68 15                         // triton_helpers.py:68:15
	setp.lt.f32 	%p9, %f26, 0f00000000;
	setp.lt.f32 	%p10, %f25, 0f00000000;
	.loc	2 71 29                         // triton_helpers.py:71:29
	selp.f32 	%f27, 0f00000000, %f25, %p10;
	selp.f32 	%f28, 0f00000000, %f26, %p9;
$L__tmp2:
	.loc	1 46 21                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:46:21
	setp.le.f32 	%p11, %f28, 0f00000000;
	setp.le.f32 	%p12, %f27, 0f00000000;
$L__tmp3:
	.loc	2 71 29                         // triton_helpers.py:71:29
	mov.b32 	%r20, %f28;
	mov.b32 	%r21, %f27;
$L__tmp4:
	.loc	1 47 37                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:47:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r20, %r21 };
	// end inline asm
	.loc	1 48 37                         // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:48:37
	selp.u16 	%rs2, 1, 0, %p12;
	selp.u16 	%rs3, 1, 0, %p11;
	st.v2.u8 	[%SP+0], {%rs3, %rs2};
	ld.u16 	%rs1, [%SP+0];
	// begin inline asm
	@%p1 st.global.b16 [ %rd8 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 48 4                          // chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py:48:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_meng/hc/chc5cbwbdrgcapcm2yjbrgjjjgwn6ztvtq2eoy5v7almajorogoo.py"
	.file	2 "/home/meng/anaconda3/envs/spacemit/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 177                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xaa DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 99
.b8 53
.b8 99
.b8 98
.b8 119
.b8 98
.b8 100
.b8 114
.b8 103
.b8 99
.b8 97
.b8 112
.b8 99
.b8 109
.b8 50
.b8 121
.b8 106
.b8 98
.b8 114
.b8 103
.b8 106
.b8 106
.b8 106
.b8 103
.b8 119
.b8 110
.b8 54
.b8 122
.b8 116
.b8 118
.b8 116
.b8 113
.b8 50
.b8 101
.b8 111
.b8 121
.b8 53
.b8 118
.b8 55
.b8 97
.b8 108
.b8 109
.b8 97
.b8 106
.b8 111
.b8 114
.b8 111
.b8 103
.b8 111
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 109
.b8 101
.b8 110
.b8 103
.b8 47
.b8 104
.b8 99
.b8 0
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b8 2                                   // Abbrev [2] 0x7c:0xa DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x86:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 124                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9b:0x18 DW_TAG_inlined_subroutine
.b32 124                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_loc	{	}
