#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":18:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:86", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":18:0), %arg3: i32 loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":18:0)) attributes {noinline = false} {
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst = arith.constant dense<147> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<3> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<49> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<49> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<192> : tensor<1x32xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = tt.get_program_id z : i32 loc(#loc3)
    %2 = tt.get_num_programs y : i32 loc(#loc4)
    %3 = arith.muli %1, %2 : i32 loc(#loc5)
    %4 = arith.addi %0, %3 : i32 loc(#loc6)
    %5 = arith.muli %4, %c32_i32 : i32 loc(#loc7)
    %6 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc8)
    %7 = tt.expand_dims %6 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc8)
    %8 = tt.splat %5 : i32 -> tensor<1x32xi32, #blocked> loc(#loc9)
    %9 = arith.addi %8, %7 : tensor<1x32xi32, #blocked> loc(#loc9)
    %10 = arith.cmpi slt, %9, %cst_4 : tensor<1x32xi32, #blocked> loc(#loc10)
    %11 = tt.get_program_id x : i32 loc(#loc11)
    %12 = arith.muli %11, %c32_i32 : i32 loc(#loc12)
    %13 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc13)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc13)
    %15 = tt.splat %12 : i32 -> tensor<32x1xi32, #blocked> loc(#loc14)
    %16 = arith.addi %15, %14 : tensor<32x1xi32, #blocked> loc(#loc14)
    %17 = arith.cmpi slt, %16, %cst_3 : tensor<32x1xi32, #blocked> loc(#loc15)
    %18 = arith.remsi %9, %cst_2 : tensor<1x32xi32, #blocked> loc(#loc16)
    %19 = arith.divsi %9, %cst_2 : tensor<1x32xi32, #blocked> loc(#loc17)
    %20 = arith.muli %9, %cst_1 : tensor<1x32xi32, #blocked> loc(#loc18)
    %21 = tt.broadcast %16 : tensor<32x1xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc19)
    %22 = tt.broadcast %20 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc19)
    %23 = arith.addi %21, %22 : tensor<32x32xi32, #blocked> loc(#loc19)
    %24 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc20)
    %25 = tt.addptr %24, %23 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc20)
    %26 = tt.broadcast %17 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc21)
    %27 = tt.broadcast %10 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc21)
    %28 = arith.andi %26, %27 : tensor<32x32xi1, #blocked> loc(#loc21)
    %29 = tt.load %25, %28 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc22)
    %30 = arith.muli %16, %cst_0 : tensor<32x1xi32, #blocked> loc(#loc23)
    %31 = tt.broadcast %18 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc24)
    %32 = tt.broadcast %30 : tensor<32x1xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc24)
    %33 = arith.addi %31, %32 : tensor<32x32xi32, #blocked> loc(#loc24)
    %34 = arith.muli %19, %cst : tensor<1x32xi32, #blocked> loc(#loc25)
    %35 = tt.broadcast %34 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc26)
    %36 = arith.addi %33, %35 : tensor<32x32xi32, #blocked> loc(#loc26)
    %37 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc27)
    %38 = tt.addptr %37, %36 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc27)
    tt.store %38, %29, %28 : tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc28)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":21:29)
#loc3 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":21:48)
#loc4 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":21:69)
#loc5 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":21:53)
#loc6 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":21:34)
#loc7 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":21:75)
#loc8 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":22:44)
#loc9 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":22:23)
#loc10 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":23:21)
#loc11 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":24:28)
#loc12 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":24:33)
#loc13 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":25:44)
#loc14 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":25:23)
#loc15 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":26:21)
#loc16 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":29:18)
#loc17 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":30:20)
#loc18 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":31:39)
#loc19 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":31:36)
#loc20 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":31:30)
#loc21 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":31:53)
#loc22 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":31:45)
#loc23 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":32:33)
#loc24 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":32:31)
#loc25 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":32:44)
#loc26 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":32:40)
#loc27 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":32:25)
#loc28 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":32:56)
#loc29 = loc("/tmp/torchinductor_meng/co/ccoj3qpjntqcdwzeoxtebkbm4oyf45i5xmkk33ijlf2qmvj66m3p.py":32:4)
