//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_                 // -- Begin function triton_
                                        // @triton_
.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u32 triton__param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<11>;
	.reg .f32 	%f<6>;
	.reg .b64 	%rd<10>;
	.loc	1 18 0                          // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:18:0

// %bb.0:
	ld.param.u64 	%rd5, [triton__param_0];
	ld.param.u64 	%rd6, [triton__param_1];
$L__tmp0:
	.loc	1 20 28                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:20:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 20 33                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:20:33
	shl.b32 	%r6, %r1, 4;
	ld.param.u64 	%rd7, [triton__param_2];
	ld.param.u64 	%rd8, [triton__param_3];
	.loc	1 21 36                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:21:36
	mov.u32 	%r7, %tid.x;
	and.b32  	%r8, %r7, 16;
	and.b32  	%r9, %r7, 15;
	.loc	1 21 23                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:21:23
	or.b32  	%r10, %r6, %r9;
	.loc	1 22 21                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:22:21
	setp.lt.s32 	%p1, %r10, 10;
	.loc	1 24 30                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:24:30
	mul.wide.s32 	%rd9, %r10, 4;
	add.s64 	%rd1, %rd5, %rd9;
	.loc	1 24 35                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:24:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 25 30                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:25:30
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 25 35                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:25:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 26 30                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:26:30
	add.s64 	%rd3, %rd7, %rd9;
	.loc	1 26 35                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:26:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 27 18                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:27:18
	add.f32 	%f4, %f1, %f2;
	.loc	1 28 18                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:28:18
	add.f32 	%f5, %f4, %f3;
	.loc	1 29 25                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:29:25
	add.s64 	%rd4, %rd8, %rd9;
	.loc	1 29 36                         // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:29:36
	setp.eq.s32 	%p5, %r8, 0;
	mov.b32 	%r5, %f5;
	and.pred  	%p4, %p5, %p1;
	// begin inline asm
	@%p4 st.global.b32 [ %rd4 + 0 ], { %r5 };
	// end inline asm
	.loc	1 29 4                          // cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py:29:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_meng/mx/cmxq2kc2fmf5v7lqhmh4sno5xnu5jhhepvu2ojjqtzgjlhe4lmbb.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 120                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x71 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 120
.b8 113
.b8 50
.b8 107
.b8 99
.b8 50
.b8 102
.b8 109
.b8 102
.b8 53
.b8 118
.b8 55
.b8 108
.b8 113
.b8 104
.b8 109
.b8 104
.b8 52
.b8 115
.b8 110
.b8 111
.b8 53
.b8 120
.b8 110
.b8 117
.b8 53
.b8 106
.b8 104
.b8 104
.b8 101
.b8 112
.b8 118
.b8 117
.b8 50
.b8 111
.b8 106
.b8 106
.b8 113
.b8 116
.b8 122
.b8 103
.b8 106
.b8 108
.b8 104
.b8 101
.b8 52
.b8 108
.b8 109
.b8 98
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 109
.b8 101
.b8 110
.b8 103
.b8 47
.b8 109
.b8 120
.b8 0
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
	}
	.section	.debug_loc	{	}
