; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2de(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !5 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %5 = shl i32 %4, 1, !dbg !8
  %6 = and i32 %5, 254, !dbg !8
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %8 = shl i32 %7, 8, !dbg !10
  %9 = or i32 %8, %6, !dbg !11
  %10 = or i32 %9, 1, !dbg !11
  %11 = icmp slt i32 %9, 256, !dbg !12
  %.frozen = freeze i32 %9
  %12 = sdiv i32 %.frozen, 4, !dbg !13
  %13 = mul i32 %12, 4
  %.decomposed = sub i32 %.frozen, %13
  %14 = srem i32 %10, 4, !dbg !14
  %15 = srem i32 %12, 4, !dbg !15
  %16 = shl nsw i32 %.decomposed, 1, !dbg !16
  %17 = shl nsw i32 %14, 1, !dbg !16
  %18 = shl i32 %12, 4, !dbg !17
  %19 = add i32 %16, %18, !dbg !18
  %20 = add i32 %18, %17, !dbg !18
  %21 = sext i32 %19 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !19
  %23 = sext i32 %20 to i64, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !19
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %11) #1, !dbg !20
  %26 = bitcast i32 %25 to float, !dbg !20
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #1, !dbg !20
  %28 = bitcast i32 %27 to float, !dbg !20
  %29 = or i32 %16, 1, !dbg !21
  %30 = or i32 %17, 1, !dbg !21
  %31 = add i32 %29, %18, !dbg !22
  %32 = add i32 %18, %30, !dbg !22
  %33 = sext i32 %31 to i64, !dbg !23
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !23
  %35 = sext i32 %32 to i64, !dbg !23
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !23
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %11) #1, !dbg !24
  %38 = bitcast i32 %37 to float, !dbg !24
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %11) #1, !dbg !24
  %40 = bitcast i32 %39 to float, !dbg !24
  %41 = add nsw i32 %16, 8, !dbg !25
  %42 = add nsw i32 %17, 8, !dbg !25
  %43 = add i32 %41, %18, !dbg !26
  %44 = add i32 %18, %42, !dbg !26
  %45 = sext i32 %43 to i64, !dbg !27
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !27
  %47 = sext i32 %44 to i64, !dbg !27
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !27
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %11) #1, !dbg !28
  %50 = bitcast i32 %49 to float, !dbg !28
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %11) #1, !dbg !28
  %52 = bitcast i32 %51 to float, !dbg !28
  %53 = add nsw i32 %16, 9, !dbg !29
  %54 = add nsw i32 %17, 9, !dbg !29
  %55 = add i32 %53, %18, !dbg !30
  %56 = add i32 %18, %54, !dbg !30
  %57 = sext i32 %55 to i64, !dbg !31
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !31
  %59 = sext i32 %56 to i64, !dbg !31
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !31
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %11) #1, !dbg !32
  %62 = bitcast i32 %61 to float, !dbg !32
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %11) #1, !dbg !32
  %64 = bitcast i32 %63 to float, !dbg !32
  %65 = fcmp ogt float %38, %26, !dbg !33
  %66 = fcmp ogt float %40, %28, !dbg !33
  %67 = shl nsw i32 %15, 4, !dbg !34
  %.v = select i1 %65, i32 %29, i32 %16, !dbg !35
  %.v1 = select i1 %66, i32 %30, i32 %17, !dbg !35
  %68 = fcmp uno float %38, 0.000000e+00, !dbg !36
  %69 = fcmp uno float %40, 0.000000e+00, !dbg !36
  %70 = or i1 %65, %68, !dbg !40
  %71 = or i1 %66, %69, !dbg !40
  %72 = select i1 %70, float %38, float %26, !dbg !41
  %73 = select i1 %71, float %40, float %28, !dbg !41
  %74 = fcmp olt float %72, %50, !dbg !42
  %75 = fcmp olt float %73, %52, !dbg !42
  %.v2 = select i1 %74, i32 %41, i32 %.v, !dbg !43
  %.v3 = select i1 %75, i32 %42, i32 %.v1, !dbg !43
  %76 = fcmp uno float %50, 0.000000e+00, !dbg !44
  %77 = fcmp uno float %52, 0.000000e+00, !dbg !44
  %78 = or i1 %76, %74, !dbg !46
  %79 = or i1 %77, %75, !dbg !46
  %80 = select i1 %78, float %50, float %72, !dbg !47
  %81 = select i1 %79, float %52, float %73, !dbg !47
  %82 = fcmp olt float %80, %62, !dbg !48
  %83 = fcmp olt float %81, %64, !dbg !48
  %.v4 = select i1 %82, i32 %53, i32 %.v2, !dbg !49
  %84 = add nsw i32 %.v4, %67, !dbg !49
  %.v5 = select i1 %83, i32 %54, i32 %.v3, !dbg !49
  %85 = add nsw i32 %.v5, %67, !dbg !49
  %86 = sext i32 %9 to i64, !dbg !50
  %87 = getelementptr i64, ptr addrspace(1) %1, i64 %86, !dbg !50
  %88 = sext i32 %84 to i64, !dbg !51
  %89 = sext i32 %85 to i64, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b64 [ $2 + 0 ], { $0, $1 };", "l,l,l,b"(i64 %88, i64 %89, ptr addrspace(1) %87, i1 %11) #1, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "cqmkje5uqqmnggyhacxefgcgwh5jb2xqesrr7viplzfufikkj7wx.py", directory: "/tmp/torchinductor_meng/qm")
!3 = !{ptr @triton__0d1d2de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2de, !"maxntidx", i32 128}
!5 = distinct !DISubprogram(name: "triton__0d1d2de", linkageName: "triton__0d1d2de", scope: !2, file: !2, line: 12, type: !6, scopeLine: 12, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 15, column: 36, scope: !5)
!9 = !DILocation(line: 14, column: 28, scope: !5)
!10 = !DILocation(line: 14, column: 33, scope: !5)
!11 = !DILocation(line: 15, column: 23, scope: !5)
!12 = !DILocation(line: 16, column: 21, scope: !5)
!13 = !DILocation(line: 18, column: 20, scope: !5)
!14 = !DILocation(line: 17, column: 18, scope: !5)
!15 = !DILocation(line: 19, column: 25, scope: !5)
!16 = !DILocation(line: 21, column: 33, scope: !5)
!17 = !DILocation(line: 21, column: 43, scope: !5)
!18 = !DILocation(line: 21, column: 40, scope: !5)
!19 = !DILocation(line: 21, column: 30, scope: !5)
!20 = !DILocation(line: 21, column: 49, scope: !5)
!21 = !DILocation(line: 22, column: 35, scope: !5)
!22 = !DILocation(line: 22, column: 44, scope: !5)
!23 = !DILocation(line: 22, column: 30, scope: !5)
!24 = !DILocation(line: 22, column: 53, scope: !5)
!25 = !DILocation(line: 23, column: 35, scope: !5)
!26 = !DILocation(line: 23, column: 44, scope: !5)
!27 = !DILocation(line: 23, column: 30, scope: !5)
!28 = !DILocation(line: 23, column: 53, scope: !5)
!29 = !DILocation(line: 24, column: 36, scope: !5)
!30 = !DILocation(line: 24, column: 45, scope: !5)
!31 = !DILocation(line: 24, column: 31, scope: !5)
!32 = !DILocation(line: 24, column: 54, scope: !5)
!33 = !DILocation(line: 25, column: 18, scope: !5)
!34 = !DILocation(line: 26, column: 28, scope: !5)
!35 = !DILocation(line: 28, column: 32, scope: !5)
!36 = !DILocation(line: 38, column: 21, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !5, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/meng/anaconda3/envs/ttcpu/lib/python3.10/site-packages/torch/_inductor")
!39 = !DILocation(line: 29, column: 40, scope: !37)
!40 = !DILocation(line: 38, column: 16, scope: !37, inlinedAt: !39)
!41 = !DILocation(line: 39, column: 29, scope: !37, inlinedAt: !39)
!42 = !DILocation(line: 30, column: 18, scope: !5)
!43 = !DILocation(line: 32, column: 33, scope: !5)
!44 = !DILocation(line: 38, column: 21, scope: !37, inlinedAt: !45)
!45 = !DILocation(line: 33, column: 41, scope: !37)
!46 = !DILocation(line: 38, column: 16, scope: !37, inlinedAt: !45)
!47 = !DILocation(line: 39, column: 29, scope: !37, inlinedAt: !45)
!48 = !DILocation(line: 34, column: 20, scope: !5)
!49 = !DILocation(line: 36, column: 35, scope: !5)
!50 = !DILocation(line: 38, column: 25, scope: !5)
!51 = !DILocation(line: 38, column: 37, scope: !5)
!52 = !DILocation(line: 38, column: 4, scope: !5)
