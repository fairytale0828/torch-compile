// -----// IR Dump Before Inliner (inline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %2 = tt.get_program_id z : i32 loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc4)
    %c1_i32 = arith.constant 1 : i32 loc(#loc4)
    %3 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc4)
    %4 = arith.bitcast %arg13 : i32 to i32 loc(#loc4)
    %5 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc4)
    %6 = llvm.mlir.undef : i32 loc(#loc4)
    %7 = scf.for %arg23 = %3 to %4 step %5 iter_args(%arg24 = %2) -> (i32)  : i32 {
      %8 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %9 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc6)
      %c1_i32_1 = arith.constant 1 : i32 loc(#loc6)
      %10 = arith.bitcast %c0_i32_0 : i32 to i32 loc(#loc6)
      %11 = arith.bitcast %9 : i32 to i32 loc(#loc6)
      %12 = arith.bitcast %c1_i32_1 : i32 to i32 loc(#loc6)
      %13 = llvm.mlir.undef : i32 loc(#loc6)
      scf.for %arg25 = %10 to %11 step %12  : i32 {
        %14 = arith.divsi %arg25, %arg20 : i32 loc(#loc7)
        %15 = arith.remsi %arg25, %arg20 : i32 loc(#loc8)
        %c1_i32_2 = arith.constant 1 : i32 loc(#loc9)
        %16 = arith.muli %14, %c1_i32_2 : i32 loc(#loc9)
        %17 = arith.subi %16, %arg21 : i32 loc(#loc10)
        %c1_i32_3 = arith.constant 1 : i32 loc(#loc11)
        %18 = arith.muli %15, %c1_i32_3 : i32 loc(#loc11)
        %19 = arith.subi %18, %arg22 : i32 loc(#loc12)
        %20 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc13)
        %21 = tt.load %20 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc14)
        %cst = arith.constant 0.000000e+00 : f32 loc(#loc15)
        %c0_i32_4 = arith.constant 0 : i32 loc(#loc16)
        %c1_i32_5 = arith.constant 1 : i32 loc(#loc16)
        %22 = arith.bitcast %c0_i32_4 : i32 to i32 loc(#loc16)
        %23 = arith.bitcast %arg6 : i32 to i32 loc(#loc16)
        %24 = arith.bitcast %c1_i32_5 : i32 to i32 loc(#loc16)
        %25 = llvm.mlir.undef : i32 loc(#loc16)
        %26 = scf.for %arg26 = %22 to %23 step %24 iter_args(%arg27 = %cst) -> (f32)  : i32 {
          %36 = arith.muli %arg23, %arg8 : i32 loc(#loc17)
          %37 = arith.muli %arg26, %arg9 : i32 loc(#loc18)
          %38 = arith.addi %36, %37 : i32 loc(#loc19)
          %39 = arith.muli %0, %arg1 : i32 loc(#loc20)
          %40 = arith.muli %arg26, %arg2 : i32 loc(#loc21)
          %41 = arith.addi %39, %40 : i32 loc(#loc22)
          %c0_i32_7 = arith.constant 0 : i32 loc(#loc23)
          %c1_i32_8 = arith.constant 1 : i32 loc(#loc23)
          %42 = arith.bitcast %c0_i32_7 : i32 to i32 loc(#loc23)
          %43 = arith.bitcast %arg11 : i32 to i32 loc(#loc23)
          %44 = arith.bitcast %c1_i32_8 : i32 to i32 loc(#loc23)
          %45 = llvm.mlir.undef : i32 loc(#loc23)
          %46 = scf.for %arg28 = %42 to %43 step %44 iter_args(%arg29 = %arg27) -> (f32)  : i32 {
            %c1_i32_9 = arith.constant 1 : i32 loc(#loc24)
            %47 = arith.muli %arg28, %c1_i32_9 : i32 loc(#loc24)
            %48 = arith.addi %17, %47 : i32 loc(#loc25)
            %c0_i32_10 = arith.constant 0 : i32 loc(#loc26)
            %49 = arith.cmpi slt, %48, %c0_i32_10 : i32 loc(#loc26)
            %50 = arith.cmpi sge, %48, %arg4 : i32 loc(#loc27)
            %51 = arith.ori %49, %50 : i1 loc(#loc28)
            %true = arith.constant true loc(#loc29)
            %52 = arith.xori %51, %true : i1 loc(#loc29)
            %53 = scf.if %52 -> (f32) {
              %c0_i32_11 = arith.constant 0 : i32 loc(#loc31)
              %c1_i32_12 = arith.constant 1 : i32 loc(#loc31)
              %54 = arith.bitcast %c0_i32_11 : i32 to i32 loc(#loc31)
              %55 = arith.bitcast %arg12 : i32 to i32 loc(#loc31)
              %56 = arith.bitcast %c1_i32_12 : i32 to i32 loc(#loc31)
              %57 = llvm.mlir.undef : i32 loc(#loc31)
              %58 = scf.for %arg30 = %54 to %55 step %56 iter_args(%arg31 = %arg29) -> (f32)  : i32 {
                %c1_i32_13 = arith.constant 1 : i32 loc(#loc32)
                %59 = arith.muli %arg30, %c1_i32_13 : i32 loc(#loc32)
                %60 = arith.addi %19, %59 : i32 loc(#loc33)
                %c0_i32_14 = arith.constant 0 : i32 loc(#loc34)
                %61 = arith.cmpi slt, %60, %c0_i32_14 : i32 loc(#loc34)
                %62 = arith.cmpi sge, %60, %arg5 : i32 loc(#loc35)
                %63 = arith.ori %61, %62 : i1 loc(#loc36)
                %true_15 = arith.constant true loc(#loc37)
                %64 = arith.xori %63, %true_15 : i1 loc(#loc37)
                %65 = scf.if %64 -> (f32) {
                  %66 = tt.addptr %arg7, %38 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %67 = arith.muli %arg28, %arg10 : i32 loc(#loc40)
                  %68 = tt.addptr %66, %67 : !tt.ptr<f32, 1>, i32 loc(#loc41)
                  %c1_i32_16 = arith.constant 1 : i32 loc(#loc42)
                  %69 = arith.muli %arg30, %c1_i32_16 : i32 loc(#loc42)
                  %70 = tt.addptr %68, %69 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %71 = tt.load %70 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %72 = tt.addptr %arg0, %41 : !tt.ptr<f32, 1>, i32 loc(#loc45)
                  %73 = arith.muli %48, %arg3 : i32 loc(#loc46)
                  %74 = tt.addptr %72, %73 : !tt.ptr<f32, 1>, i32 loc(#loc47)
                  %c1_i32_17 = arith.constant 1 : i32 loc(#loc48)
                  %75 = arith.muli %60, %c1_i32_17 : i32 loc(#loc48)
                  %76 = tt.addptr %74, %75 : !tt.ptr<f32, 1>, i32 loc(#loc49)
                  %77 = tt.load %76 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc50)
                  %78 = arith.mulf %77, %71 : f32 loc(#loc51)
                  %79 = arith.addf %arg31, %78 : f32 loc(#loc52)
                  scf.yield %79 : f32 loc(#loc52)
                } else {
                  scf.yield %arg31 : f32 loc(#loc53)
                } loc(#loc38)
                scf.yield %65 : f32 loc(#loc54)
              } loc(#loc31)
              scf.yield %58 : f32 loc(#loc31)
            } else {
              scf.yield %arg29 : f32 loc(#loc53)
            } loc(#loc30)
            scf.yield %53 : f32 loc(#loc55)
          } loc(#loc23)
          scf.yield %46 : f32 loc(#loc56)
        } loc(#loc16)
        %27 = arith.addf %26, %21 : f32 loc(#loc57)
        %28 = arith.muli %0, %arg16 : i32 loc(#loc58)
        %29 = arith.muli %arg23, %arg17 : i32 loc(#loc59)
        %30 = arith.addi %28, %29 : i32 loc(#loc60)
        %31 = arith.muli %14, %arg18 : i32 loc(#loc61)
        %32 = arith.addi %30, %31 : i32 loc(#loc62)
        %c1_i32_6 = arith.constant 1 : i32 loc(#loc63)
        %33 = arith.muli %15, %c1_i32_6 : i32 loc(#loc63)
        %34 = arith.addi %32, %33 : i32 loc(#loc64)
        %35 = tt.addptr %arg15, %34 : !tt.ptr<f32, 1>, i32 loc(#loc65)
        tt.store %35, %27 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc66)
      } loc(#loc6)
      scf.yield %13 : i32 loc(#loc67)
    } loc(#loc4)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":53:32)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":54:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:41)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:41)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:48)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:28)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:56)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:36)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:103)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:107)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc53 = loc(unknown)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc57 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc58 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc59 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc60 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc61 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc62 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc63 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:30)
#loc64 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc65 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc66 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc67 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:8)
#loc68 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('tt.func' operation: @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %2 = tt.get_program_id z : i32 loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc4)
    %c1_i32 = arith.constant 1 : i32 loc(#loc4)
    %3 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc4)
    %4 = arith.bitcast %arg13 : i32 to i32 loc(#loc4)
    %5 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc4)
    %6 = llvm.mlir.undef : i32 loc(#loc4)
    %7 = scf.for %arg23 = %3 to %4 step %5 iter_args(%arg24 = %2) -> (i32)  : i32 {
      %8 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %9 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc6)
      %c1_i32_1 = arith.constant 1 : i32 loc(#loc6)
      %10 = arith.bitcast %c0_i32_0 : i32 to i32 loc(#loc6)
      %11 = arith.bitcast %9 : i32 to i32 loc(#loc6)
      %12 = arith.bitcast %c1_i32_1 : i32 to i32 loc(#loc6)
      %13 = llvm.mlir.undef : i32 loc(#loc6)
      scf.for %arg25 = %10 to %11 step %12  : i32 {
        %14 = arith.divsi %arg25, %arg20 : i32 loc(#loc7)
        %15 = arith.remsi %arg25, %arg20 : i32 loc(#loc8)
        %c1_i32_2 = arith.constant 1 : i32 loc(#loc9)
        %16 = arith.muli %14, %c1_i32_2 : i32 loc(#loc9)
        %17 = arith.subi %16, %arg21 : i32 loc(#loc10)
        %c1_i32_3 = arith.constant 1 : i32 loc(#loc11)
        %18 = arith.muli %15, %c1_i32_3 : i32 loc(#loc11)
        %19 = arith.subi %18, %arg22 : i32 loc(#loc12)
        %20 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc13)
        %21 = tt.load %20 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc14)
        %cst = arith.constant 0.000000e+00 : f32 loc(#loc15)
        %c0_i32_4 = arith.constant 0 : i32 loc(#loc16)
        %c1_i32_5 = arith.constant 1 : i32 loc(#loc16)
        %22 = arith.bitcast %c0_i32_4 : i32 to i32 loc(#loc16)
        %23 = arith.bitcast %arg6 : i32 to i32 loc(#loc16)
        %24 = arith.bitcast %c1_i32_5 : i32 to i32 loc(#loc16)
        %25 = llvm.mlir.undef : i32 loc(#loc16)
        %26 = scf.for %arg26 = %22 to %23 step %24 iter_args(%arg27 = %cst) -> (f32)  : i32 {
          %36 = arith.muli %arg23, %arg8 : i32 loc(#loc17)
          %37 = arith.muli %arg26, %arg9 : i32 loc(#loc18)
          %38 = arith.addi %36, %37 : i32 loc(#loc19)
          %39 = arith.muli %0, %arg1 : i32 loc(#loc20)
          %40 = arith.muli %arg26, %arg2 : i32 loc(#loc21)
          %41 = arith.addi %39, %40 : i32 loc(#loc22)
          %c0_i32_7 = arith.constant 0 : i32 loc(#loc23)
          %c1_i32_8 = arith.constant 1 : i32 loc(#loc23)
          %42 = arith.bitcast %c0_i32_7 : i32 to i32 loc(#loc23)
          %43 = arith.bitcast %arg11 : i32 to i32 loc(#loc23)
          %44 = arith.bitcast %c1_i32_8 : i32 to i32 loc(#loc23)
          %45 = llvm.mlir.undef : i32 loc(#loc23)
          %46 = scf.for %arg28 = %42 to %43 step %44 iter_args(%arg29 = %arg27) -> (f32)  : i32 {
            %c1_i32_9 = arith.constant 1 : i32 loc(#loc24)
            %47 = arith.muli %arg28, %c1_i32_9 : i32 loc(#loc24)
            %48 = arith.addi %17, %47 : i32 loc(#loc25)
            %c0_i32_10 = arith.constant 0 : i32 loc(#loc26)
            %49 = arith.cmpi slt, %48, %c0_i32_10 : i32 loc(#loc26)
            %50 = arith.cmpi sge, %48, %arg4 : i32 loc(#loc27)
            %51 = arith.ori %49, %50 : i1 loc(#loc28)
            %true = arith.constant true loc(#loc29)
            %52 = arith.xori %51, %true : i1 loc(#loc29)
            %53 = scf.if %52 -> (f32) {
              %c0_i32_11 = arith.constant 0 : i32 loc(#loc31)
              %c1_i32_12 = arith.constant 1 : i32 loc(#loc31)
              %54 = arith.bitcast %c0_i32_11 : i32 to i32 loc(#loc31)
              %55 = arith.bitcast %arg12 : i32 to i32 loc(#loc31)
              %56 = arith.bitcast %c1_i32_12 : i32 to i32 loc(#loc31)
              %57 = llvm.mlir.undef : i32 loc(#loc31)
              %58 = scf.for %arg30 = %54 to %55 step %56 iter_args(%arg31 = %arg29) -> (f32)  : i32 {
                %c1_i32_13 = arith.constant 1 : i32 loc(#loc32)
                %59 = arith.muli %arg30, %c1_i32_13 : i32 loc(#loc32)
                %60 = arith.addi %19, %59 : i32 loc(#loc33)
                %c0_i32_14 = arith.constant 0 : i32 loc(#loc34)
                %61 = arith.cmpi slt, %60, %c0_i32_14 : i32 loc(#loc34)
                %62 = arith.cmpi sge, %60, %arg5 : i32 loc(#loc35)
                %63 = arith.ori %61, %62 : i1 loc(#loc36)
                %true_15 = arith.constant true loc(#loc37)
                %64 = arith.xori %63, %true_15 : i1 loc(#loc37)
                %65 = scf.if %64 -> (f32) {
                  %66 = tt.addptr %arg7, %38 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %67 = arith.muli %arg28, %arg10 : i32 loc(#loc40)
                  %68 = tt.addptr %66, %67 : !tt.ptr<f32, 1>, i32 loc(#loc41)
                  %c1_i32_16 = arith.constant 1 : i32 loc(#loc42)
                  %69 = arith.muli %arg30, %c1_i32_16 : i32 loc(#loc42)
                  %70 = tt.addptr %68, %69 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %71 = tt.load %70 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %72 = tt.addptr %arg0, %41 : !tt.ptr<f32, 1>, i32 loc(#loc45)
                  %73 = arith.muli %48, %arg3 : i32 loc(#loc46)
                  %74 = tt.addptr %72, %73 : !tt.ptr<f32, 1>, i32 loc(#loc47)
                  %c1_i32_17 = arith.constant 1 : i32 loc(#loc48)
                  %75 = arith.muli %60, %c1_i32_17 : i32 loc(#loc48)
                  %76 = tt.addptr %74, %75 : !tt.ptr<f32, 1>, i32 loc(#loc49)
                  %77 = tt.load %76 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc50)
                  %78 = arith.mulf %77, %71 : f32 loc(#loc51)
                  %79 = arith.addf %arg31, %78 : f32 loc(#loc52)
                  scf.yield %79 : f32 loc(#loc52)
                } else {
                  scf.yield %arg31 : f32 loc(#loc53)
                } loc(#loc38)
                scf.yield %65 : f32 loc(#loc54)
              } loc(#loc31)
              scf.yield %58 : f32 loc(#loc31)
            } else {
              scf.yield %arg29 : f32 loc(#loc53)
            } loc(#loc30)
            scf.yield %53 : f32 loc(#loc55)
          } loc(#loc23)
          scf.yield %46 : f32 loc(#loc56)
        } loc(#loc16)
        %27 = arith.addf %26, %21 : f32 loc(#loc57)
        %28 = arith.muli %0, %arg16 : i32 loc(#loc58)
        %29 = arith.muli %arg23, %arg17 : i32 loc(#loc59)
        %30 = arith.addi %28, %29 : i32 loc(#loc60)
        %31 = arith.muli %14, %arg18 : i32 loc(#loc61)
        %32 = arith.addi %30, %31 : i32 loc(#loc62)
        %c1_i32_6 = arith.constant 1 : i32 loc(#loc63)
        %33 = arith.muli %15, %c1_i32_6 : i32 loc(#loc63)
        %34 = arith.addi %32, %33 : i32 loc(#loc64)
        %35 = tt.addptr %arg15, %34 : !tt.ptr<f32, 1>, i32 loc(#loc65)
        tt.store %35, %27 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc66)
      } loc(#loc6)
      scf.yield %13 : i32 loc(#loc67)
    } loc(#loc4)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":53:32)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":54:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:41)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:41)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:48)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:28)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:56)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:36)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:103)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:107)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc53 = loc(unknown)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc57 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc58 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc59 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc60 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc61 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc62 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc63 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:30)
#loc64 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc65 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc66 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc67 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:8)
#loc68 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonRewriteTensorPointer (triton-rewrite-tensor-pointer) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Inliner (inline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('tt.func' operation: @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonCombineOps (triton-combine) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonReorderBroadcast (triton-reorder-broadcast) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before LoopInvariantCodeMotion (loop-invariant-code-motion) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before SymbolDCE (symbol-dce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before ConvertTritonToTritonGPU (convert-triton-to-tritongpu) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUCoalesce (tritongpu-coalesce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPlanCTAPass (triton-nvidia-gpu-plan-cta) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURewriteTensorPointer (tritongpu-rewrite-tensor-pointer) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPlanCTAPass (triton-nvidia-gpu-plan-cta) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUAccelerateMatmul (tritongpu-accelerate-matmul) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeDotOperands (tritongpu-optimize-dot-operands) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPipeline (tritongpu-pipeline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before MaterializeLoadStore (triton-nvidia-gpu-materialize-load-store) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPrefetch (tritongpu-prefetch) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeDotOperands (tritongpu-optimize-dot-operands) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUDecomposeConversions (tritongpu-decompose-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUWSFixupMissingAttrs (triton-nvidia-gpu-ws-fixup-missing-attrs) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUReorderInstructions (tritongpu-reorder-instructions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before SymbolDCE (symbol-dce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUWSFixupMissingAttrs (triton-nvidia-gpu-ws-fixup-missing-attrs) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeThreadLocality (tritongpu-optimize-thread-locality) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After SCFToControlFlow (convert-scf-to-cf) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    cf.br ^bb1(%c0_i32 : i32) loc(#loc1)
  ^bb1(%4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb22
    %5 = arith.cmpi slt, %4, %arg13 : i32 loc(#loc1)
    cf.cond_br %5, ^bb2, ^bb23 loc(#loc1)
  ^bb2:  // pred: ^bb1
    %6 = tt.addptr %arg14, %4 : !tt.ptr<f32, 1>, i32 loc(#loc7)
    %7 = arith.muli %4, %arg8 : i32 loc(#loc8)
    %8 = arith.muli %4, %arg17 : i32 loc(#loc9)
    %9 = arith.addi %3, %8 : i32 loc(#loc10)
    cf.br ^bb3(%c0_i32 : i32) loc(#loc11)
  ^bb3(%10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb21
    %11 = arith.cmpi slt, %10, %1 : i32 loc(#loc11)
    cf.cond_br %11, ^bb4, ^bb22 loc(#loc11)
  ^bb4:  // pred: ^bb3
    %12 = arith.divsi %10, %arg20 : i32 loc(#loc12)
    %13 = arith.remsi %10, %arg20 : i32 loc(#loc13)
    %14 = arith.subi %12, %arg21 : i32 loc(#loc14)
    %15 = arith.subi %13, %arg22 : i32 loc(#loc15)
    %16 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
    cf.br ^bb5(%c0_i32, %cst : i32, f32) loc(#loc17)
  ^bb5(%17: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %18: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb20
    %19 = arith.cmpi slt, %17, %arg6 : i32 loc(#loc17)
    cf.cond_br %19, ^bb6, ^bb21 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %20 = arith.muli %17, %arg9 : i32 loc(#loc18)
    %21 = arith.addi %7, %20 : i32 loc(#loc19)
    %22 = arith.muli %17, %arg2 : i32 loc(#loc20)
    %23 = arith.addi %2, %22 : i32 loc(#loc21)
    cf.br ^bb7(%c0_i32, %18 : i32, f32) loc(#loc22)
  ^bb7(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb19
    %26 = arith.cmpi slt, %24, %arg11 : i32 loc(#loc22)
    cf.cond_br %26, ^bb8, ^bb20 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %27 = arith.addi %14, %24 : i32 loc(#loc23)
    %28 = arith.cmpi slt, %27, %c0_i32 : i32 loc(#loc24)
    %29 = arith.cmpi sge, %27, %arg4 : i32 loc(#loc25)
    %30 = arith.ori %28, %29 : i1 loc(#loc26)
    cf.cond_br %30, ^bb9, ^bb10 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cf.br ^bb18(%25 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    cf.br ^bb11(%c0_i32, %25 : i32, f32) loc(#loc28)
  ^bb11(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %33 = arith.cmpi slt, %31, %arg12 : i32 loc(#loc28)
    cf.cond_br %33, ^bb12, ^bb17 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %34 = arith.addi %15, %31 : i32 loc(#loc29)
    %35 = arith.cmpi slt, %34, %c0_i32 : i32 loc(#loc30)
    %36 = arith.cmpi sge, %34, %arg5 : i32 loc(#loc31)
    %37 = arith.ori %35, %36 : i1 loc(#loc32)
    cf.cond_br %37, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    cf.br ^bb15(%32 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %38 = tt.addptr %arg7, %21 : !tt.ptr<f32, 1>, i32 loc(#loc34)
    %39 = arith.muli %24, %arg10 : i32 loc(#loc35)
    %40 = tt.addptr %38, %39 : !tt.ptr<f32, 1>, i32 loc(#loc36)
    %41 = tt.addptr %40, %31 : !tt.ptr<f32, 1>, i32 loc(#loc37)
    %42 = tt.load %41 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc38)
    %43 = tt.addptr %arg0, %23 : !tt.ptr<f32, 1>, i32 loc(#loc39)
    %44 = arith.muli %27, %arg3 : i32 loc(#loc40)
    %45 = tt.addptr %43, %44 : !tt.ptr<f32, 1>, i32 loc(#loc41)
    %46 = tt.addptr %45, %34 : !tt.ptr<f32, 1>, i32 loc(#loc42)
    %47 = tt.load %46 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc43)
    %48 = arith.mulf %47, %42 : f32 loc(#loc44)
    %49 = arith.addf %32, %48 : f32 loc(#loc45)
    cf.br ^bb15(%49 : f32) loc(#loc33)
  ^bb15(%50: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    cf.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %51 = arith.addi %31, %c1_i32 : i32 loc(#loc28)
    cf.br ^bb11(%51, %50 : i32, f32) loc(#loc28)
  ^bb17:  // pred: ^bb11
    cf.br ^bb18(%32 : f32) loc(#loc27)
  ^bb18(%52: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // 2 preds: ^bb9, ^bb17
    cf.br ^bb19 loc(#loc27)
  ^bb19:  // pred: ^bb18
    %53 = arith.addi %24, %c1_i32 : i32 loc(#loc22)
    cf.br ^bb7(%53, %52 : i32, f32) loc(#loc22)
  ^bb20:  // pred: ^bb7
    %54 = arith.addi %17, %c1_i32 : i32 loc(#loc17)
    cf.br ^bb5(%54, %25 : i32, f32) loc(#loc17)
  ^bb21:  // pred: ^bb5
    %55 = arith.addf %18, %16 : f32 loc(#loc46)
    %56 = arith.muli %12, %arg18 : i32 loc(#loc47)
    %57 = arith.addi %9, %56 : i32 loc(#loc48)
    %58 = arith.addi %57, %13 : i32 loc(#loc49)
    %59 = tt.addptr %arg15, %58 : !tt.ptr<f32, 1>, i32 loc(#loc50)
    tt.store %59, %55 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc51)
    %60 = arith.addi %10, %c1_i32 : i32 loc(#loc11)
    cf.br ^bb3(%60 : i32) loc(#loc11)
  ^bb22:  // pred: ^bb3
    %61 = arith.addi %4, %c1_i32 : i32 loc(#loc1)
    cf.br ^bb1(%61 : i32) loc(#loc1)
  ^bb23:  // pred: ^bb1
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After ConvertTritonGPUToLLVM (convert-triton-gpu-to-llvm) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [128 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.addressof @global_smem : !llvm.ptr<3> loc(#loc)
    %1 = llvm.bitcast %0 : !llvm.ptr<3> to !llvm.ptr<3> loc(#loc)
    %2 = builtin.unrealized_conversion_cast %arg15 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %3 = builtin.unrealized_conversion_cast %arg14 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %4 = builtin.unrealized_conversion_cast %arg7 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %5 = builtin.unrealized_conversion_cast %arg0 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %6 = llvm.mlir.constant(1 : i32) : i32 loc(#loc1)
    %7 = llvm.mlir.constant(0 : i32) : i32 loc(#loc1)
    %8 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %9 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc3)
    %10 = llvm.mul %arg19, %arg20  : i32 loc(#loc4)
    %11 = llvm.mul %9, %arg1  : i32 loc(#loc5)
    %12 = llvm.mul %9, %arg16  : i32 loc(#loc6)
    llvm.br ^bb1(%7 : i32) loc(#loc1)
  ^bb1(%13: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb22
    %14 = llvm.icmp "slt" %13, %arg13 : i32 loc(#loc1)
    llvm.cond_br %14, ^bb2, ^bb23 loc(#loc1)
  ^bb2:  // pred: ^bb1
    %15 = llvm.getelementptr %arg14[%13] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc7)
    %16 = llvm.mul %13, %arg8  : i32 loc(#loc8)
    %17 = llvm.mul %13, %arg17  : i32 loc(#loc9)
    %18 = llvm.add %12, %17  : i32 loc(#loc10)
    llvm.br ^bb3(%7 : i32) loc(#loc11)
  ^bb3(%19: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb21
    %20 = llvm.icmp "slt" %19, %10 : i32 loc(#loc11)
    llvm.cond_br %20, ^bb4, ^bb22 loc(#loc11)
  ^bb4:  // pred: ^bb3
    %21 = llvm.sdiv %19, %arg20  : i32 loc(#loc12)
    %22 = llvm.srem %19, %arg20  : i32 loc(#loc13)
    %23 = llvm.sub %21, %arg21  : i32 loc(#loc14)
    %24 = llvm.sub %22, %arg22  : i32 loc(#loc15)
    %25 = llvm.mlir.constant(true) : i1 loc(#loc16)
    %26 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %15, %25 : (!llvm.ptr<1>, i1) -> i32 loc(#loc16)
    %27 = llvm.bitcast %26 : i32 to vector<1xf32> loc(#loc16)
    %28 = llvm.mlir.constant(0 : index) : i32 loc(#loc16)
    %29 = llvm.extractelement %27[%28 : i32] : vector<1xf32> loc(#loc16)
    llvm.br ^bb5(%7, %8 : i32, f32) loc(#loc17)
  ^bb5(%30: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %31: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb20
    %32 = llvm.icmp "slt" %30, %arg6 : i32 loc(#loc17)
    llvm.cond_br %32, ^bb6, ^bb21 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %33 = llvm.mul %30, %arg9  : i32 loc(#loc18)
    %34 = llvm.add %16, %33  : i32 loc(#loc19)
    %35 = llvm.mul %30, %arg2  : i32 loc(#loc20)
    %36 = llvm.add %11, %35  : i32 loc(#loc21)
    llvm.br ^bb7(%7, %31 : i32, f32) loc(#loc22)
  ^bb7(%37: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb19
    %39 = llvm.icmp "slt" %37, %arg11 : i32 loc(#loc22)
    llvm.cond_br %39, ^bb8, ^bb20 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %40 = llvm.add %23, %37  : i32 loc(#loc23)
    %41 = llvm.icmp "slt" %40, %7 : i32 loc(#loc24)
    %42 = llvm.icmp "sge" %40, %arg4 : i32 loc(#loc25)
    %43 = llvm.or %41, %42  : i1 loc(#loc26)
    llvm.cond_br %43, ^bb9, ^bb10 loc(#loc27)
  ^bb9:  // pred: ^bb8
    llvm.br ^bb18(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%7, %38 : i32, f32) loc(#loc28)
  ^bb11(%44: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %45: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %46 = llvm.icmp "slt" %44, %arg12 : i32 loc(#loc28)
    llvm.cond_br %46, ^bb12, ^bb17 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %47 = llvm.add %24, %44  : i32 loc(#loc29)
    %48 = llvm.icmp "slt" %47, %7 : i32 loc(#loc30)
    %49 = llvm.icmp "sge" %47, %arg5 : i32 loc(#loc31)
    %50 = llvm.or %48, %49  : i1 loc(#loc32)
    llvm.cond_br %50, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%45 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %51 = llvm.getelementptr %arg7[%34] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %52 = llvm.mul %37, %arg10  : i32 loc(#loc35)
    %53 = llvm.getelementptr %51[%52] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %54 = llvm.getelementptr %53[%44] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %55 = llvm.mlir.constant(true) : i1 loc(#loc38)
    %56 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %54, %55 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %57 = llvm.bitcast %56 : i32 to vector<1xf32> loc(#loc38)
    %58 = llvm.mlir.constant(0 : index) : i32 loc(#loc38)
    %59 = llvm.extractelement %57[%58 : i32] : vector<1xf32> loc(#loc38)
    %60 = llvm.getelementptr %arg0[%36] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %61 = llvm.mul %40, %arg3  : i32 loc(#loc40)
    %62 = llvm.getelementptr %60[%61] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %63 = llvm.getelementptr %62[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %64 = llvm.mlir.constant(true) : i1 loc(#loc43)
    %65 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %63, %64 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %66 = llvm.bitcast %65 : i32 to vector<1xf32> loc(#loc43)
    %67 = llvm.mlir.constant(0 : index) : i32 loc(#loc43)
    %68 = llvm.extractelement %66[%67 : i32] : vector<1xf32> loc(#loc43)
    %69 = llvm.fmul %68, %59  : f32 loc(#loc44)
    %70 = llvm.fadd %45, %69  : f32 loc(#loc45)
    llvm.br ^bb15(%70 : f32) loc(#loc33)
  ^bb15(%71: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %72 = llvm.add %44, %6  : i32 loc(#loc28)
    llvm.br ^bb11(%72, %71 : i32, f32) loc(#loc28)
  ^bb17:  // pred: ^bb11
    llvm.br ^bb18(%45 : f32) loc(#loc27)
  ^bb18(%73: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // 2 preds: ^bb9, ^bb17
    llvm.br ^bb19 loc(#loc27)
  ^bb19:  // pred: ^bb18
    %74 = llvm.add %37, %6  : i32 loc(#loc22)
    llvm.br ^bb7(%74, %73 : i32, f32) loc(#loc22)
  ^bb20:  // pred: ^bb7
    %75 = llvm.add %30, %6  : i32 loc(#loc17)
    llvm.br ^bb5(%75, %38 : i32, f32) loc(#loc17)
  ^bb21:  // pred: ^bb5
    %76 = llvm.fadd %31, %29  : f32 loc(#loc46)
    %77 = llvm.mul %21, %arg18  : i32 loc(#loc47)
    %78 = llvm.add %18, %77  : i32 loc(#loc48)
    %79 = llvm.add %78, %22  : i32 loc(#loc49)
    %80 = llvm.getelementptr %arg15[%79] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %81 = llvm.mlir.constant(true) : i1 loc(#loc51)
    %82 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %83 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %84 = nvgpu.cluster_id loc(#loc51)
    %85 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %86 = llvm.icmp "eq" %83, %85 : i32 loc(#loc51)
    %87 = llvm.and %81, %86  : i1 loc(#loc51)
    %88 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %89 = llvm.icmp "eq" %82, %88 : i32 loc(#loc51)
    %90 = llvm.and %87, %89  : i1 loc(#loc51)
    %91 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %92 = llvm.bitcast %76 : f32 to f32 loc(#loc51)
    %93 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %94 = llvm.insertelement %92, %91[%93 : i32] : vector<1xf32> loc(#loc51)
    %95 = llvm.bitcast %94 : vector<1xf32> to i32 loc(#loc51)
    %96 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %95, %80, %90 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %97 = llvm.add %19, %6  : i32 loc(#loc11)
    llvm.br ^bb3(%97 : i32) loc(#loc11)
  ^bb22:  // pred: ^bb3
    %98 = llvm.add %13, %6  : i32 loc(#loc1)
    llvm.br ^bb1(%98 : i32) loc(#loc1)
  ^bb23:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After ConvertNVGPUToLLVM (convert-nv-gpu-to-llvm) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [128 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.constant(0 : index) : i32 loc(#loc1)
    %1 = llvm.mlir.constant(true) : i1 loc(#loc1)
    %2 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %3 = llvm.mlir.constant(0 : i32) : i32 loc(#loc3)
    %4 = llvm.mlir.constant(1 : i32) : i32 loc(#loc3)
    %5 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc4)
    %6 = llvm.mul %arg19, %arg20  : i32 loc(#loc5)
    %7 = llvm.mul %5, %arg1  : i32 loc(#loc6)
    %8 = llvm.mul %5, %arg16  : i32 loc(#loc7)
    llvm.br ^bb1(%3 : i32) loc(#loc3)
  ^bb1(%9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb21
    %10 = llvm.icmp "slt" %9, %arg13 : i32 loc(#loc3)
    llvm.cond_br %10, ^bb2, ^bb22 loc(#loc3)
  ^bb2:  // pred: ^bb1
    %11 = llvm.getelementptr %arg14[%9] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc8)
    %12 = llvm.mul %9, %arg8  : i32 loc(#loc9)
    %13 = llvm.mul %9, %arg17  : i32 loc(#loc10)
    %14 = llvm.add %8, %13  : i32 loc(#loc11)
    llvm.br ^bb3(%3 : i32) loc(#loc12)
  ^bb3(%15: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb20
    %16 = llvm.icmp "slt" %15, %6 : i32 loc(#loc12)
    llvm.cond_br %16, ^bb4, ^bb21 loc(#loc12)
  ^bb4:  // pred: ^bb3
    %17 = llvm.sdiv %15, %arg20  : i32 loc(#loc13)
    %18 = llvm.srem %15, %arg20  : i32 loc(#loc14)
    %19 = llvm.sub %17, %arg21  : i32 loc(#loc15)
    %20 = llvm.sub %18, %arg22  : i32 loc(#loc16)
    %21 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %11, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc1)
    %22 = llvm.bitcast %21 : i32 to vector<1xf32> loc(#loc1)
    %23 = llvm.extractelement %22[%0 : i32] : vector<1xf32> loc(#loc1)
    llvm.br ^bb5(%3, %2 : i32, f32) loc(#loc17)
  ^bb5(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb19
    %26 = llvm.icmp "slt" %24, %arg6 : i32 loc(#loc17)
    llvm.cond_br %26, ^bb6, ^bb20 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %27 = llvm.mul %24, %arg9  : i32 loc(#loc18)
    %28 = llvm.add %12, %27  : i32 loc(#loc19)
    %29 = llvm.mul %24, %arg2  : i32 loc(#loc20)
    %30 = llvm.add %7, %29  : i32 loc(#loc21)
    llvm.br ^bb7(%3, %25 : i32, f32) loc(#loc22)
  ^bb7(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb18
    %33 = llvm.icmp "slt" %31, %arg11 : i32 loc(#loc22)
    llvm.cond_br %33, ^bb8, ^bb19 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %34 = llvm.add %19, %31  : i32 loc(#loc23)
    %35 = llvm.icmp "slt" %34, %3 : i32 loc(#loc24)
    %36 = llvm.icmp "sge" %34, %arg4 : i32 loc(#loc25)
    %37 = llvm.or %35, %36  : i1 loc(#loc26)
    llvm.cond_br %37, ^bb9(%32 : f32), ^bb10 loc(#loc27)
  ^bb9(%38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb8, ^bb11
    llvm.br ^bb17(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%3, %32 : i32, f32) loc(#loc28)
  ^bb11(%39: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %40: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %41 = llvm.icmp "slt" %39, %arg12 : i32 loc(#loc28)
    llvm.cond_br %41, ^bb12, ^bb9(%40 : f32) loc(#loc28)
  ^bb12:  // pred: ^bb11
    %42 = llvm.add %20, %39  : i32 loc(#loc29)
    %43 = llvm.icmp "slt" %42, %3 : i32 loc(#loc30)
    %44 = llvm.icmp "sge" %42, %arg5 : i32 loc(#loc31)
    %45 = llvm.or %43, %44  : i1 loc(#loc32)
    llvm.cond_br %45, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%40 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %46 = llvm.getelementptr %arg7[%28] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %47 = llvm.mul %31, %arg10  : i32 loc(#loc35)
    %48 = llvm.getelementptr %46[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %49 = llvm.getelementptr %48[%39] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %50 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %49, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %51 = llvm.bitcast %50 : i32 to vector<1xf32> loc(#loc38)
    %52 = llvm.extractelement %51[%0 : i32] : vector<1xf32> loc(#loc38)
    %53 = llvm.getelementptr %arg0[%30] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %54 = llvm.mul %34, %arg3  : i32 loc(#loc40)
    %55 = llvm.getelementptr %53[%54] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %56 = llvm.getelementptr %55[%42] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %57 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %56, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %58 = llvm.bitcast %57 : i32 to vector<1xf32> loc(#loc43)
    %59 = llvm.extractelement %58[%0 : i32] : vector<1xf32> loc(#loc43)
    %60 = llvm.fmul %59, %52  : f32 loc(#loc44)
    %61 = llvm.fadd %40, %60  : f32 loc(#loc45)
    llvm.br ^bb15(%61 : f32) loc(#loc33)
  ^bb15(%62: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %63 = llvm.add %39, %4  : i32 loc(#loc28)
    llvm.br ^bb11(%63, %62 : i32, f32) loc(#loc28)
  ^bb17(%64: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // pred: ^bb9
    llvm.br ^bb18 loc(#loc27)
  ^bb18:  // pred: ^bb17
    %65 = llvm.add %31, %4  : i32 loc(#loc22)
    llvm.br ^bb7(%65, %64 : i32, f32) loc(#loc22)
  ^bb19:  // pred: ^bb7
    %66 = llvm.add %24, %4  : i32 loc(#loc17)
    llvm.br ^bb5(%66, %32 : i32, f32) loc(#loc17)
  ^bb20:  // pred: ^bb5
    %67 = llvm.fadd %25, %23  : f32 loc(#loc46)
    %68 = llvm.mul %17, %arg18  : i32 loc(#loc47)
    %69 = llvm.add %14, %68  : i32 loc(#loc48)
    %70 = llvm.add %69, %18  : i32 loc(#loc49)
    %71 = llvm.getelementptr %arg15[%70] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %72 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %73 = llvm.and %1, %1  : i1 loc(#loc51)
    %74 = llvm.icmp "eq" %72, %3 : i32 loc(#loc51)
    %75 = llvm.and %73, %74  : i1 loc(#loc51)
    %76 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %77 = llvm.insertelement %67, %76[%3 : i32] : vector<1xf32> loc(#loc51)
    %78 = llvm.bitcast %77 : vector<1xf32> to i32 loc(#loc51)
    %79 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %78, %71, %75 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %80 = llvm.add %15, %4  : i32 loc(#loc12)
    llvm.br ^bb3(%80 : i32) loc(#loc12)
  ^bb21:  // pred: ^bb3
    %81 = llvm.add %9, %4  : i32 loc(#loc3)
    llvm.br ^bb1(%81 : i32) loc(#loc3)
  ^bb22:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After LLVMDIScope (enable-line-info) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [128 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.constant(0 : index) : i32 loc(#loc1)
    %1 = llvm.mlir.constant(true) : i1 loc(#loc1)
    %2 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %3 = llvm.mlir.constant(0 : i32) : i32 loc(#loc3)
    %4 = llvm.mlir.constant(1 : i32) : i32 loc(#loc3)
    %5 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc4)
    %6 = llvm.mul %arg19, %arg20  : i32 loc(#loc5)
    %7 = llvm.mul %5, %arg1  : i32 loc(#loc6)
    %8 = llvm.mul %5, %arg16  : i32 loc(#loc7)
    llvm.br ^bb1(%3 : i32) loc(#loc3)
  ^bb1(%9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb21
    %10 = llvm.icmp "slt" %9, %arg13 : i32 loc(#loc3)
    llvm.cond_br %10, ^bb2, ^bb22 loc(#loc3)
  ^bb2:  // pred: ^bb1
    %11 = llvm.getelementptr %arg14[%9] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc8)
    %12 = llvm.mul %9, %arg8  : i32 loc(#loc9)
    %13 = llvm.mul %9, %arg17  : i32 loc(#loc10)
    %14 = llvm.add %8, %13  : i32 loc(#loc11)
    llvm.br ^bb3(%3 : i32) loc(#loc12)
  ^bb3(%15: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb20
    %16 = llvm.icmp "slt" %15, %6 : i32 loc(#loc12)
    llvm.cond_br %16, ^bb4, ^bb21 loc(#loc12)
  ^bb4:  // pred: ^bb3
    %17 = llvm.sdiv %15, %arg20  : i32 loc(#loc13)
    %18 = llvm.srem %15, %arg20  : i32 loc(#loc14)
    %19 = llvm.sub %17, %arg21  : i32 loc(#loc15)
    %20 = llvm.sub %18, %arg22  : i32 loc(#loc16)
    %21 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %11, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc1)
    %22 = llvm.bitcast %21 : i32 to vector<1xf32> loc(#loc1)
    %23 = llvm.extractelement %22[%0 : i32] : vector<1xf32> loc(#loc1)
    llvm.br ^bb5(%3, %2 : i32, f32) loc(#loc17)
  ^bb5(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb19
    %26 = llvm.icmp "slt" %24, %arg6 : i32 loc(#loc17)
    llvm.cond_br %26, ^bb6, ^bb20 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %27 = llvm.mul %24, %arg9  : i32 loc(#loc18)
    %28 = llvm.add %12, %27  : i32 loc(#loc19)
    %29 = llvm.mul %24, %arg2  : i32 loc(#loc20)
    %30 = llvm.add %7, %29  : i32 loc(#loc21)
    llvm.br ^bb7(%3, %25 : i32, f32) loc(#loc22)
  ^bb7(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb18
    %33 = llvm.icmp "slt" %31, %arg11 : i32 loc(#loc22)
    llvm.cond_br %33, ^bb8, ^bb19 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %34 = llvm.add %19, %31  : i32 loc(#loc23)
    %35 = llvm.icmp "slt" %34, %3 : i32 loc(#loc24)
    %36 = llvm.icmp "sge" %34, %arg4 : i32 loc(#loc25)
    %37 = llvm.or %35, %36  : i1 loc(#loc26)
    llvm.cond_br %37, ^bb9(%32 : f32), ^bb10 loc(#loc27)
  ^bb9(%38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb8, ^bb11
    llvm.br ^bb17(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%3, %32 : i32, f32) loc(#loc28)
  ^bb11(%39: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %40: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %41 = llvm.icmp "slt" %39, %arg12 : i32 loc(#loc28)
    llvm.cond_br %41, ^bb12, ^bb9(%40 : f32) loc(#loc28)
  ^bb12:  // pred: ^bb11
    %42 = llvm.add %20, %39  : i32 loc(#loc29)
    %43 = llvm.icmp "slt" %42, %3 : i32 loc(#loc30)
    %44 = llvm.icmp "sge" %42, %arg5 : i32 loc(#loc31)
    %45 = llvm.or %43, %44  : i1 loc(#loc32)
    llvm.cond_br %45, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%40 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %46 = llvm.getelementptr %arg7[%28] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %47 = llvm.mul %31, %arg10  : i32 loc(#loc35)
    %48 = llvm.getelementptr %46[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %49 = llvm.getelementptr %48[%39] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %50 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %49, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %51 = llvm.bitcast %50 : i32 to vector<1xf32> loc(#loc38)
    %52 = llvm.extractelement %51[%0 : i32] : vector<1xf32> loc(#loc38)
    %53 = llvm.getelementptr %arg0[%30] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %54 = llvm.mul %34, %arg3  : i32 loc(#loc40)
    %55 = llvm.getelementptr %53[%54] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %56 = llvm.getelementptr %55[%42] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %57 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %56, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %58 = llvm.bitcast %57 : i32 to vector<1xf32> loc(#loc43)
    %59 = llvm.extractelement %58[%0 : i32] : vector<1xf32> loc(#loc43)
    %60 = llvm.fmul %59, %52  : f32 loc(#loc44)
    %61 = llvm.fadd %40, %60  : f32 loc(#loc45)
    llvm.br ^bb15(%61 : f32) loc(#loc33)
  ^bb15(%62: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %63 = llvm.add %39, %4  : i32 loc(#loc28)
    llvm.br ^bb11(%63, %62 : i32, f32) loc(#loc28)
  ^bb17(%64: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // pred: ^bb9
    llvm.br ^bb18 loc(#loc27)
  ^bb18:  // pred: ^bb17
    %65 = llvm.add %31, %4  : i32 loc(#loc22)
    llvm.br ^bb7(%65, %64 : i32, f32) loc(#loc22)
  ^bb19:  // pred: ^bb7
    %66 = llvm.add %24, %4  : i32 loc(#loc17)
    llvm.br ^bb5(%66, %32 : i32, f32) loc(#loc17)
  ^bb20:  // pred: ^bb5
    %67 = llvm.fadd %25, %23  : f32 loc(#loc46)
    %68 = llvm.mul %17, %arg18  : i32 loc(#loc47)
    %69 = llvm.add %14, %68  : i32 loc(#loc48)
    %70 = llvm.add %69, %18  : i32 loc(#loc49)
    %71 = llvm.getelementptr %arg15[%70] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %72 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %73 = llvm.and %1, %1  : i1 loc(#loc51)
    %74 = llvm.icmp "eq" %72, %3 : i32 loc(#loc51)
    %75 = llvm.and %73, %74  : i1 loc(#loc51)
    %76 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %77 = llvm.insertelement %67, %76[%3 : i32] : vector<1xf32> loc(#loc51)
    %78 = llvm.bitcast %77 : vector<1xf32> to i32 loc(#loc51)
    %79 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %78, %71, %75 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %80 = llvm.add %15, %4  : i32 loc(#loc12)
    llvm.br ^bb3(%80 : i32) loc(#loc12)
  ^bb21:  // pred: ^bb3
    %81 = llvm.add %9, %4  : i32 loc(#loc3)
    llvm.br ^bb1(%81 : i32) loc(#loc3)
  ^bb22:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc53)
} loc(#loc)
#di_file = #llvm.di_file<"conv_kernel.py" in "/home/meng/torch-compiler/models/triton_kernel">
#di_subroutine_type = #llvm.di_subroutine_type<callingConvention = DW_CC_normal>
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)
#di_compile_unit = #llvm.di_compile_unit<sourceLanguage = DW_LANG_C, file = #di_file, producer = "triton", isOptimized = true, emissionKind = LineTablesOnly>
#di_subprogram = #llvm.di_subprogram<compileUnit = #di_compile_unit, scope = #di_file, name = "conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c", linkageName = "conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c", file = #di_file, line = 18, scopeLine = 18, subprogramFlags = "Definition|Optimized", type = #di_subroutine_type>
#loc53 = loc(fused<#di_subprogram>[#loc])


// -----// IR Dump Before Inliner (inline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %2 = tt.get_program_id z : i32 loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc4)
    %c1_i32 = arith.constant 1 : i32 loc(#loc4)
    %3 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc4)
    %4 = arith.bitcast %arg13 : i32 to i32 loc(#loc4)
    %5 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc4)
    %6 = llvm.mlir.undef : i32 loc(#loc4)
    %7 = scf.for %arg23 = %3 to %4 step %5 iter_args(%arg24 = %2) -> (i32)  : i32 {
      %8 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %9 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc6)
      %c1_i32_1 = arith.constant 1 : i32 loc(#loc6)
      %10 = arith.bitcast %c0_i32_0 : i32 to i32 loc(#loc6)
      %11 = arith.bitcast %9 : i32 to i32 loc(#loc6)
      %12 = arith.bitcast %c1_i32_1 : i32 to i32 loc(#loc6)
      %13 = llvm.mlir.undef : i32 loc(#loc6)
      scf.for %arg25 = %10 to %11 step %12  : i32 {
        %14 = arith.divsi %arg25, %arg20 : i32 loc(#loc7)
        %15 = arith.remsi %arg25, %arg20 : i32 loc(#loc8)
        %c1_i32_2 = arith.constant 1 : i32 loc(#loc9)
        %16 = arith.muli %14, %c1_i32_2 : i32 loc(#loc9)
        %17 = arith.subi %16, %arg21 : i32 loc(#loc10)
        %c1_i32_3 = arith.constant 1 : i32 loc(#loc11)
        %18 = arith.muli %15, %c1_i32_3 : i32 loc(#loc11)
        %19 = arith.subi %18, %arg22 : i32 loc(#loc12)
        %20 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc13)
        %21 = tt.load %20 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc14)
        %cst = arith.constant 0.000000e+00 : f32 loc(#loc15)
        %c0_i32_4 = arith.constant 0 : i32 loc(#loc16)
        %c1_i32_5 = arith.constant 1 : i32 loc(#loc16)
        %22 = arith.bitcast %c0_i32_4 : i32 to i32 loc(#loc16)
        %23 = arith.bitcast %arg6 : i32 to i32 loc(#loc16)
        %24 = arith.bitcast %c1_i32_5 : i32 to i32 loc(#loc16)
        %25 = llvm.mlir.undef : i32 loc(#loc16)
        %26 = scf.for %arg26 = %22 to %23 step %24 iter_args(%arg27 = %cst) -> (f32)  : i32 {
          %36 = arith.muli %arg23, %arg8 : i32 loc(#loc17)
          %37 = arith.muli %arg26, %arg9 : i32 loc(#loc18)
          %38 = arith.addi %36, %37 : i32 loc(#loc19)
          %39 = arith.muli %0, %arg1 : i32 loc(#loc20)
          %40 = arith.muli %arg26, %arg2 : i32 loc(#loc21)
          %41 = arith.addi %39, %40 : i32 loc(#loc22)
          %c0_i32_7 = arith.constant 0 : i32 loc(#loc23)
          %c1_i32_8 = arith.constant 1 : i32 loc(#loc23)
          %42 = arith.bitcast %c0_i32_7 : i32 to i32 loc(#loc23)
          %43 = arith.bitcast %arg11 : i32 to i32 loc(#loc23)
          %44 = arith.bitcast %c1_i32_8 : i32 to i32 loc(#loc23)
          %45 = llvm.mlir.undef : i32 loc(#loc23)
          %46 = scf.for %arg28 = %42 to %43 step %44 iter_args(%arg29 = %arg27) -> (f32)  : i32 {
            %c1_i32_9 = arith.constant 1 : i32 loc(#loc24)
            %47 = arith.muli %arg28, %c1_i32_9 : i32 loc(#loc24)
            %48 = arith.addi %17, %47 : i32 loc(#loc25)
            %c0_i32_10 = arith.constant 0 : i32 loc(#loc26)
            %49 = arith.cmpi slt, %48, %c0_i32_10 : i32 loc(#loc26)
            %50 = arith.cmpi sge, %48, %arg4 : i32 loc(#loc27)
            %51 = arith.ori %49, %50 : i1 loc(#loc28)
            %true = arith.constant true loc(#loc29)
            %52 = arith.xori %51, %true : i1 loc(#loc29)
            %53 = scf.if %52 -> (f32) {
              %c0_i32_11 = arith.constant 0 : i32 loc(#loc31)
              %c1_i32_12 = arith.constant 1 : i32 loc(#loc31)
              %54 = arith.bitcast %c0_i32_11 : i32 to i32 loc(#loc31)
              %55 = arith.bitcast %arg12 : i32 to i32 loc(#loc31)
              %56 = arith.bitcast %c1_i32_12 : i32 to i32 loc(#loc31)
              %57 = llvm.mlir.undef : i32 loc(#loc31)
              %58 = scf.for %arg30 = %54 to %55 step %56 iter_args(%arg31 = %arg29) -> (f32)  : i32 {
                %c1_i32_13 = arith.constant 1 : i32 loc(#loc32)
                %59 = arith.muli %arg30, %c1_i32_13 : i32 loc(#loc32)
                %60 = arith.addi %19, %59 : i32 loc(#loc33)
                %c0_i32_14 = arith.constant 0 : i32 loc(#loc34)
                %61 = arith.cmpi slt, %60, %c0_i32_14 : i32 loc(#loc34)
                %62 = arith.cmpi sge, %60, %arg5 : i32 loc(#loc35)
                %63 = arith.ori %61, %62 : i1 loc(#loc36)
                %true_15 = arith.constant true loc(#loc37)
                %64 = arith.xori %63, %true_15 : i1 loc(#loc37)
                %65 = scf.if %64 -> (f32) {
                  %66 = tt.addptr %arg7, %38 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %67 = arith.muli %arg28, %arg10 : i32 loc(#loc40)
                  %68 = tt.addptr %66, %67 : !tt.ptr<f32, 1>, i32 loc(#loc41)
                  %c1_i32_16 = arith.constant 1 : i32 loc(#loc42)
                  %69 = arith.muli %arg30, %c1_i32_16 : i32 loc(#loc42)
                  %70 = tt.addptr %68, %69 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %71 = tt.load %70 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %72 = tt.addptr %arg0, %41 : !tt.ptr<f32, 1>, i32 loc(#loc45)
                  %73 = arith.muli %48, %arg3 : i32 loc(#loc46)
                  %74 = tt.addptr %72, %73 : !tt.ptr<f32, 1>, i32 loc(#loc47)
                  %c1_i32_17 = arith.constant 1 : i32 loc(#loc48)
                  %75 = arith.muli %60, %c1_i32_17 : i32 loc(#loc48)
                  %76 = tt.addptr %74, %75 : !tt.ptr<f32, 1>, i32 loc(#loc49)
                  %77 = tt.load %76 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc50)
                  %78 = arith.mulf %77, %71 : f32 loc(#loc51)
                  %79 = arith.addf %arg31, %78 : f32 loc(#loc52)
                  scf.yield %79 : f32 loc(#loc52)
                } else {
                  scf.yield %arg31 : f32 loc(#loc53)
                } loc(#loc38)
                scf.yield %65 : f32 loc(#loc54)
              } loc(#loc31)
              scf.yield %58 : f32 loc(#loc31)
            } else {
              scf.yield %arg29 : f32 loc(#loc53)
            } loc(#loc30)
            scf.yield %53 : f32 loc(#loc55)
          } loc(#loc23)
          scf.yield %46 : f32 loc(#loc56)
        } loc(#loc16)
        %27 = arith.addf %26, %21 : f32 loc(#loc57)
        %28 = arith.muli %0, %arg16 : i32 loc(#loc58)
        %29 = arith.muli %arg23, %arg17 : i32 loc(#loc59)
        %30 = arith.addi %28, %29 : i32 loc(#loc60)
        %31 = arith.muli %14, %arg18 : i32 loc(#loc61)
        %32 = arith.addi %30, %31 : i32 loc(#loc62)
        %c1_i32_6 = arith.constant 1 : i32 loc(#loc63)
        %33 = arith.muli %15, %c1_i32_6 : i32 loc(#loc63)
        %34 = arith.addi %32, %33 : i32 loc(#loc64)
        %35 = tt.addptr %arg15, %34 : !tt.ptr<f32, 1>, i32 loc(#loc65)
        tt.store %35, %27 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc66)
      } loc(#loc6)
      scf.yield %13 : i32 loc(#loc67)
    } loc(#loc4)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":53:32)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":54:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:41)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:41)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:48)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:28)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:56)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:36)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:103)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:107)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc53 = loc(unknown)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc57 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc58 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc59 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc60 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc61 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc62 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc63 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:30)
#loc64 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc65 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc66 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc67 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:8)
#loc68 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('tt.func' operation: @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %2 = tt.get_program_id z : i32 loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc4)
    %c1_i32 = arith.constant 1 : i32 loc(#loc4)
    %3 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc4)
    %4 = arith.bitcast %arg13 : i32 to i32 loc(#loc4)
    %5 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc4)
    %6 = llvm.mlir.undef : i32 loc(#loc4)
    %7 = scf.for %arg23 = %3 to %4 step %5 iter_args(%arg24 = %2) -> (i32)  : i32 {
      %8 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %9 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc6)
      %c1_i32_1 = arith.constant 1 : i32 loc(#loc6)
      %10 = arith.bitcast %c0_i32_0 : i32 to i32 loc(#loc6)
      %11 = arith.bitcast %9 : i32 to i32 loc(#loc6)
      %12 = arith.bitcast %c1_i32_1 : i32 to i32 loc(#loc6)
      %13 = llvm.mlir.undef : i32 loc(#loc6)
      scf.for %arg25 = %10 to %11 step %12  : i32 {
        %14 = arith.divsi %arg25, %arg20 : i32 loc(#loc7)
        %15 = arith.remsi %arg25, %arg20 : i32 loc(#loc8)
        %c1_i32_2 = arith.constant 1 : i32 loc(#loc9)
        %16 = arith.muli %14, %c1_i32_2 : i32 loc(#loc9)
        %17 = arith.subi %16, %arg21 : i32 loc(#loc10)
        %c1_i32_3 = arith.constant 1 : i32 loc(#loc11)
        %18 = arith.muli %15, %c1_i32_3 : i32 loc(#loc11)
        %19 = arith.subi %18, %arg22 : i32 loc(#loc12)
        %20 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc13)
        %21 = tt.load %20 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc14)
        %cst = arith.constant 0.000000e+00 : f32 loc(#loc15)
        %c0_i32_4 = arith.constant 0 : i32 loc(#loc16)
        %c1_i32_5 = arith.constant 1 : i32 loc(#loc16)
        %22 = arith.bitcast %c0_i32_4 : i32 to i32 loc(#loc16)
        %23 = arith.bitcast %arg6 : i32 to i32 loc(#loc16)
        %24 = arith.bitcast %c1_i32_5 : i32 to i32 loc(#loc16)
        %25 = llvm.mlir.undef : i32 loc(#loc16)
        %26 = scf.for %arg26 = %22 to %23 step %24 iter_args(%arg27 = %cst) -> (f32)  : i32 {
          %36 = arith.muli %arg23, %arg8 : i32 loc(#loc17)
          %37 = arith.muli %arg26, %arg9 : i32 loc(#loc18)
          %38 = arith.addi %36, %37 : i32 loc(#loc19)
          %39 = arith.muli %0, %arg1 : i32 loc(#loc20)
          %40 = arith.muli %arg26, %arg2 : i32 loc(#loc21)
          %41 = arith.addi %39, %40 : i32 loc(#loc22)
          %c0_i32_7 = arith.constant 0 : i32 loc(#loc23)
          %c1_i32_8 = arith.constant 1 : i32 loc(#loc23)
          %42 = arith.bitcast %c0_i32_7 : i32 to i32 loc(#loc23)
          %43 = arith.bitcast %arg11 : i32 to i32 loc(#loc23)
          %44 = arith.bitcast %c1_i32_8 : i32 to i32 loc(#loc23)
          %45 = llvm.mlir.undef : i32 loc(#loc23)
          %46 = scf.for %arg28 = %42 to %43 step %44 iter_args(%arg29 = %arg27) -> (f32)  : i32 {
            %c1_i32_9 = arith.constant 1 : i32 loc(#loc24)
            %47 = arith.muli %arg28, %c1_i32_9 : i32 loc(#loc24)
            %48 = arith.addi %17, %47 : i32 loc(#loc25)
            %c0_i32_10 = arith.constant 0 : i32 loc(#loc26)
            %49 = arith.cmpi slt, %48, %c0_i32_10 : i32 loc(#loc26)
            %50 = arith.cmpi sge, %48, %arg4 : i32 loc(#loc27)
            %51 = arith.ori %49, %50 : i1 loc(#loc28)
            %true = arith.constant true loc(#loc29)
            %52 = arith.xori %51, %true : i1 loc(#loc29)
            %53 = scf.if %52 -> (f32) {
              %c0_i32_11 = arith.constant 0 : i32 loc(#loc31)
              %c1_i32_12 = arith.constant 1 : i32 loc(#loc31)
              %54 = arith.bitcast %c0_i32_11 : i32 to i32 loc(#loc31)
              %55 = arith.bitcast %arg12 : i32 to i32 loc(#loc31)
              %56 = arith.bitcast %c1_i32_12 : i32 to i32 loc(#loc31)
              %57 = llvm.mlir.undef : i32 loc(#loc31)
              %58 = scf.for %arg30 = %54 to %55 step %56 iter_args(%arg31 = %arg29) -> (f32)  : i32 {
                %c1_i32_13 = arith.constant 1 : i32 loc(#loc32)
                %59 = arith.muli %arg30, %c1_i32_13 : i32 loc(#loc32)
                %60 = arith.addi %19, %59 : i32 loc(#loc33)
                %c0_i32_14 = arith.constant 0 : i32 loc(#loc34)
                %61 = arith.cmpi slt, %60, %c0_i32_14 : i32 loc(#loc34)
                %62 = arith.cmpi sge, %60, %arg5 : i32 loc(#loc35)
                %63 = arith.ori %61, %62 : i1 loc(#loc36)
                %true_15 = arith.constant true loc(#loc37)
                %64 = arith.xori %63, %true_15 : i1 loc(#loc37)
                %65 = scf.if %64 -> (f32) {
                  %66 = tt.addptr %arg7, %38 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %67 = arith.muli %arg28, %arg10 : i32 loc(#loc40)
                  %68 = tt.addptr %66, %67 : !tt.ptr<f32, 1>, i32 loc(#loc41)
                  %c1_i32_16 = arith.constant 1 : i32 loc(#loc42)
                  %69 = arith.muli %arg30, %c1_i32_16 : i32 loc(#loc42)
                  %70 = tt.addptr %68, %69 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %71 = tt.load %70 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %72 = tt.addptr %arg0, %41 : !tt.ptr<f32, 1>, i32 loc(#loc45)
                  %73 = arith.muli %48, %arg3 : i32 loc(#loc46)
                  %74 = tt.addptr %72, %73 : !tt.ptr<f32, 1>, i32 loc(#loc47)
                  %c1_i32_17 = arith.constant 1 : i32 loc(#loc48)
                  %75 = arith.muli %60, %c1_i32_17 : i32 loc(#loc48)
                  %76 = tt.addptr %74, %75 : !tt.ptr<f32, 1>, i32 loc(#loc49)
                  %77 = tt.load %76 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc50)
                  %78 = arith.mulf %77, %71 : f32 loc(#loc51)
                  %79 = arith.addf %arg31, %78 : f32 loc(#loc52)
                  scf.yield %79 : f32 loc(#loc52)
                } else {
                  scf.yield %arg31 : f32 loc(#loc53)
                } loc(#loc38)
                scf.yield %65 : f32 loc(#loc54)
              } loc(#loc31)
              scf.yield %58 : f32 loc(#loc31)
            } else {
              scf.yield %arg29 : f32 loc(#loc53)
            } loc(#loc30)
            scf.yield %53 : f32 loc(#loc55)
          } loc(#loc23)
          scf.yield %46 : f32 loc(#loc56)
        } loc(#loc16)
        %27 = arith.addf %26, %21 : f32 loc(#loc57)
        %28 = arith.muli %0, %arg16 : i32 loc(#loc58)
        %29 = arith.muli %arg23, %arg17 : i32 loc(#loc59)
        %30 = arith.addi %28, %29 : i32 loc(#loc60)
        %31 = arith.muli %14, %arg18 : i32 loc(#loc61)
        %32 = arith.addi %30, %31 : i32 loc(#loc62)
        %c1_i32_6 = arith.constant 1 : i32 loc(#loc63)
        %33 = arith.muli %15, %c1_i32_6 : i32 loc(#loc63)
        %34 = arith.addi %32, %33 : i32 loc(#loc64)
        %35 = tt.addptr %arg15, %34 : !tt.ptr<f32, 1>, i32 loc(#loc65)
        tt.store %35, %27 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc66)
      } loc(#loc6)
      scf.yield %13 : i32 loc(#loc67)
    } loc(#loc4)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":53:32)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":54:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:41)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:41)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:48)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:28)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:56)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:36)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:103)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:107)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc53 = loc(unknown)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc57 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc58 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc59 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc60 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc61 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc62 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc63 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:30)
#loc64 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc65 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc66 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc67 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:8)
#loc68 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonRewriteTensorPointer (triton-rewrite-tensor-pointer) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Inliner (inline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('tt.func' operation: @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonCombineOps (triton-combine) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonReorderBroadcast (triton-reorder-broadcast) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before LoopInvariantCodeMotion (loop-invariant-code-motion) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before SymbolDCE (symbol-dce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before ConvertTritonToTritonGPU (convert-triton-to-tritongpu) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUCoalesce (tritongpu-coalesce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPlanCTAPass (triton-nvidia-gpu-plan-cta) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURewriteTensorPointer (tritongpu-rewrite-tensor-pointer) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPlanCTAPass (triton-nvidia-gpu-plan-cta) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUAccelerateMatmul (tritongpu-accelerate-matmul) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeDotOperands (tritongpu-optimize-dot-operands) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPipeline (tritongpu-pipeline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before MaterializeLoadStore (triton-nvidia-gpu-materialize-load-store) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPrefetch (tritongpu-prefetch) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeDotOperands (tritongpu-optimize-dot-operands) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUDecomposeConversions (tritongpu-decompose-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUWSFixupMissingAttrs (triton-nvidia-gpu-ws-fixup-missing-attrs) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUReorderInstructions (tritongpu-reorder-instructions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before SymbolDCE (symbol-dce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUWSFixupMissingAttrs (triton-nvidia-gpu-ws-fixup-missing-attrs) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeThreadLocality (tritongpu-optimize-thread-locality) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After SCFToControlFlow (convert-scf-to-cf) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    cf.br ^bb1(%c0_i32 : i32) loc(#loc1)
  ^bb1(%4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb22
    %5 = arith.cmpi slt, %4, %arg13 : i32 loc(#loc1)
    cf.cond_br %5, ^bb2, ^bb23 loc(#loc1)
  ^bb2:  // pred: ^bb1
    %6 = tt.addptr %arg14, %4 : !tt.ptr<f32, 1>, i32 loc(#loc7)
    %7 = arith.muli %4, %arg8 : i32 loc(#loc8)
    %8 = arith.muli %4, %arg17 : i32 loc(#loc9)
    %9 = arith.addi %3, %8 : i32 loc(#loc10)
    cf.br ^bb3(%c0_i32 : i32) loc(#loc11)
  ^bb3(%10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb21
    %11 = arith.cmpi slt, %10, %1 : i32 loc(#loc11)
    cf.cond_br %11, ^bb4, ^bb22 loc(#loc11)
  ^bb4:  // pred: ^bb3
    %12 = arith.divsi %10, %arg20 : i32 loc(#loc12)
    %13 = arith.remsi %10, %arg20 : i32 loc(#loc13)
    %14 = arith.subi %12, %arg21 : i32 loc(#loc14)
    %15 = arith.subi %13, %arg22 : i32 loc(#loc15)
    %16 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
    cf.br ^bb5(%c0_i32, %cst : i32, f32) loc(#loc17)
  ^bb5(%17: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %18: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb20
    %19 = arith.cmpi slt, %17, %arg6 : i32 loc(#loc17)
    cf.cond_br %19, ^bb6, ^bb21 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %20 = arith.muli %17, %arg9 : i32 loc(#loc18)
    %21 = arith.addi %7, %20 : i32 loc(#loc19)
    %22 = arith.muli %17, %arg2 : i32 loc(#loc20)
    %23 = arith.addi %2, %22 : i32 loc(#loc21)
    cf.br ^bb7(%c0_i32, %18 : i32, f32) loc(#loc22)
  ^bb7(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb19
    %26 = arith.cmpi slt, %24, %arg11 : i32 loc(#loc22)
    cf.cond_br %26, ^bb8, ^bb20 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %27 = arith.addi %14, %24 : i32 loc(#loc23)
    %28 = arith.cmpi slt, %27, %c0_i32 : i32 loc(#loc24)
    %29 = arith.cmpi sge, %27, %arg4 : i32 loc(#loc25)
    %30 = arith.ori %28, %29 : i1 loc(#loc26)
    cf.cond_br %30, ^bb9, ^bb10 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cf.br ^bb18(%25 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    cf.br ^bb11(%c0_i32, %25 : i32, f32) loc(#loc28)
  ^bb11(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %33 = arith.cmpi slt, %31, %arg12 : i32 loc(#loc28)
    cf.cond_br %33, ^bb12, ^bb17 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %34 = arith.addi %15, %31 : i32 loc(#loc29)
    %35 = arith.cmpi slt, %34, %c0_i32 : i32 loc(#loc30)
    %36 = arith.cmpi sge, %34, %arg5 : i32 loc(#loc31)
    %37 = arith.ori %35, %36 : i1 loc(#loc32)
    cf.cond_br %37, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    cf.br ^bb15(%32 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %38 = tt.addptr %arg7, %21 : !tt.ptr<f32, 1>, i32 loc(#loc34)
    %39 = arith.muli %24, %arg10 : i32 loc(#loc35)
    %40 = tt.addptr %38, %39 : !tt.ptr<f32, 1>, i32 loc(#loc36)
    %41 = tt.addptr %40, %31 : !tt.ptr<f32, 1>, i32 loc(#loc37)
    %42 = tt.load %41 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc38)
    %43 = tt.addptr %arg0, %23 : !tt.ptr<f32, 1>, i32 loc(#loc39)
    %44 = arith.muli %27, %arg3 : i32 loc(#loc40)
    %45 = tt.addptr %43, %44 : !tt.ptr<f32, 1>, i32 loc(#loc41)
    %46 = tt.addptr %45, %34 : !tt.ptr<f32, 1>, i32 loc(#loc42)
    %47 = tt.load %46 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc43)
    %48 = arith.mulf %47, %42 : f32 loc(#loc44)
    %49 = arith.addf %32, %48 : f32 loc(#loc45)
    cf.br ^bb15(%49 : f32) loc(#loc33)
  ^bb15(%50: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    cf.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %51 = arith.addi %31, %c1_i32 : i32 loc(#loc28)
    cf.br ^bb11(%51, %50 : i32, f32) loc(#loc28)
  ^bb17:  // pred: ^bb11
    cf.br ^bb18(%32 : f32) loc(#loc27)
  ^bb18(%52: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // 2 preds: ^bb9, ^bb17
    cf.br ^bb19 loc(#loc27)
  ^bb19:  // pred: ^bb18
    %53 = arith.addi %24, %c1_i32 : i32 loc(#loc22)
    cf.br ^bb7(%53, %52 : i32, f32) loc(#loc22)
  ^bb20:  // pred: ^bb7
    %54 = arith.addi %17, %c1_i32 : i32 loc(#loc17)
    cf.br ^bb5(%54, %25 : i32, f32) loc(#loc17)
  ^bb21:  // pred: ^bb5
    %55 = arith.addf %18, %16 : f32 loc(#loc46)
    %56 = arith.muli %12, %arg18 : i32 loc(#loc47)
    %57 = arith.addi %9, %56 : i32 loc(#loc48)
    %58 = arith.addi %57, %13 : i32 loc(#loc49)
    %59 = tt.addptr %arg15, %58 : !tt.ptr<f32, 1>, i32 loc(#loc50)
    tt.store %59, %55 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc51)
    %60 = arith.addi %10, %c1_i32 : i32 loc(#loc11)
    cf.br ^bb3(%60 : i32) loc(#loc11)
  ^bb22:  // pred: ^bb3
    %61 = arith.addi %4, %c1_i32 : i32 loc(#loc1)
    cf.br ^bb1(%61 : i32) loc(#loc1)
  ^bb23:  // pred: ^bb1
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After ConvertTritonGPUToLLVM (convert-triton-gpu-to-llvm) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [256 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.addressof @global_smem : !llvm.ptr<3> loc(#loc)
    %1 = llvm.bitcast %0 : !llvm.ptr<3> to !llvm.ptr<3> loc(#loc)
    %2 = builtin.unrealized_conversion_cast %arg15 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %3 = builtin.unrealized_conversion_cast %arg14 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %4 = builtin.unrealized_conversion_cast %arg7 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %5 = builtin.unrealized_conversion_cast %arg0 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %6 = llvm.mlir.constant(1 : i32) : i32 loc(#loc1)
    %7 = llvm.mlir.constant(0 : i32) : i32 loc(#loc1)
    %8 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %9 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc3)
    %10 = llvm.mul %arg19, %arg20  : i32 loc(#loc4)
    %11 = llvm.mul %9, %arg1  : i32 loc(#loc5)
    %12 = llvm.mul %9, %arg16  : i32 loc(#loc6)
    llvm.br ^bb1(%7 : i32) loc(#loc1)
  ^bb1(%13: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb22
    %14 = llvm.icmp "slt" %13, %arg13 : i32 loc(#loc1)
    llvm.cond_br %14, ^bb2, ^bb23 loc(#loc1)
  ^bb2:  // pred: ^bb1
    %15 = llvm.getelementptr %arg14[%13] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc7)
    %16 = llvm.mul %13, %arg8  : i32 loc(#loc8)
    %17 = llvm.mul %13, %arg17  : i32 loc(#loc9)
    %18 = llvm.add %12, %17  : i32 loc(#loc10)
    llvm.br ^bb3(%7 : i32) loc(#loc11)
  ^bb3(%19: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb21
    %20 = llvm.icmp "slt" %19, %10 : i32 loc(#loc11)
    llvm.cond_br %20, ^bb4, ^bb22 loc(#loc11)
  ^bb4:  // pred: ^bb3
    %21 = llvm.sdiv %19, %arg20  : i32 loc(#loc12)
    %22 = llvm.srem %19, %arg20  : i32 loc(#loc13)
    %23 = llvm.sub %21, %arg21  : i32 loc(#loc14)
    %24 = llvm.sub %22, %arg22  : i32 loc(#loc15)
    %25 = llvm.mlir.constant(true) : i1 loc(#loc16)
    %26 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %15, %25 : (!llvm.ptr<1>, i1) -> i32 loc(#loc16)
    %27 = llvm.bitcast %26 : i32 to vector<1xf32> loc(#loc16)
    %28 = llvm.mlir.constant(0 : index) : i32 loc(#loc16)
    %29 = llvm.extractelement %27[%28 : i32] : vector<1xf32> loc(#loc16)
    llvm.br ^bb5(%7, %8 : i32, f32) loc(#loc17)
  ^bb5(%30: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %31: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb20
    %32 = llvm.icmp "slt" %30, %arg6 : i32 loc(#loc17)
    llvm.cond_br %32, ^bb6, ^bb21 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %33 = llvm.mul %30, %arg9  : i32 loc(#loc18)
    %34 = llvm.add %16, %33  : i32 loc(#loc19)
    %35 = llvm.mul %30, %arg2  : i32 loc(#loc20)
    %36 = llvm.add %11, %35  : i32 loc(#loc21)
    llvm.br ^bb7(%7, %31 : i32, f32) loc(#loc22)
  ^bb7(%37: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb19
    %39 = llvm.icmp "slt" %37, %arg11 : i32 loc(#loc22)
    llvm.cond_br %39, ^bb8, ^bb20 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %40 = llvm.add %23, %37  : i32 loc(#loc23)
    %41 = llvm.icmp "slt" %40, %7 : i32 loc(#loc24)
    %42 = llvm.icmp "sge" %40, %arg4 : i32 loc(#loc25)
    %43 = llvm.or %41, %42  : i1 loc(#loc26)
    llvm.cond_br %43, ^bb9, ^bb10 loc(#loc27)
  ^bb9:  // pred: ^bb8
    llvm.br ^bb18(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%7, %38 : i32, f32) loc(#loc28)
  ^bb11(%44: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %45: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %46 = llvm.icmp "slt" %44, %arg12 : i32 loc(#loc28)
    llvm.cond_br %46, ^bb12, ^bb17 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %47 = llvm.add %24, %44  : i32 loc(#loc29)
    %48 = llvm.icmp "slt" %47, %7 : i32 loc(#loc30)
    %49 = llvm.icmp "sge" %47, %arg5 : i32 loc(#loc31)
    %50 = llvm.or %48, %49  : i1 loc(#loc32)
    llvm.cond_br %50, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%45 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %51 = llvm.getelementptr %arg7[%34] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %52 = llvm.mul %37, %arg10  : i32 loc(#loc35)
    %53 = llvm.getelementptr %51[%52] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %54 = llvm.getelementptr %53[%44] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %55 = llvm.mlir.constant(true) : i1 loc(#loc38)
    %56 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %54, %55 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %57 = llvm.bitcast %56 : i32 to vector<1xf32> loc(#loc38)
    %58 = llvm.mlir.constant(0 : index) : i32 loc(#loc38)
    %59 = llvm.extractelement %57[%58 : i32] : vector<1xf32> loc(#loc38)
    %60 = llvm.getelementptr %arg0[%36] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %61 = llvm.mul %40, %arg3  : i32 loc(#loc40)
    %62 = llvm.getelementptr %60[%61] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %63 = llvm.getelementptr %62[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %64 = llvm.mlir.constant(true) : i1 loc(#loc43)
    %65 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %63, %64 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %66 = llvm.bitcast %65 : i32 to vector<1xf32> loc(#loc43)
    %67 = llvm.mlir.constant(0 : index) : i32 loc(#loc43)
    %68 = llvm.extractelement %66[%67 : i32] : vector<1xf32> loc(#loc43)
    %69 = llvm.fmul %68, %59  : f32 loc(#loc44)
    %70 = llvm.fadd %45, %69  : f32 loc(#loc45)
    llvm.br ^bb15(%70 : f32) loc(#loc33)
  ^bb15(%71: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %72 = llvm.add %44, %6  : i32 loc(#loc28)
    llvm.br ^bb11(%72, %71 : i32, f32) loc(#loc28)
  ^bb17:  // pred: ^bb11
    llvm.br ^bb18(%45 : f32) loc(#loc27)
  ^bb18(%73: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // 2 preds: ^bb9, ^bb17
    llvm.br ^bb19 loc(#loc27)
  ^bb19:  // pred: ^bb18
    %74 = llvm.add %37, %6  : i32 loc(#loc22)
    llvm.br ^bb7(%74, %73 : i32, f32) loc(#loc22)
  ^bb20:  // pred: ^bb7
    %75 = llvm.add %30, %6  : i32 loc(#loc17)
    llvm.br ^bb5(%75, %38 : i32, f32) loc(#loc17)
  ^bb21:  // pred: ^bb5
    %76 = llvm.fadd %31, %29  : f32 loc(#loc46)
    %77 = llvm.mul %21, %arg18  : i32 loc(#loc47)
    %78 = llvm.add %18, %77  : i32 loc(#loc48)
    %79 = llvm.add %78, %22  : i32 loc(#loc49)
    %80 = llvm.getelementptr %arg15[%79] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %81 = llvm.mlir.constant(true) : i1 loc(#loc51)
    %82 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %83 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %84 = nvgpu.cluster_id loc(#loc51)
    %85 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %86 = llvm.icmp "eq" %83, %85 : i32 loc(#loc51)
    %87 = llvm.and %81, %86  : i1 loc(#loc51)
    %88 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %89 = llvm.icmp "eq" %82, %88 : i32 loc(#loc51)
    %90 = llvm.and %87, %89  : i1 loc(#loc51)
    %91 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %92 = llvm.bitcast %76 : f32 to f32 loc(#loc51)
    %93 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %94 = llvm.insertelement %92, %91[%93 : i32] : vector<1xf32> loc(#loc51)
    %95 = llvm.bitcast %94 : vector<1xf32> to i32 loc(#loc51)
    %96 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %95, %80, %90 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %97 = llvm.add %19, %6  : i32 loc(#loc11)
    llvm.br ^bb3(%97 : i32) loc(#loc11)
  ^bb22:  // pred: ^bb3
    %98 = llvm.add %13, %6  : i32 loc(#loc1)
    llvm.br ^bb1(%98 : i32) loc(#loc1)
  ^bb23:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After ConvertNVGPUToLLVM (convert-nv-gpu-to-llvm) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [256 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.constant(0 : index) : i32 loc(#loc1)
    %1 = llvm.mlir.constant(true) : i1 loc(#loc1)
    %2 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %3 = llvm.mlir.constant(0 : i32) : i32 loc(#loc3)
    %4 = llvm.mlir.constant(1 : i32) : i32 loc(#loc3)
    %5 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc4)
    %6 = llvm.mul %arg19, %arg20  : i32 loc(#loc5)
    %7 = llvm.mul %5, %arg1  : i32 loc(#loc6)
    %8 = llvm.mul %5, %arg16  : i32 loc(#loc7)
    llvm.br ^bb1(%3 : i32) loc(#loc3)
  ^bb1(%9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb21
    %10 = llvm.icmp "slt" %9, %arg13 : i32 loc(#loc3)
    llvm.cond_br %10, ^bb2, ^bb22 loc(#loc3)
  ^bb2:  // pred: ^bb1
    %11 = llvm.getelementptr %arg14[%9] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc8)
    %12 = llvm.mul %9, %arg8  : i32 loc(#loc9)
    %13 = llvm.mul %9, %arg17  : i32 loc(#loc10)
    %14 = llvm.add %8, %13  : i32 loc(#loc11)
    llvm.br ^bb3(%3 : i32) loc(#loc12)
  ^bb3(%15: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb20
    %16 = llvm.icmp "slt" %15, %6 : i32 loc(#loc12)
    llvm.cond_br %16, ^bb4, ^bb21 loc(#loc12)
  ^bb4:  // pred: ^bb3
    %17 = llvm.sdiv %15, %arg20  : i32 loc(#loc13)
    %18 = llvm.srem %15, %arg20  : i32 loc(#loc14)
    %19 = llvm.sub %17, %arg21  : i32 loc(#loc15)
    %20 = llvm.sub %18, %arg22  : i32 loc(#loc16)
    %21 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %11, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc1)
    %22 = llvm.bitcast %21 : i32 to vector<1xf32> loc(#loc1)
    %23 = llvm.extractelement %22[%0 : i32] : vector<1xf32> loc(#loc1)
    llvm.br ^bb5(%3, %2 : i32, f32) loc(#loc17)
  ^bb5(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb19
    %26 = llvm.icmp "slt" %24, %arg6 : i32 loc(#loc17)
    llvm.cond_br %26, ^bb6, ^bb20 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %27 = llvm.mul %24, %arg9  : i32 loc(#loc18)
    %28 = llvm.add %12, %27  : i32 loc(#loc19)
    %29 = llvm.mul %24, %arg2  : i32 loc(#loc20)
    %30 = llvm.add %7, %29  : i32 loc(#loc21)
    llvm.br ^bb7(%3, %25 : i32, f32) loc(#loc22)
  ^bb7(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb18
    %33 = llvm.icmp "slt" %31, %arg11 : i32 loc(#loc22)
    llvm.cond_br %33, ^bb8, ^bb19 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %34 = llvm.add %19, %31  : i32 loc(#loc23)
    %35 = llvm.icmp "slt" %34, %3 : i32 loc(#loc24)
    %36 = llvm.icmp "sge" %34, %arg4 : i32 loc(#loc25)
    %37 = llvm.or %35, %36  : i1 loc(#loc26)
    llvm.cond_br %37, ^bb9(%32 : f32), ^bb10 loc(#loc27)
  ^bb9(%38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb8, ^bb11
    llvm.br ^bb17(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%3, %32 : i32, f32) loc(#loc28)
  ^bb11(%39: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %40: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %41 = llvm.icmp "slt" %39, %arg12 : i32 loc(#loc28)
    llvm.cond_br %41, ^bb12, ^bb9(%40 : f32) loc(#loc28)
  ^bb12:  // pred: ^bb11
    %42 = llvm.add %20, %39  : i32 loc(#loc29)
    %43 = llvm.icmp "slt" %42, %3 : i32 loc(#loc30)
    %44 = llvm.icmp "sge" %42, %arg5 : i32 loc(#loc31)
    %45 = llvm.or %43, %44  : i1 loc(#loc32)
    llvm.cond_br %45, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%40 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %46 = llvm.getelementptr %arg7[%28] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %47 = llvm.mul %31, %arg10  : i32 loc(#loc35)
    %48 = llvm.getelementptr %46[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %49 = llvm.getelementptr %48[%39] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %50 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %49, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %51 = llvm.bitcast %50 : i32 to vector<1xf32> loc(#loc38)
    %52 = llvm.extractelement %51[%0 : i32] : vector<1xf32> loc(#loc38)
    %53 = llvm.getelementptr %arg0[%30] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %54 = llvm.mul %34, %arg3  : i32 loc(#loc40)
    %55 = llvm.getelementptr %53[%54] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %56 = llvm.getelementptr %55[%42] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %57 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %56, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %58 = llvm.bitcast %57 : i32 to vector<1xf32> loc(#loc43)
    %59 = llvm.extractelement %58[%0 : i32] : vector<1xf32> loc(#loc43)
    %60 = llvm.fmul %59, %52  : f32 loc(#loc44)
    %61 = llvm.fadd %40, %60  : f32 loc(#loc45)
    llvm.br ^bb15(%61 : f32) loc(#loc33)
  ^bb15(%62: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %63 = llvm.add %39, %4  : i32 loc(#loc28)
    llvm.br ^bb11(%63, %62 : i32, f32) loc(#loc28)
  ^bb17(%64: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // pred: ^bb9
    llvm.br ^bb18 loc(#loc27)
  ^bb18:  // pred: ^bb17
    %65 = llvm.add %31, %4  : i32 loc(#loc22)
    llvm.br ^bb7(%65, %64 : i32, f32) loc(#loc22)
  ^bb19:  // pred: ^bb7
    %66 = llvm.add %24, %4  : i32 loc(#loc17)
    llvm.br ^bb5(%66, %32 : i32, f32) loc(#loc17)
  ^bb20:  // pred: ^bb5
    %67 = llvm.fadd %25, %23  : f32 loc(#loc46)
    %68 = llvm.mul %17, %arg18  : i32 loc(#loc47)
    %69 = llvm.add %14, %68  : i32 loc(#loc48)
    %70 = llvm.add %69, %18  : i32 loc(#loc49)
    %71 = llvm.getelementptr %arg15[%70] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %72 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %73 = llvm.and %1, %1  : i1 loc(#loc51)
    %74 = llvm.icmp "eq" %72, %3 : i32 loc(#loc51)
    %75 = llvm.and %73, %74  : i1 loc(#loc51)
    %76 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %77 = llvm.insertelement %67, %76[%3 : i32] : vector<1xf32> loc(#loc51)
    %78 = llvm.bitcast %77 : vector<1xf32> to i32 loc(#loc51)
    %79 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %78, %71, %75 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %80 = llvm.add %15, %4  : i32 loc(#loc12)
    llvm.br ^bb3(%80 : i32) loc(#loc12)
  ^bb21:  // pred: ^bb3
    %81 = llvm.add %9, %4  : i32 loc(#loc3)
    llvm.br ^bb1(%81 : i32) loc(#loc3)
  ^bb22:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After LLVMDIScope (enable-line-info) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [256 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.constant(0 : index) : i32 loc(#loc1)
    %1 = llvm.mlir.constant(true) : i1 loc(#loc1)
    %2 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %3 = llvm.mlir.constant(0 : i32) : i32 loc(#loc3)
    %4 = llvm.mlir.constant(1 : i32) : i32 loc(#loc3)
    %5 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc4)
    %6 = llvm.mul %arg19, %arg20  : i32 loc(#loc5)
    %7 = llvm.mul %5, %arg1  : i32 loc(#loc6)
    %8 = llvm.mul %5, %arg16  : i32 loc(#loc7)
    llvm.br ^bb1(%3 : i32) loc(#loc3)
  ^bb1(%9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb21
    %10 = llvm.icmp "slt" %9, %arg13 : i32 loc(#loc3)
    llvm.cond_br %10, ^bb2, ^bb22 loc(#loc3)
  ^bb2:  // pred: ^bb1
    %11 = llvm.getelementptr %arg14[%9] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc8)
    %12 = llvm.mul %9, %arg8  : i32 loc(#loc9)
    %13 = llvm.mul %9, %arg17  : i32 loc(#loc10)
    %14 = llvm.add %8, %13  : i32 loc(#loc11)
    llvm.br ^bb3(%3 : i32) loc(#loc12)
  ^bb3(%15: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb20
    %16 = llvm.icmp "slt" %15, %6 : i32 loc(#loc12)
    llvm.cond_br %16, ^bb4, ^bb21 loc(#loc12)
  ^bb4:  // pred: ^bb3
    %17 = llvm.sdiv %15, %arg20  : i32 loc(#loc13)
    %18 = llvm.srem %15, %arg20  : i32 loc(#loc14)
    %19 = llvm.sub %17, %arg21  : i32 loc(#loc15)
    %20 = llvm.sub %18, %arg22  : i32 loc(#loc16)
    %21 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %11, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc1)
    %22 = llvm.bitcast %21 : i32 to vector<1xf32> loc(#loc1)
    %23 = llvm.extractelement %22[%0 : i32] : vector<1xf32> loc(#loc1)
    llvm.br ^bb5(%3, %2 : i32, f32) loc(#loc17)
  ^bb5(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb19
    %26 = llvm.icmp "slt" %24, %arg6 : i32 loc(#loc17)
    llvm.cond_br %26, ^bb6, ^bb20 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %27 = llvm.mul %24, %arg9  : i32 loc(#loc18)
    %28 = llvm.add %12, %27  : i32 loc(#loc19)
    %29 = llvm.mul %24, %arg2  : i32 loc(#loc20)
    %30 = llvm.add %7, %29  : i32 loc(#loc21)
    llvm.br ^bb7(%3, %25 : i32, f32) loc(#loc22)
  ^bb7(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb18
    %33 = llvm.icmp "slt" %31, %arg11 : i32 loc(#loc22)
    llvm.cond_br %33, ^bb8, ^bb19 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %34 = llvm.add %19, %31  : i32 loc(#loc23)
    %35 = llvm.icmp "slt" %34, %3 : i32 loc(#loc24)
    %36 = llvm.icmp "sge" %34, %arg4 : i32 loc(#loc25)
    %37 = llvm.or %35, %36  : i1 loc(#loc26)
    llvm.cond_br %37, ^bb9(%32 : f32), ^bb10 loc(#loc27)
  ^bb9(%38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb8, ^bb11
    llvm.br ^bb17(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%3, %32 : i32, f32) loc(#loc28)
  ^bb11(%39: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %40: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %41 = llvm.icmp "slt" %39, %arg12 : i32 loc(#loc28)
    llvm.cond_br %41, ^bb12, ^bb9(%40 : f32) loc(#loc28)
  ^bb12:  // pred: ^bb11
    %42 = llvm.add %20, %39  : i32 loc(#loc29)
    %43 = llvm.icmp "slt" %42, %3 : i32 loc(#loc30)
    %44 = llvm.icmp "sge" %42, %arg5 : i32 loc(#loc31)
    %45 = llvm.or %43, %44  : i1 loc(#loc32)
    llvm.cond_br %45, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%40 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %46 = llvm.getelementptr %arg7[%28] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %47 = llvm.mul %31, %arg10  : i32 loc(#loc35)
    %48 = llvm.getelementptr %46[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %49 = llvm.getelementptr %48[%39] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %50 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %49, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %51 = llvm.bitcast %50 : i32 to vector<1xf32> loc(#loc38)
    %52 = llvm.extractelement %51[%0 : i32] : vector<1xf32> loc(#loc38)
    %53 = llvm.getelementptr %arg0[%30] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %54 = llvm.mul %34, %arg3  : i32 loc(#loc40)
    %55 = llvm.getelementptr %53[%54] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %56 = llvm.getelementptr %55[%42] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %57 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %56, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %58 = llvm.bitcast %57 : i32 to vector<1xf32> loc(#loc43)
    %59 = llvm.extractelement %58[%0 : i32] : vector<1xf32> loc(#loc43)
    %60 = llvm.fmul %59, %52  : f32 loc(#loc44)
    %61 = llvm.fadd %40, %60  : f32 loc(#loc45)
    llvm.br ^bb15(%61 : f32) loc(#loc33)
  ^bb15(%62: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %63 = llvm.add %39, %4  : i32 loc(#loc28)
    llvm.br ^bb11(%63, %62 : i32, f32) loc(#loc28)
  ^bb17(%64: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // pred: ^bb9
    llvm.br ^bb18 loc(#loc27)
  ^bb18:  // pred: ^bb17
    %65 = llvm.add %31, %4  : i32 loc(#loc22)
    llvm.br ^bb7(%65, %64 : i32, f32) loc(#loc22)
  ^bb19:  // pred: ^bb7
    %66 = llvm.add %24, %4  : i32 loc(#loc17)
    llvm.br ^bb5(%66, %32 : i32, f32) loc(#loc17)
  ^bb20:  // pred: ^bb5
    %67 = llvm.fadd %25, %23  : f32 loc(#loc46)
    %68 = llvm.mul %17, %arg18  : i32 loc(#loc47)
    %69 = llvm.add %14, %68  : i32 loc(#loc48)
    %70 = llvm.add %69, %18  : i32 loc(#loc49)
    %71 = llvm.getelementptr %arg15[%70] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %72 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %73 = llvm.and %1, %1  : i1 loc(#loc51)
    %74 = llvm.icmp "eq" %72, %3 : i32 loc(#loc51)
    %75 = llvm.and %73, %74  : i1 loc(#loc51)
    %76 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %77 = llvm.insertelement %67, %76[%3 : i32] : vector<1xf32> loc(#loc51)
    %78 = llvm.bitcast %77 : vector<1xf32> to i32 loc(#loc51)
    %79 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %78, %71, %75 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %80 = llvm.add %15, %4  : i32 loc(#loc12)
    llvm.br ^bb3(%80 : i32) loc(#loc12)
  ^bb21:  // pred: ^bb3
    %81 = llvm.add %9, %4  : i32 loc(#loc3)
    llvm.br ^bb1(%81 : i32) loc(#loc3)
  ^bb22:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc53)
} loc(#loc)
#di_file = #llvm.di_file<"conv_kernel.py" in "/home/meng/torch-compiler/models/triton_kernel">
#di_subroutine_type = #llvm.di_subroutine_type<callingConvention = DW_CC_normal>
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)
#di_compile_unit = #llvm.di_compile_unit<sourceLanguage = DW_LANG_C, file = #di_file, producer = "triton", isOptimized = true, emissionKind = LineTablesOnly>
#di_subprogram = #llvm.di_subprogram<compileUnit = #di_compile_unit, scope = #di_file, name = "conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c", linkageName = "conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c", file = #di_file, line = 18, scopeLine = 18, subprogramFlags = "Definition|Optimized", type = #di_subroutine_type>
#loc53 = loc(fused<#di_subprogram>[#loc])


// -----// IR Dump Before Inliner (inline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %2 = tt.get_program_id z : i32 loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc4)
    %c1_i32 = arith.constant 1 : i32 loc(#loc4)
    %3 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc4)
    %4 = arith.bitcast %arg13 : i32 to i32 loc(#loc4)
    %5 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc4)
    %6 = llvm.mlir.undef : i32 loc(#loc4)
    %7 = scf.for %arg23 = %3 to %4 step %5 iter_args(%arg24 = %2) -> (i32)  : i32 {
      %8 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %9 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc6)
      %c1_i32_1 = arith.constant 1 : i32 loc(#loc6)
      %10 = arith.bitcast %c0_i32_0 : i32 to i32 loc(#loc6)
      %11 = arith.bitcast %9 : i32 to i32 loc(#loc6)
      %12 = arith.bitcast %c1_i32_1 : i32 to i32 loc(#loc6)
      %13 = llvm.mlir.undef : i32 loc(#loc6)
      scf.for %arg25 = %10 to %11 step %12  : i32 {
        %14 = arith.divsi %arg25, %arg20 : i32 loc(#loc7)
        %15 = arith.remsi %arg25, %arg20 : i32 loc(#loc8)
        %c1_i32_2 = arith.constant 1 : i32 loc(#loc9)
        %16 = arith.muli %14, %c1_i32_2 : i32 loc(#loc9)
        %17 = arith.subi %16, %arg21 : i32 loc(#loc10)
        %c1_i32_3 = arith.constant 1 : i32 loc(#loc11)
        %18 = arith.muli %15, %c1_i32_3 : i32 loc(#loc11)
        %19 = arith.subi %18, %arg22 : i32 loc(#loc12)
        %20 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc13)
        %21 = tt.load %20 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc14)
        %cst = arith.constant 0.000000e+00 : f32 loc(#loc15)
        %c0_i32_4 = arith.constant 0 : i32 loc(#loc16)
        %c1_i32_5 = arith.constant 1 : i32 loc(#loc16)
        %22 = arith.bitcast %c0_i32_4 : i32 to i32 loc(#loc16)
        %23 = arith.bitcast %arg6 : i32 to i32 loc(#loc16)
        %24 = arith.bitcast %c1_i32_5 : i32 to i32 loc(#loc16)
        %25 = llvm.mlir.undef : i32 loc(#loc16)
        %26 = scf.for %arg26 = %22 to %23 step %24 iter_args(%arg27 = %cst) -> (f32)  : i32 {
          %36 = arith.muli %arg23, %arg8 : i32 loc(#loc17)
          %37 = arith.muli %arg26, %arg9 : i32 loc(#loc18)
          %38 = arith.addi %36, %37 : i32 loc(#loc19)
          %39 = arith.muli %0, %arg1 : i32 loc(#loc20)
          %40 = arith.muli %arg26, %arg2 : i32 loc(#loc21)
          %41 = arith.addi %39, %40 : i32 loc(#loc22)
          %c0_i32_7 = arith.constant 0 : i32 loc(#loc23)
          %c1_i32_8 = arith.constant 1 : i32 loc(#loc23)
          %42 = arith.bitcast %c0_i32_7 : i32 to i32 loc(#loc23)
          %43 = arith.bitcast %arg11 : i32 to i32 loc(#loc23)
          %44 = arith.bitcast %c1_i32_8 : i32 to i32 loc(#loc23)
          %45 = llvm.mlir.undef : i32 loc(#loc23)
          %46 = scf.for %arg28 = %42 to %43 step %44 iter_args(%arg29 = %arg27) -> (f32)  : i32 {
            %c1_i32_9 = arith.constant 1 : i32 loc(#loc24)
            %47 = arith.muli %arg28, %c1_i32_9 : i32 loc(#loc24)
            %48 = arith.addi %17, %47 : i32 loc(#loc25)
            %c0_i32_10 = arith.constant 0 : i32 loc(#loc26)
            %49 = arith.cmpi slt, %48, %c0_i32_10 : i32 loc(#loc26)
            %50 = arith.cmpi sge, %48, %arg4 : i32 loc(#loc27)
            %51 = arith.ori %49, %50 : i1 loc(#loc28)
            %true = arith.constant true loc(#loc29)
            %52 = arith.xori %51, %true : i1 loc(#loc29)
            %53 = scf.if %52 -> (f32) {
              %c0_i32_11 = arith.constant 0 : i32 loc(#loc31)
              %c1_i32_12 = arith.constant 1 : i32 loc(#loc31)
              %54 = arith.bitcast %c0_i32_11 : i32 to i32 loc(#loc31)
              %55 = arith.bitcast %arg12 : i32 to i32 loc(#loc31)
              %56 = arith.bitcast %c1_i32_12 : i32 to i32 loc(#loc31)
              %57 = llvm.mlir.undef : i32 loc(#loc31)
              %58 = scf.for %arg30 = %54 to %55 step %56 iter_args(%arg31 = %arg29) -> (f32)  : i32 {
                %c1_i32_13 = arith.constant 1 : i32 loc(#loc32)
                %59 = arith.muli %arg30, %c1_i32_13 : i32 loc(#loc32)
                %60 = arith.addi %19, %59 : i32 loc(#loc33)
                %c0_i32_14 = arith.constant 0 : i32 loc(#loc34)
                %61 = arith.cmpi slt, %60, %c0_i32_14 : i32 loc(#loc34)
                %62 = arith.cmpi sge, %60, %arg5 : i32 loc(#loc35)
                %63 = arith.ori %61, %62 : i1 loc(#loc36)
                %true_15 = arith.constant true loc(#loc37)
                %64 = arith.xori %63, %true_15 : i1 loc(#loc37)
                %65 = scf.if %64 -> (f32) {
                  %66 = tt.addptr %arg7, %38 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %67 = arith.muli %arg28, %arg10 : i32 loc(#loc40)
                  %68 = tt.addptr %66, %67 : !tt.ptr<f32, 1>, i32 loc(#loc41)
                  %c1_i32_16 = arith.constant 1 : i32 loc(#loc42)
                  %69 = arith.muli %arg30, %c1_i32_16 : i32 loc(#loc42)
                  %70 = tt.addptr %68, %69 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %71 = tt.load %70 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %72 = tt.addptr %arg0, %41 : !tt.ptr<f32, 1>, i32 loc(#loc45)
                  %73 = arith.muli %48, %arg3 : i32 loc(#loc46)
                  %74 = tt.addptr %72, %73 : !tt.ptr<f32, 1>, i32 loc(#loc47)
                  %c1_i32_17 = arith.constant 1 : i32 loc(#loc48)
                  %75 = arith.muli %60, %c1_i32_17 : i32 loc(#loc48)
                  %76 = tt.addptr %74, %75 : !tt.ptr<f32, 1>, i32 loc(#loc49)
                  %77 = tt.load %76 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc50)
                  %78 = arith.mulf %77, %71 : f32 loc(#loc51)
                  %79 = arith.addf %arg31, %78 : f32 loc(#loc52)
                  scf.yield %79 : f32 loc(#loc52)
                } else {
                  scf.yield %arg31 : f32 loc(#loc53)
                } loc(#loc38)
                scf.yield %65 : f32 loc(#loc54)
              } loc(#loc31)
              scf.yield %58 : f32 loc(#loc31)
            } else {
              scf.yield %arg29 : f32 loc(#loc53)
            } loc(#loc30)
            scf.yield %53 : f32 loc(#loc55)
          } loc(#loc23)
          scf.yield %46 : f32 loc(#loc56)
        } loc(#loc16)
        %27 = arith.addf %26, %21 : f32 loc(#loc57)
        %28 = arith.muli %0, %arg16 : i32 loc(#loc58)
        %29 = arith.muli %arg23, %arg17 : i32 loc(#loc59)
        %30 = arith.addi %28, %29 : i32 loc(#loc60)
        %31 = arith.muli %14, %arg18 : i32 loc(#loc61)
        %32 = arith.addi %30, %31 : i32 loc(#loc62)
        %c1_i32_6 = arith.constant 1 : i32 loc(#loc63)
        %33 = arith.muli %15, %c1_i32_6 : i32 loc(#loc63)
        %34 = arith.addi %32, %33 : i32 loc(#loc64)
        %35 = tt.addptr %arg15, %34 : !tt.ptr<f32, 1>, i32 loc(#loc65)
        tt.store %35, %27 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc66)
      } loc(#loc6)
      scf.yield %13 : i32 loc(#loc67)
    } loc(#loc4)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":53:32)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":54:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:41)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:41)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:48)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:28)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:56)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:36)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:103)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:107)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc53 = loc(unknown)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc57 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc58 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc59 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc60 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc61 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc62 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc63 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:30)
#loc64 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc65 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc66 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc67 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:8)
#loc68 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('tt.func' operation: @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %2 = tt.get_program_id z : i32 loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc4)
    %c1_i32 = arith.constant 1 : i32 loc(#loc4)
    %3 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc4)
    %4 = arith.bitcast %arg13 : i32 to i32 loc(#loc4)
    %5 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc4)
    %6 = llvm.mlir.undef : i32 loc(#loc4)
    %7 = scf.for %arg23 = %3 to %4 step %5 iter_args(%arg24 = %2) -> (i32)  : i32 {
      %8 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %9 = arith.muli %arg19, %arg20 : i32 loc(#loc5)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc6)
      %c1_i32_1 = arith.constant 1 : i32 loc(#loc6)
      %10 = arith.bitcast %c0_i32_0 : i32 to i32 loc(#loc6)
      %11 = arith.bitcast %9 : i32 to i32 loc(#loc6)
      %12 = arith.bitcast %c1_i32_1 : i32 to i32 loc(#loc6)
      %13 = llvm.mlir.undef : i32 loc(#loc6)
      scf.for %arg25 = %10 to %11 step %12  : i32 {
        %14 = arith.divsi %arg25, %arg20 : i32 loc(#loc7)
        %15 = arith.remsi %arg25, %arg20 : i32 loc(#loc8)
        %c1_i32_2 = arith.constant 1 : i32 loc(#loc9)
        %16 = arith.muli %14, %c1_i32_2 : i32 loc(#loc9)
        %17 = arith.subi %16, %arg21 : i32 loc(#loc10)
        %c1_i32_3 = arith.constant 1 : i32 loc(#loc11)
        %18 = arith.muli %15, %c1_i32_3 : i32 loc(#loc11)
        %19 = arith.subi %18, %arg22 : i32 loc(#loc12)
        %20 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc13)
        %21 = tt.load %20 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc14)
        %cst = arith.constant 0.000000e+00 : f32 loc(#loc15)
        %c0_i32_4 = arith.constant 0 : i32 loc(#loc16)
        %c1_i32_5 = arith.constant 1 : i32 loc(#loc16)
        %22 = arith.bitcast %c0_i32_4 : i32 to i32 loc(#loc16)
        %23 = arith.bitcast %arg6 : i32 to i32 loc(#loc16)
        %24 = arith.bitcast %c1_i32_5 : i32 to i32 loc(#loc16)
        %25 = llvm.mlir.undef : i32 loc(#loc16)
        %26 = scf.for %arg26 = %22 to %23 step %24 iter_args(%arg27 = %cst) -> (f32)  : i32 {
          %36 = arith.muli %arg23, %arg8 : i32 loc(#loc17)
          %37 = arith.muli %arg26, %arg9 : i32 loc(#loc18)
          %38 = arith.addi %36, %37 : i32 loc(#loc19)
          %39 = arith.muli %0, %arg1 : i32 loc(#loc20)
          %40 = arith.muli %arg26, %arg2 : i32 loc(#loc21)
          %41 = arith.addi %39, %40 : i32 loc(#loc22)
          %c0_i32_7 = arith.constant 0 : i32 loc(#loc23)
          %c1_i32_8 = arith.constant 1 : i32 loc(#loc23)
          %42 = arith.bitcast %c0_i32_7 : i32 to i32 loc(#loc23)
          %43 = arith.bitcast %arg11 : i32 to i32 loc(#loc23)
          %44 = arith.bitcast %c1_i32_8 : i32 to i32 loc(#loc23)
          %45 = llvm.mlir.undef : i32 loc(#loc23)
          %46 = scf.for %arg28 = %42 to %43 step %44 iter_args(%arg29 = %arg27) -> (f32)  : i32 {
            %c1_i32_9 = arith.constant 1 : i32 loc(#loc24)
            %47 = arith.muli %arg28, %c1_i32_9 : i32 loc(#loc24)
            %48 = arith.addi %17, %47 : i32 loc(#loc25)
            %c0_i32_10 = arith.constant 0 : i32 loc(#loc26)
            %49 = arith.cmpi slt, %48, %c0_i32_10 : i32 loc(#loc26)
            %50 = arith.cmpi sge, %48, %arg4 : i32 loc(#loc27)
            %51 = arith.ori %49, %50 : i1 loc(#loc28)
            %true = arith.constant true loc(#loc29)
            %52 = arith.xori %51, %true : i1 loc(#loc29)
            %53 = scf.if %52 -> (f32) {
              %c0_i32_11 = arith.constant 0 : i32 loc(#loc31)
              %c1_i32_12 = arith.constant 1 : i32 loc(#loc31)
              %54 = arith.bitcast %c0_i32_11 : i32 to i32 loc(#loc31)
              %55 = arith.bitcast %arg12 : i32 to i32 loc(#loc31)
              %56 = arith.bitcast %c1_i32_12 : i32 to i32 loc(#loc31)
              %57 = llvm.mlir.undef : i32 loc(#loc31)
              %58 = scf.for %arg30 = %54 to %55 step %56 iter_args(%arg31 = %arg29) -> (f32)  : i32 {
                %c1_i32_13 = arith.constant 1 : i32 loc(#loc32)
                %59 = arith.muli %arg30, %c1_i32_13 : i32 loc(#loc32)
                %60 = arith.addi %19, %59 : i32 loc(#loc33)
                %c0_i32_14 = arith.constant 0 : i32 loc(#loc34)
                %61 = arith.cmpi slt, %60, %c0_i32_14 : i32 loc(#loc34)
                %62 = arith.cmpi sge, %60, %arg5 : i32 loc(#loc35)
                %63 = arith.ori %61, %62 : i1 loc(#loc36)
                %true_15 = arith.constant true loc(#loc37)
                %64 = arith.xori %63, %true_15 : i1 loc(#loc37)
                %65 = scf.if %64 -> (f32) {
                  %66 = tt.addptr %arg7, %38 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %67 = arith.muli %arg28, %arg10 : i32 loc(#loc40)
                  %68 = tt.addptr %66, %67 : !tt.ptr<f32, 1>, i32 loc(#loc41)
                  %c1_i32_16 = arith.constant 1 : i32 loc(#loc42)
                  %69 = arith.muli %arg30, %c1_i32_16 : i32 loc(#loc42)
                  %70 = tt.addptr %68, %69 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %71 = tt.load %70 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %72 = tt.addptr %arg0, %41 : !tt.ptr<f32, 1>, i32 loc(#loc45)
                  %73 = arith.muli %48, %arg3 : i32 loc(#loc46)
                  %74 = tt.addptr %72, %73 : !tt.ptr<f32, 1>, i32 loc(#loc47)
                  %c1_i32_17 = arith.constant 1 : i32 loc(#loc48)
                  %75 = arith.muli %60, %c1_i32_17 : i32 loc(#loc48)
                  %76 = tt.addptr %74, %75 : !tt.ptr<f32, 1>, i32 loc(#loc49)
                  %77 = tt.load %76 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc50)
                  %78 = arith.mulf %77, %71 : f32 loc(#loc51)
                  %79 = arith.addf %arg31, %78 : f32 loc(#loc52)
                  scf.yield %79 : f32 loc(#loc52)
                } else {
                  scf.yield %arg31 : f32 loc(#loc53)
                } loc(#loc38)
                scf.yield %65 : f32 loc(#loc54)
              } loc(#loc31)
              scf.yield %58 : f32 loc(#loc31)
            } else {
              scf.yield %arg29 : f32 loc(#loc53)
            } loc(#loc30)
            scf.yield %53 : f32 loc(#loc55)
          } loc(#loc23)
          scf.yield %46 : f32 loc(#loc56)
        } loc(#loc16)
        %27 = arith.addf %26, %21 : f32 loc(#loc57)
        %28 = arith.muli %0, %arg16 : i32 loc(#loc58)
        %29 = arith.muli %arg23, %arg17 : i32 loc(#loc59)
        %30 = arith.addi %28, %29 : i32 loc(#loc60)
        %31 = arith.muli %14, %arg18 : i32 loc(#loc61)
        %32 = arith.addi %30, %31 : i32 loc(#loc62)
        %c1_i32_6 = arith.constant 1 : i32 loc(#loc63)
        %33 = arith.muli %15, %c1_i32_6 : i32 loc(#loc63)
        %34 = arith.addi %32, %33 : i32 loc(#loc64)
        %35 = tt.addptr %arg15, %34 : !tt.ptr<f32, 1>, i32 loc(#loc65)
        tt.store %35, %27 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc66)
      } loc(#loc6)
      scf.yield %13 : i32 loc(#loc67)
    } loc(#loc4)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":53:32)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":54:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:41)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:41)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:48)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:28)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:56)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:36)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:103)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:107)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc53 = loc(unknown)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc57 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc58 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc59 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc60 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc61 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc62 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc63 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:30)
#loc64 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc65 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc66 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc67 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:8)
#loc68 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonRewriteTensorPointer (triton-rewrite-tensor-pointer) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Inliner (inline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('tt.func' operation: @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonCombineOps (triton-combine) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonReorderBroadcast (triton-reorder-broadcast) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before LoopInvariantCodeMotion (loop-invariant-code-motion) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %2 = arith.divsi %arg24, %arg20 : i32 loc(#loc6)
        %3 = arith.remsi %arg24, %arg20 : i32 loc(#loc7)
        %4 = arith.subi %2, %arg21 : i32 loc(#loc8)
        %5 = arith.subi %3, %arg22 : i32 loc(#loc9)
        %6 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc10)
        %7 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc11)
        %8 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %17 = arith.muli %arg23, %arg8 : i32 loc(#loc13)
          %18 = arith.muli %arg25, %arg9 : i32 loc(#loc14)
          %19 = arith.addi %17, %18 : i32 loc(#loc15)
          %20 = arith.muli %0, %arg1 : i32 loc(#loc16)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc17)
          %22 = arith.addi %20, %21 : i32 loc(#loc18)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %4, %arg27 : i32 loc(#loc20)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc21)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc22)
            %27 = arith.ori %25, %26 : i1 loc(#loc23)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc25)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %5, %arg29 : i32 loc(#loc27)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc28)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc29)
                %33 = arith.ori %31, %32 : i1 loc(#loc30)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc25)
                } else {
                  %35 = tt.addptr %arg7, %19 : !tt.ptr<f32, 1>, i32 loc(#loc32)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc33)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc34)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc36)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc38)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc39)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc41)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc42)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc43)
                  scf.yield %46 : f32 loc(#loc43)
                } loc(#loc31)
                scf.yield %34 : f32 loc(#loc44)
              } loc(#loc26)
              scf.yield %29 : f32 loc(#loc26)
            } loc(#loc24)
            scf.yield %28 : f32 loc(#loc45)
          } loc(#loc19)
          scf.yield %23 : f32 loc(#loc46)
        } loc(#loc12)
        %9 = arith.addf %8, %7 : f32 loc(#loc47)
        %10 = arith.muli %0, %arg16 : i32 loc(#loc48)
        %11 = arith.muli %arg23, %arg17 : i32 loc(#loc49)
        %12 = arith.addi %10, %11 : i32 loc(#loc50)
        %13 = arith.muli %2, %arg18 : i32 loc(#loc51)
        %14 = arith.addi %12, %13 : i32 loc(#loc52)
        %15 = arith.addi %14, %3 : i32 loc(#loc53)
        %16 = tt.addptr %arg15, %15 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %16, %9 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc5)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc25 = loc(unknown)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before SymbolDCE (symbol-dce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before ConvertTritonToTritonGPU (convert-triton-to-tritongpu) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUCoalesce (tritongpu-coalesce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPlanCTAPass (triton-nvidia-gpu-plan-cta) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURewriteTensorPointer (tritongpu-rewrite-tensor-pointer) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPlanCTAPass (triton-nvidia-gpu-plan-cta) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUAccelerateMatmul (tritongpu-accelerate-matmul) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeDotOperands (tritongpu-optimize-dot-operands) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPipeline (tritongpu-pipeline) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before MaterializeLoadStore (triton-nvidia-gpu-materialize-load-store) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUPrefetch (tritongpu-prefetch) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeDotOperands (tritongpu-optimize-dot-operands) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUDecomposeConversions (tritongpu-decompose-conversions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUWSFixupMissingAttrs (triton-nvidia-gpu-ws-fixup-missing-attrs) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUReorderInstructions (tritongpu-reorder-instructions) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before CSE (cse) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before SymbolDCE (symbol-dce) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUWSFixupMissingAttrs (triton-nvidia-gpu-ws-fixup-missing-attrs) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before TritonGPUOptimizeThreadLocality (tritongpu-optimize-thread-locality) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump Before Canonicalizer (canonicalize) ('builtin.module' operation) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    scf.for %arg23 = %c0_i32 to %arg13 step %c1_i32  : i32 {
      %4 = tt.addptr %arg14, %arg23 : !tt.ptr<f32, 1>, i32 loc(#loc7)
      %5 = arith.muli %arg23, %arg8 : i32 loc(#loc8)
      %6 = arith.muli %arg23, %arg17 : i32 loc(#loc9)
      %7 = arith.addi %3, %6 : i32 loc(#loc10)
      scf.for %arg24 = %c0_i32 to %1 step %c1_i32  : i32 {
        %8 = arith.divsi %arg24, %arg20 : i32 loc(#loc12)
        %9 = arith.remsi %arg24, %arg20 : i32 loc(#loc13)
        %10 = arith.subi %8, %arg21 : i32 loc(#loc14)
        %11 = arith.subi %9, %arg22 : i32 loc(#loc15)
        %12 = tt.load %4 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
        %13 = scf.for %arg25 = %c0_i32 to %arg6 step %c1_i32 iter_args(%arg26 = %cst) -> (f32)  : i32 {
          %19 = arith.muli %arg25, %arg9 : i32 loc(#loc18)
          %20 = arith.addi %5, %19 : i32 loc(#loc19)
          %21 = arith.muli %arg25, %arg2 : i32 loc(#loc20)
          %22 = arith.addi %2, %21 : i32 loc(#loc21)
          %23 = scf.for %arg27 = %c0_i32 to %arg11 step %c1_i32 iter_args(%arg28 = %arg26) -> (f32)  : i32 {
            %24 = arith.addi %10, %arg27 : i32 loc(#loc23)
            %25 = arith.cmpi slt, %24, %c0_i32 : i32 loc(#loc24)
            %26 = arith.cmpi sge, %24, %arg4 : i32 loc(#loc25)
            %27 = arith.ori %25, %26 : i1 loc(#loc26)
            %28 = scf.if %27 -> (f32) {
              scf.yield %arg28 : f32 loc(#loc28)
            } else {
              %29 = scf.for %arg29 = %c0_i32 to %arg12 step %c1_i32 iter_args(%arg30 = %arg28) -> (f32)  : i32 {
                %30 = arith.addi %11, %arg29 : i32 loc(#loc30)
                %31 = arith.cmpi slt, %30, %c0_i32 : i32 loc(#loc31)
                %32 = arith.cmpi sge, %30, %arg5 : i32 loc(#loc32)
                %33 = arith.ori %31, %32 : i1 loc(#loc33)
                %34 = scf.if %33 -> (f32) {
                  scf.yield %arg30 : f32 loc(#loc28)
                } else {
                  %35 = tt.addptr %arg7, %20 : !tt.ptr<f32, 1>, i32 loc(#loc35)
                  %36 = arith.muli %arg27, %arg10 : i32 loc(#loc36)
                  %37 = tt.addptr %35, %36 : !tt.ptr<f32, 1>, i32 loc(#loc37)
                  %38 = tt.addptr %37, %arg29 : !tt.ptr<f32, 1>, i32 loc(#loc38)
                  %39 = tt.load %38 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc39)
                  %40 = tt.addptr %arg0, %22 : !tt.ptr<f32, 1>, i32 loc(#loc40)
                  %41 = arith.muli %24, %arg3 : i32 loc(#loc41)
                  %42 = tt.addptr %40, %41 : !tt.ptr<f32, 1>, i32 loc(#loc42)
                  %43 = tt.addptr %42, %30 : !tt.ptr<f32, 1>, i32 loc(#loc43)
                  %44 = tt.load %43 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc44)
                  %45 = arith.mulf %44, %39 : f32 loc(#loc45)
                  %46 = arith.addf %arg30, %45 : f32 loc(#loc46)
                  scf.yield %46 : f32 loc(#loc46)
                } loc(#loc34)
                scf.yield %34 : f32 loc(#loc47)
              } loc(#loc29)
              scf.yield %29 : f32 loc(#loc29)
            } loc(#loc27)
            scf.yield %28 : f32 loc(#loc48)
          } loc(#loc22)
          scf.yield %23 : f32 loc(#loc49)
        } loc(#loc17)
        %14 = arith.addf %13, %12 : f32 loc(#loc50)
        %15 = arith.muli %8, %arg18 : i32 loc(#loc51)
        %16 = arith.addi %7, %15 : i32 loc(#loc52)
        %17 = arith.addi %16, %9 : i32 loc(#loc53)
        %18 = tt.addptr %arg15, %17 : !tt.ptr<f32, 1>, i32 loc(#loc54)
        tt.store %18, %14 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc55)
      } loc(#loc11)
    } loc(#loc1)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc(unknown)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:28)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:20)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc53 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc54 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc55 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc56 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After SCFToControlFlow (convert-scf-to-cf) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = arith.muli %arg19, %arg20 : i32 loc(#loc4)
    %2 = arith.muli %0, %arg1 : i32 loc(#loc5)
    %3 = arith.muli %0, %arg16 : i32 loc(#loc6)
    cf.br ^bb1(%c0_i32 : i32) loc(#loc1)
  ^bb1(%4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb22
    %5 = arith.cmpi slt, %4, %arg13 : i32 loc(#loc1)
    cf.cond_br %5, ^bb2, ^bb23 loc(#loc1)
  ^bb2:  // pred: ^bb1
    %6 = tt.addptr %arg14, %4 : !tt.ptr<f32, 1>, i32 loc(#loc7)
    %7 = arith.muli %4, %arg8 : i32 loc(#loc8)
    %8 = arith.muli %4, %arg17 : i32 loc(#loc9)
    %9 = arith.addi %3, %8 : i32 loc(#loc10)
    cf.br ^bb3(%c0_i32 : i32) loc(#loc11)
  ^bb3(%10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb21
    %11 = arith.cmpi slt, %10, %1 : i32 loc(#loc11)
    cf.cond_br %11, ^bb4, ^bb22 loc(#loc11)
  ^bb4:  // pred: ^bb3
    %12 = arith.divsi %10, %arg20 : i32 loc(#loc12)
    %13 = arith.remsi %10, %arg20 : i32 loc(#loc13)
    %14 = arith.subi %12, %arg21 : i32 loc(#loc14)
    %15 = arith.subi %13, %arg22 : i32 loc(#loc15)
    %16 = tt.load %6 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc16)
    cf.br ^bb5(%c0_i32, %cst : i32, f32) loc(#loc17)
  ^bb5(%17: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %18: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb20
    %19 = arith.cmpi slt, %17, %arg6 : i32 loc(#loc17)
    cf.cond_br %19, ^bb6, ^bb21 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %20 = arith.muli %17, %arg9 : i32 loc(#loc18)
    %21 = arith.addi %7, %20 : i32 loc(#loc19)
    %22 = arith.muli %17, %arg2 : i32 loc(#loc20)
    %23 = arith.addi %2, %22 : i32 loc(#loc21)
    cf.br ^bb7(%c0_i32, %18 : i32, f32) loc(#loc22)
  ^bb7(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb19
    %26 = arith.cmpi slt, %24, %arg11 : i32 loc(#loc22)
    cf.cond_br %26, ^bb8, ^bb20 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %27 = arith.addi %14, %24 : i32 loc(#loc23)
    %28 = arith.cmpi slt, %27, %c0_i32 : i32 loc(#loc24)
    %29 = arith.cmpi sge, %27, %arg4 : i32 loc(#loc25)
    %30 = arith.ori %28, %29 : i1 loc(#loc26)
    cf.cond_br %30, ^bb9, ^bb10 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cf.br ^bb18(%25 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    cf.br ^bb11(%c0_i32, %25 : i32, f32) loc(#loc28)
  ^bb11(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %33 = arith.cmpi slt, %31, %arg12 : i32 loc(#loc28)
    cf.cond_br %33, ^bb12, ^bb17 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %34 = arith.addi %15, %31 : i32 loc(#loc29)
    %35 = arith.cmpi slt, %34, %c0_i32 : i32 loc(#loc30)
    %36 = arith.cmpi sge, %34, %arg5 : i32 loc(#loc31)
    %37 = arith.ori %35, %36 : i1 loc(#loc32)
    cf.cond_br %37, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    cf.br ^bb15(%32 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %38 = tt.addptr %arg7, %21 : !tt.ptr<f32, 1>, i32 loc(#loc34)
    %39 = arith.muli %24, %arg10 : i32 loc(#loc35)
    %40 = tt.addptr %38, %39 : !tt.ptr<f32, 1>, i32 loc(#loc36)
    %41 = tt.addptr %40, %31 : !tt.ptr<f32, 1>, i32 loc(#loc37)
    %42 = tt.load %41 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc38)
    %43 = tt.addptr %arg0, %23 : !tt.ptr<f32, 1>, i32 loc(#loc39)
    %44 = arith.muli %27, %arg3 : i32 loc(#loc40)
    %45 = tt.addptr %43, %44 : !tt.ptr<f32, 1>, i32 loc(#loc41)
    %46 = tt.addptr %45, %34 : !tt.ptr<f32, 1>, i32 loc(#loc42)
    %47 = tt.load %46 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32 loc(#loc43)
    %48 = arith.mulf %47, %42 : f32 loc(#loc44)
    %49 = arith.addf %32, %48 : f32 loc(#loc45)
    cf.br ^bb15(%49 : f32) loc(#loc33)
  ^bb15(%50: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    cf.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %51 = arith.addi %31, %c1_i32 : i32 loc(#loc28)
    cf.br ^bb11(%51, %50 : i32, f32) loc(#loc28)
  ^bb17:  // pred: ^bb11
    cf.br ^bb18(%32 : f32) loc(#loc27)
  ^bb18(%52: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // 2 preds: ^bb9, ^bb17
    cf.br ^bb19 loc(#loc27)
  ^bb19:  // pred: ^bb18
    %53 = arith.addi %24, %c1_i32 : i32 loc(#loc22)
    cf.br ^bb7(%53, %52 : i32, f32) loc(#loc22)
  ^bb20:  // pred: ^bb7
    %54 = arith.addi %17, %c1_i32 : i32 loc(#loc17)
    cf.br ^bb5(%54, %25 : i32, f32) loc(#loc17)
  ^bb21:  // pred: ^bb5
    %55 = arith.addf %18, %16 : f32 loc(#loc46)
    %56 = arith.muli %12, %arg18 : i32 loc(#loc47)
    %57 = arith.addi %9, %56 : i32 loc(#loc48)
    %58 = arith.addi %57, %13 : i32 loc(#loc49)
    %59 = tt.addptr %arg15, %58 : !tt.ptr<f32, 1>, i32 loc(#loc50)
    tt.store %59, %55 {cache = 1 : i32, evict = 1 : i32} : f32 loc(#loc51)
    %60 = arith.addi %10, %c1_i32 : i32 loc(#loc11)
    cf.br ^bb3(%60 : i32) loc(#loc11)
  ^bb22:  // pred: ^bb3
    %61 = arith.addi %4, %c1_i32 : i32 loc(#loc1)
    cf.br ^bb1(%61 : i32) loc(#loc1)
  ^bb23:  // pred: ^bb1
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After ConvertTritonGPUToLLVM (convert-triton-gpu-to-llvm) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [512 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.addressof @global_smem : !llvm.ptr<3> loc(#loc)
    %1 = llvm.bitcast %0 : !llvm.ptr<3> to !llvm.ptr<3> loc(#loc)
    %2 = builtin.unrealized_conversion_cast %arg15 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %3 = builtin.unrealized_conversion_cast %arg14 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %4 = builtin.unrealized_conversion_cast %arg7 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %5 = builtin.unrealized_conversion_cast %arg0 : !llvm.ptr<1> to !tt.ptr<f32, 1> loc(#loc)
    %6 = llvm.mlir.constant(1 : i32) : i32 loc(#loc1)
    %7 = llvm.mlir.constant(0 : i32) : i32 loc(#loc1)
    %8 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %9 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc3)
    %10 = llvm.mul %arg19, %arg20  : i32 loc(#loc4)
    %11 = llvm.mul %9, %arg1  : i32 loc(#loc5)
    %12 = llvm.mul %9, %arg16  : i32 loc(#loc6)
    llvm.br ^bb1(%7 : i32) loc(#loc1)
  ^bb1(%13: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb22
    %14 = llvm.icmp "slt" %13, %arg13 : i32 loc(#loc1)
    llvm.cond_br %14, ^bb2, ^bb23 loc(#loc1)
  ^bb2:  // pred: ^bb1
    %15 = llvm.getelementptr %arg14[%13] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc7)
    %16 = llvm.mul %13, %arg8  : i32 loc(#loc8)
    %17 = llvm.mul %13, %arg17  : i32 loc(#loc9)
    %18 = llvm.add %12, %17  : i32 loc(#loc10)
    llvm.br ^bb3(%7 : i32) loc(#loc11)
  ^bb3(%19: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb21
    %20 = llvm.icmp "slt" %19, %10 : i32 loc(#loc11)
    llvm.cond_br %20, ^bb4, ^bb22 loc(#loc11)
  ^bb4:  // pred: ^bb3
    %21 = llvm.sdiv %19, %arg20  : i32 loc(#loc12)
    %22 = llvm.srem %19, %arg20  : i32 loc(#loc13)
    %23 = llvm.sub %21, %arg21  : i32 loc(#loc14)
    %24 = llvm.sub %22, %arg22  : i32 loc(#loc15)
    %25 = llvm.mlir.constant(true) : i1 loc(#loc16)
    %26 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %15, %25 : (!llvm.ptr<1>, i1) -> i32 loc(#loc16)
    %27 = llvm.bitcast %26 : i32 to vector<1xf32> loc(#loc16)
    %28 = llvm.mlir.constant(0 : index) : i32 loc(#loc16)
    %29 = llvm.extractelement %27[%28 : i32] : vector<1xf32> loc(#loc16)
    llvm.br ^bb5(%7, %8 : i32, f32) loc(#loc17)
  ^bb5(%30: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %31: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb20
    %32 = llvm.icmp "slt" %30, %arg6 : i32 loc(#loc17)
    llvm.cond_br %32, ^bb6, ^bb21 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %33 = llvm.mul %30, %arg9  : i32 loc(#loc18)
    %34 = llvm.add %16, %33  : i32 loc(#loc19)
    %35 = llvm.mul %30, %arg2  : i32 loc(#loc20)
    %36 = llvm.add %11, %35  : i32 loc(#loc21)
    llvm.br ^bb7(%7, %31 : i32, f32) loc(#loc22)
  ^bb7(%37: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb19
    %39 = llvm.icmp "slt" %37, %arg11 : i32 loc(#loc22)
    llvm.cond_br %39, ^bb8, ^bb20 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %40 = llvm.add %23, %37  : i32 loc(#loc23)
    %41 = llvm.icmp "slt" %40, %7 : i32 loc(#loc24)
    %42 = llvm.icmp "sge" %40, %arg4 : i32 loc(#loc25)
    %43 = llvm.or %41, %42  : i1 loc(#loc26)
    llvm.cond_br %43, ^bb9, ^bb10 loc(#loc27)
  ^bb9:  // pred: ^bb8
    llvm.br ^bb18(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%7, %38 : i32, f32) loc(#loc28)
  ^bb11(%44: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %45: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %46 = llvm.icmp "slt" %44, %arg12 : i32 loc(#loc28)
    llvm.cond_br %46, ^bb12, ^bb17 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %47 = llvm.add %24, %44  : i32 loc(#loc29)
    %48 = llvm.icmp "slt" %47, %7 : i32 loc(#loc30)
    %49 = llvm.icmp "sge" %47, %arg5 : i32 loc(#loc31)
    %50 = llvm.or %48, %49  : i1 loc(#loc32)
    llvm.cond_br %50, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%45 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %51 = llvm.getelementptr %arg7[%34] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %52 = llvm.mul %37, %arg10  : i32 loc(#loc35)
    %53 = llvm.getelementptr %51[%52] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %54 = llvm.getelementptr %53[%44] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %55 = llvm.mlir.constant(true) : i1 loc(#loc38)
    %56 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %54, %55 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %57 = llvm.bitcast %56 : i32 to vector<1xf32> loc(#loc38)
    %58 = llvm.mlir.constant(0 : index) : i32 loc(#loc38)
    %59 = llvm.extractelement %57[%58 : i32] : vector<1xf32> loc(#loc38)
    %60 = llvm.getelementptr %arg0[%36] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %61 = llvm.mul %40, %arg3  : i32 loc(#loc40)
    %62 = llvm.getelementptr %60[%61] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %63 = llvm.getelementptr %62[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %64 = llvm.mlir.constant(true) : i1 loc(#loc43)
    %65 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %63, %64 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %66 = llvm.bitcast %65 : i32 to vector<1xf32> loc(#loc43)
    %67 = llvm.mlir.constant(0 : index) : i32 loc(#loc43)
    %68 = llvm.extractelement %66[%67 : i32] : vector<1xf32> loc(#loc43)
    %69 = llvm.fmul %68, %59  : f32 loc(#loc44)
    %70 = llvm.fadd %45, %69  : f32 loc(#loc45)
    llvm.br ^bb15(%70 : f32) loc(#loc33)
  ^bb15(%71: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %72 = llvm.add %44, %6  : i32 loc(#loc28)
    llvm.br ^bb11(%72, %71 : i32, f32) loc(#loc28)
  ^bb17:  // pred: ^bb11
    llvm.br ^bb18(%45 : f32) loc(#loc27)
  ^bb18(%73: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // 2 preds: ^bb9, ^bb17
    llvm.br ^bb19 loc(#loc27)
  ^bb19:  // pred: ^bb18
    %74 = llvm.add %37, %6  : i32 loc(#loc22)
    llvm.br ^bb7(%74, %73 : i32, f32) loc(#loc22)
  ^bb20:  // pred: ^bb7
    %75 = llvm.add %30, %6  : i32 loc(#loc17)
    llvm.br ^bb5(%75, %38 : i32, f32) loc(#loc17)
  ^bb21:  // pred: ^bb5
    %76 = llvm.fadd %31, %29  : f32 loc(#loc46)
    %77 = llvm.mul %21, %arg18  : i32 loc(#loc47)
    %78 = llvm.add %18, %77  : i32 loc(#loc48)
    %79 = llvm.add %78, %22  : i32 loc(#loc49)
    %80 = llvm.getelementptr %arg15[%79] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %81 = llvm.mlir.constant(true) : i1 loc(#loc51)
    %82 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %83 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %84 = nvgpu.cluster_id loc(#loc51)
    %85 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %86 = llvm.icmp "eq" %83, %85 : i32 loc(#loc51)
    %87 = llvm.and %81, %86  : i1 loc(#loc51)
    %88 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %89 = llvm.icmp "eq" %82, %88 : i32 loc(#loc51)
    %90 = llvm.and %87, %89  : i1 loc(#loc51)
    %91 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %92 = llvm.bitcast %76 : f32 to f32 loc(#loc51)
    %93 = llvm.mlir.constant(0 : i32) : i32 loc(#loc51)
    %94 = llvm.insertelement %92, %91[%93 : i32] : vector<1xf32> loc(#loc51)
    %95 = llvm.bitcast %94 : vector<1xf32> to i32 loc(#loc51)
    %96 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %95, %80, %90 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %97 = llvm.add %19, %6  : i32 loc(#loc11)
    llvm.br ^bb3(%97 : i32) loc(#loc11)
  ^bb22:  // pred: ^bb3
    %98 = llvm.add %13, %6  : i32 loc(#loc1)
    llvm.br ^bb1(%98 : i32) loc(#loc1)
  ^bb23:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After ConvertNVGPUToLLVM (convert-nv-gpu-to-llvm) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [512 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.constant(0 : index) : i32 loc(#loc1)
    %1 = llvm.mlir.constant(true) : i1 loc(#loc1)
    %2 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %3 = llvm.mlir.constant(0 : i32) : i32 loc(#loc3)
    %4 = llvm.mlir.constant(1 : i32) : i32 loc(#loc3)
    %5 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc4)
    %6 = llvm.mul %arg19, %arg20  : i32 loc(#loc5)
    %7 = llvm.mul %5, %arg1  : i32 loc(#loc6)
    %8 = llvm.mul %5, %arg16  : i32 loc(#loc7)
    llvm.br ^bb1(%3 : i32) loc(#loc3)
  ^bb1(%9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb21
    %10 = llvm.icmp "slt" %9, %arg13 : i32 loc(#loc3)
    llvm.cond_br %10, ^bb2, ^bb22 loc(#loc3)
  ^bb2:  // pred: ^bb1
    %11 = llvm.getelementptr %arg14[%9] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc8)
    %12 = llvm.mul %9, %arg8  : i32 loc(#loc9)
    %13 = llvm.mul %9, %arg17  : i32 loc(#loc10)
    %14 = llvm.add %8, %13  : i32 loc(#loc11)
    llvm.br ^bb3(%3 : i32) loc(#loc12)
  ^bb3(%15: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb20
    %16 = llvm.icmp "slt" %15, %6 : i32 loc(#loc12)
    llvm.cond_br %16, ^bb4, ^bb21 loc(#loc12)
  ^bb4:  // pred: ^bb3
    %17 = llvm.sdiv %15, %arg20  : i32 loc(#loc13)
    %18 = llvm.srem %15, %arg20  : i32 loc(#loc14)
    %19 = llvm.sub %17, %arg21  : i32 loc(#loc15)
    %20 = llvm.sub %18, %arg22  : i32 loc(#loc16)
    %21 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %11, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc1)
    %22 = llvm.bitcast %21 : i32 to vector<1xf32> loc(#loc1)
    %23 = llvm.extractelement %22[%0 : i32] : vector<1xf32> loc(#loc1)
    llvm.br ^bb5(%3, %2 : i32, f32) loc(#loc17)
  ^bb5(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb19
    %26 = llvm.icmp "slt" %24, %arg6 : i32 loc(#loc17)
    llvm.cond_br %26, ^bb6, ^bb20 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %27 = llvm.mul %24, %arg9  : i32 loc(#loc18)
    %28 = llvm.add %12, %27  : i32 loc(#loc19)
    %29 = llvm.mul %24, %arg2  : i32 loc(#loc20)
    %30 = llvm.add %7, %29  : i32 loc(#loc21)
    llvm.br ^bb7(%3, %25 : i32, f32) loc(#loc22)
  ^bb7(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb18
    %33 = llvm.icmp "slt" %31, %arg11 : i32 loc(#loc22)
    llvm.cond_br %33, ^bb8, ^bb19 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %34 = llvm.add %19, %31  : i32 loc(#loc23)
    %35 = llvm.icmp "slt" %34, %3 : i32 loc(#loc24)
    %36 = llvm.icmp "sge" %34, %arg4 : i32 loc(#loc25)
    %37 = llvm.or %35, %36  : i1 loc(#loc26)
    llvm.cond_br %37, ^bb9(%32 : f32), ^bb10 loc(#loc27)
  ^bb9(%38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb8, ^bb11
    llvm.br ^bb17(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%3, %32 : i32, f32) loc(#loc28)
  ^bb11(%39: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %40: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %41 = llvm.icmp "slt" %39, %arg12 : i32 loc(#loc28)
    llvm.cond_br %41, ^bb12, ^bb9(%40 : f32) loc(#loc28)
  ^bb12:  // pred: ^bb11
    %42 = llvm.add %20, %39  : i32 loc(#loc29)
    %43 = llvm.icmp "slt" %42, %3 : i32 loc(#loc30)
    %44 = llvm.icmp "sge" %42, %arg5 : i32 loc(#loc31)
    %45 = llvm.or %43, %44  : i1 loc(#loc32)
    llvm.cond_br %45, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%40 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %46 = llvm.getelementptr %arg7[%28] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %47 = llvm.mul %31, %arg10  : i32 loc(#loc35)
    %48 = llvm.getelementptr %46[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %49 = llvm.getelementptr %48[%39] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %50 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %49, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %51 = llvm.bitcast %50 : i32 to vector<1xf32> loc(#loc38)
    %52 = llvm.extractelement %51[%0 : i32] : vector<1xf32> loc(#loc38)
    %53 = llvm.getelementptr %arg0[%30] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %54 = llvm.mul %34, %arg3  : i32 loc(#loc40)
    %55 = llvm.getelementptr %53[%54] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %56 = llvm.getelementptr %55[%42] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %57 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %56, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %58 = llvm.bitcast %57 : i32 to vector<1xf32> loc(#loc43)
    %59 = llvm.extractelement %58[%0 : i32] : vector<1xf32> loc(#loc43)
    %60 = llvm.fmul %59, %52  : f32 loc(#loc44)
    %61 = llvm.fadd %40, %60  : f32 loc(#loc45)
    llvm.br ^bb15(%61 : f32) loc(#loc33)
  ^bb15(%62: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %63 = llvm.add %39, %4  : i32 loc(#loc28)
    llvm.br ^bb11(%63, %62 : i32, f32) loc(#loc28)
  ^bb17(%64: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // pred: ^bb9
    llvm.br ^bb18 loc(#loc27)
  ^bb18:  // pred: ^bb17
    %65 = llvm.add %31, %4  : i32 loc(#loc22)
    llvm.br ^bb7(%65, %64 : i32, f32) loc(#loc22)
  ^bb19:  // pred: ^bb7
    %66 = llvm.add %24, %4  : i32 loc(#loc17)
    llvm.br ^bb5(%66, %32 : i32, f32) loc(#loc17)
  ^bb20:  // pred: ^bb5
    %67 = llvm.fadd %25, %23  : f32 loc(#loc46)
    %68 = llvm.mul %17, %arg18  : i32 loc(#loc47)
    %69 = llvm.add %14, %68  : i32 loc(#loc48)
    %70 = llvm.add %69, %18  : i32 loc(#loc49)
    %71 = llvm.getelementptr %arg15[%70] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %72 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %73 = llvm.and %1, %1  : i1 loc(#loc51)
    %74 = llvm.icmp "eq" %72, %3 : i32 loc(#loc51)
    %75 = llvm.and %73, %74  : i1 loc(#loc51)
    %76 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %77 = llvm.insertelement %67, %76[%3 : i32] : vector<1xf32> loc(#loc51)
    %78 = llvm.bitcast %77 : vector<1xf32> to i32 loc(#loc51)
    %79 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %78, %71, %75 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %80 = llvm.add %15, %4  : i32 loc(#loc12)
    llvm.br ^bb3(%80 : i32) loc(#loc12)
  ^bb21:  // pred: ^bb3
    %81 = llvm.add %9, %4  : i32 loc(#loc3)
    llvm.br ^bb1(%81 : i32) loc(#loc3)
  ^bb22:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)


// -----// IR Dump After LLVMDIScope (enable-line-info) //----- //
#loc = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)
#loc2 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)
#loc3 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)
#loc12 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)
#loc17 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31)
#loc22 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33)
#loc27 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)
#loc28 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41)
#loc33 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)
module attributes {"triton_gpu.compute-capability" = 86 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.shared = 0 : i32, "triton_gpu.threads-per-warp" = 32 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8> loc(#loc)
  llvm.func @conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c(%arg0: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg3: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg4: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg5: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg6: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg7: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg8: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg10: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg11: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg12: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg14: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg15: !llvm.ptr<1> {tt.divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg18: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg19: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg20: i32 {tt.max_divisibility = 8 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg21: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0), %arg22: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":18:0)) attributes {noinline = false, nvvm.kernel = 1 : ui1, nvvm.maxntid = [512 : i32], sym_visibility = "public", "triton_gpu.num-tma-load" = 0 : i32, "triton_gpu.num-tma-store" = 0 : i32} {
    %0 = llvm.mlir.constant(0 : index) : i32 loc(#loc1)
    %1 = llvm.mlir.constant(true) : i1 loc(#loc1)
    %2 = llvm.mlir.constant(0.000000e+00 : f32) : f32 loc(#loc2)
    %3 = llvm.mlir.constant(0 : i32) : i32 loc(#loc3)
    %4 = llvm.mlir.constant(1 : i32) : i32 loc(#loc3)
    %5 = llvm.inline_asm asm_dialect = att operand_attrs = [] "mov.u32 $0, %ctaid.x;", "=r"  : () -> i32 loc(#loc4)
    %6 = llvm.mul %arg19, %arg20  : i32 loc(#loc5)
    %7 = llvm.mul %5, %arg1  : i32 loc(#loc6)
    %8 = llvm.mul %5, %arg16  : i32 loc(#loc7)
    llvm.br ^bb1(%3 : i32) loc(#loc3)
  ^bb1(%9: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:28)):  // 2 preds: ^bb0, ^bb21
    %10 = llvm.icmp "slt" %9, %arg13 : i32 loc(#loc3)
    llvm.cond_br %10, ^bb2, ^bb22 loc(#loc3)
  ^bb2:  // pred: ^bb1
    %11 = llvm.getelementptr %arg14[%9] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc8)
    %12 = llvm.mul %9, %arg8  : i32 loc(#loc9)
    %13 = llvm.mul %9, %arg17  : i32 loc(#loc10)
    %14 = llvm.add %8, %13  : i32 loc(#loc11)
    llvm.br ^bb3(%3 : i32) loc(#loc12)
  ^bb3(%15: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:33)):  // 2 preds: ^bb2, ^bb20
    %16 = llvm.icmp "slt" %15, %6 : i32 loc(#loc12)
    llvm.cond_br %16, ^bb4, ^bb21 loc(#loc12)
  ^bb4:  // pred: ^bb3
    %17 = llvm.sdiv %15, %arg20  : i32 loc(#loc13)
    %18 = llvm.srem %15, %arg20  : i32 loc(#loc14)
    %19 = llvm.sub %17, %arg21  : i32 loc(#loc15)
    %20 = llvm.sub %18, %arg22  : i32 loc(#loc16)
    %21 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %11, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc1)
    %22 = llvm.bitcast %21 : i32 to vector<1xf32> loc(#loc1)
    %23 = llvm.extractelement %22[%0 : i32] : vector<1xf32> loc(#loc1)
    llvm.br ^bb5(%3, %2 : i32, f32) loc(#loc17)
  ^bb5(%24: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":77:31), %25: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb4, ^bb19
    %26 = llvm.icmp "slt" %24, %arg6 : i32 loc(#loc17)
    llvm.cond_br %26, ^bb6, ^bb20 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %27 = llvm.mul %24, %arg9  : i32 loc(#loc18)
    %28 = llvm.add %12, %27  : i32 loc(#loc19)
    %29 = llvm.mul %24, %arg2  : i32 loc(#loc20)
    %30 = llvm.add %7, %29  : i32 loc(#loc21)
    llvm.br ^bb7(%3, %25 : i32, f32) loc(#loc22)
  ^bb7(%31: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":81:33), %32: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb6, ^bb18
    %33 = llvm.icmp "slt" %31, %arg11 : i32 loc(#loc22)
    llvm.cond_br %33, ^bb8, ^bb19 loc(#loc22)
  ^bb8:  // pred: ^bb7
    %34 = llvm.add %19, %31  : i32 loc(#loc23)
    %35 = llvm.icmp "slt" %34, %3 : i32 loc(#loc24)
    %36 = llvm.icmp "sge" %34, %arg4 : i32 loc(#loc25)
    %37 = llvm.or %35, %36  : i1 loc(#loc26)
    llvm.cond_br %37, ^bb9(%32 : f32), ^bb10 loc(#loc27)
  ^bb9(%38: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb8, ^bb11
    llvm.br ^bb17(%38 : f32) loc(#loc27)
  ^bb10:  // pred: ^bb8
    llvm.br ^bb11(%3, %32 : i32, f32) loc(#loc28)
  ^bb11(%39: i32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":84:41), %40: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":74:20)):  // 2 preds: ^bb10, ^bb16
    %41 = llvm.icmp "slt" %39, %arg12 : i32 loc(#loc28)
    llvm.cond_br %41, ^bb12, ^bb9(%40 : f32) loc(#loc28)
  ^bb12:  // pred: ^bb11
    %42 = llvm.add %20, %39  : i32 loc(#loc29)
    %43 = llvm.icmp "slt" %42, %3 : i32 loc(#loc30)
    %44 = llvm.icmp "sge" %42, %arg5 : i32 loc(#loc31)
    %45 = llvm.or %43, %44  : i1 loc(#loc32)
    llvm.cond_br %45, ^bb13, ^bb14 loc(#loc33)
  ^bb13:  // pred: ^bb12
    llvm.br ^bb15(%40 : f32) loc(#loc33)
  ^bb14:  // pred: ^bb12
    %46 = llvm.getelementptr %arg7[%28] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc34)
    %47 = llvm.mul %31, %arg10  : i32 loc(#loc35)
    %48 = llvm.getelementptr %46[%47] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc36)
    %49 = llvm.getelementptr %48[%39] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc37)
    %50 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %49, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc38)
    %51 = llvm.bitcast %50 : i32 to vector<1xf32> loc(#loc38)
    %52 = llvm.extractelement %51[%0 : i32] : vector<1xf32> loc(#loc38)
    %53 = llvm.getelementptr %arg0[%30] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc39)
    %54 = llvm.mul %34, %arg3  : i32 loc(#loc40)
    %55 = llvm.getelementptr %53[%54] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc41)
    %56 = llvm.getelementptr %55[%42] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc42)
    %57 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b" %56, %1 : (!llvm.ptr<1>, i1) -> i32 loc(#loc43)
    %58 = llvm.bitcast %57 : i32 to vector<1xf32> loc(#loc43)
    %59 = llvm.extractelement %58[%0 : i32] : vector<1xf32> loc(#loc43)
    %60 = llvm.fmul %59, %52  : f32 loc(#loc44)
    %61 = llvm.fadd %40, %60  : f32 loc(#loc45)
    llvm.br ^bb15(%61 : f32) loc(#loc33)
  ^bb15(%62: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:31)):  // 2 preds: ^bb13, ^bb14
    llvm.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    %63 = llvm.add %39, %4  : i32 loc(#loc28)
    llvm.br ^bb11(%63, %62 : i32, f32) loc(#loc28)
  ^bb17(%64: f32 loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:23)):  // pred: ^bb9
    llvm.br ^bb18 loc(#loc27)
  ^bb18:  // pred: ^bb17
    %65 = llvm.add %31, %4  : i32 loc(#loc22)
    llvm.br ^bb7(%65, %64 : i32, f32) loc(#loc22)
  ^bb19:  // pred: ^bb7
    %66 = llvm.add %24, %4  : i32 loc(#loc17)
    llvm.br ^bb5(%66, %32 : i32, f32) loc(#loc17)
  ^bb20:  // pred: ^bb5
    %67 = llvm.fadd %25, %23  : f32 loc(#loc46)
    %68 = llvm.mul %17, %arg18  : i32 loc(#loc47)
    %69 = llvm.add %14, %68  : i32 loc(#loc48)
    %70 = llvm.add %69, %18  : i32 loc(#loc49)
    %71 = llvm.getelementptr %arg15[%70] : (!llvm.ptr<1>, i32) -> !llvm.ptr<1>, f32 loc(#loc50)
    %72 = nvvm.read.ptx.sreg.tid.x : i32 loc(#loc51)
    %73 = llvm.and %1, %1  : i1 loc(#loc51)
    %74 = llvm.icmp "eq" %72, %3 : i32 loc(#loc51)
    %75 = llvm.and %73, %74  : i1 loc(#loc51)
    %76 = llvm.mlir.undef : vector<1xf32> loc(#loc51)
    %77 = llvm.insertelement %67, %76[%3 : i32] : vector<1xf32> loc(#loc51)
    %78 = llvm.bitcast %77 : vector<1xf32> to i32 loc(#loc51)
    %79 = llvm.inline_asm has_side_effects asm_dialect = att operand_attrs = [] "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b" %78, %71, %75 : (i32, !llvm.ptr<1>, i1) -> !llvm.void loc(#loc51)
    %80 = llvm.add %15, %4  : i32 loc(#loc12)
    llvm.br ^bb3(%80 : i32) loc(#loc12)
  ^bb21:  // pred: ^bb3
    %81 = llvm.add %9, %4  : i32 loc(#loc3)
    llvm.br ^bb1(%81 : i32) loc(#loc3)
  ^bb22:  // pred: ^bb1
    llvm.return loc(#loc52)
  } loc(#loc53)
} loc(#loc)
#di_file = #llvm.di_file<"conv_kernel.py" in "/home/meng/torch-compiler/models/triton_kernel">
#di_subroutine_type = #llvm.di_subroutine_type<callingConvention = DW_CC_normal>
#loc1 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:31)
#loc4 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":52:32)
#loc5 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":57:46)
#loc6 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:42)
#loc7 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":94:28)
#loc8 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":72:42)
#loc9 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:43)
#loc10 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:29)
#loc11 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":95:16)
#loc13 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":60:41)
#loc14 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":61:40)
#loc15 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":68:52)
#loc16 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":69:52)
#loc18 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:73)
#loc19 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":78:65)
#loc20 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:71)
#loc21 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":79:63)
#loc23 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":82:42)
#loc24 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:36)
#loc25 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:51)
#loc26 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":83:43)
#loc29 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":85:50)
#loc30 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:44)
#loc31 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:59)
#loc32 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":86:51)
#loc34 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:57)
#loc35 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:77)
#loc36 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:71)
#loc37 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:97)
#loc38 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":87:44)
#loc39 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:61)
#loc40 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:81)
#loc41 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:74)
#loc42 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:100)
#loc43 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":88:49)
#loc44 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:50)
#loc45 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":89:41)
#loc46 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":91:21)
#loc47 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:30)
#loc48 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":96:16)
#loc49 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":97:16)
#loc50 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:34)
#loc51 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":99:46)
#loc52 = loc("/home/meng/torch-compiler/models/triton_kernel/conv_kernel.py":56:4)
#di_compile_unit = #llvm.di_compile_unit<sourceLanguage = DW_LANG_C, file = #di_file, producer = "triton", isOptimized = true, emissionKind = LineTablesOnly>
#di_subprogram = #llvm.di_subprogram<compileUnit = #di_compile_unit, scope = #di_file, name = "conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c", linkageName = "conv2d_kernel_0d1de2de34c5678d9101112c131415de16d17d18de19de20e21c22e23e24c25c26de27de28c29c30c", file = #di_file, line = 18, scopeLine = 18, subprogramFlags = "Definition|Optimized", type = #di_subroutine_type>
#loc53 = loc(fused<#di_subprogram>[#loc])


输出张量形状: torch.Size([1, 16, 8, 8])
输出张量的部分内容:
tensor([[[[151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          ...,
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.]],

         [[151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          ...,
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.]],

         [[151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          ...,
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.]],

         ...,

         [[151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          ...,
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.]],

         [[151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          ...,
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.]],

         [[151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          ...,
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.],
          [151., 151., 151.,  ..., 151., 151., 151.]]]], device='cuda:0')
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
-----> enter one ctas, gridX = 1, gridY = 1, gridZ = 1
